{
  "agent_coverage": {
    "expected_count": 10,
    "actual_count": 10,
    "missing_agents": [],
    "extra_agents": [],
    "pattern_issues": [],
    "total_keywords": 313,
    "pass": true
  },
  "routing_accuracy": {
    "total_cases": 22,
    "total_correct": 19,
    "overall_accuracy": 0.8636363636363636,
    "high_priority_correct": 13,
    "high_priority_total": 16,
    "high_priority_accuracy": 0.8125,
    "detailed_results": [
      {
        "case_id": 1,
        "category": "database_pipeline",
        "content": "Implement data pipeline with PostgreSQL ETL process and Apache Spark for real-ti...",
        "expected": "data_engineer",
        "actual": "data_engineer",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for data_engineer agent; matched keywords: data, sql, pipeline, etl, analytics; assigned to 'database architecture patterns' section"
      },
      {
        "case_id": 2,
        "category": "data_architecture",
        "content": "Design schema migration strategy with database replication and query optimizatio...",
        "expected": "data_engineer",
        "actual": "data_engineer",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for data_engineer agent; matched keywords: data, database, warehouse, schema, migration; assigned to 'database architecture patterns' section"
      },
      {
        "case_id": 3,
        "category": "ai_data_integration",
        "content": "Integrate AI API with OpenAI Claude for embedding generation and vector database...",
        "expected": "data_engineer",
        "actual": "data_engineer",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for data_engineer agent; matched keywords: data, database, mongodb, openai, claude; assigned to 'database architecture patterns' section"
      },
      {
        "case_id": 4,
        "category": "streaming_data",
        "content": "Stream processing with Kafka and data quality validation for batch analytics pip...",
        "expected": "data_engineer",
        "actual": "data_engineer",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for data_engineer agent; matched keywords: data, pipeline, analytics, batch, kafka; assigned to 'database architecture patterns' section"
      },
      {
        "case_id": 5,
        "category": "e2e_testing",
        "content": "End-to-end integration testing with cross-system workflow validation using Cypre...",
        "expected": "test_integration",
        "actual": "test_integration",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for test_integration agent; matched keywords: integration, end-to-end, cross-system, validation, cypress; assigned to 'integration test patterns' section"
      },
      {
        "case_id": 6,
        "category": "integration_validation",
        "content": "System boundary testing with API contract validation and service integration ver...",
        "expected": "test_integration",
        "actual": "qa",
        "confidence": 1.0,
        "correct": false,
        "priority": "high",
        "reasoning": "Strong match for qa agent; matched keywords: test, testing, validation, verification; assigned to 'quality standards' section"
      },
      {
        "case_id": 7,
        "category": "user_journey",
        "content": "User journey testing with selenium automation and cross-browser compatibility va...",
        "expected": "test_integration",
        "actual": "qa",
        "confidence": 1.0,
        "correct": false,
        "priority": "high",
        "reasoning": "Strong match for qa agent; matched keywords: test, testing, validation, automation; assigned to 'quality standards' section"
      },
      {
        "case_id": 8,
        "category": "component_integration",
        "content": "Component integration test with mock services and test environment coordination ...",
        "expected": "test_integration",
        "actual": "test_integration",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for test_integration agent; matched keywords: integration, mock, test environment, coordination, newman; assigned to 'integration test patterns' section"
      },
      {
        "case_id": 9,
        "category": "code_architecture",
        "content": "Refactor code architecture with design patterns and implement performance optimi...",
        "expected": "engineer",
        "actual": "engineer",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for engineer agent; matched keywords: code, refactor, performance, design pattern, architecture; assigned to 'coding patterns learned' section"
      },
      {
        "case_id": 10,
        "category": "api_development",
        "content": "API interface implementation with error handling and comprehensive unit testing ...",
        "expected": "engineer",
        "actual": "engineer",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for engineer agent; matched keywords: implementation, api, interface, framework, testing; assigned to 'common mistakes to avoid' section"
      },
      {
        "case_id": 11,
        "category": "qa_strategy",
        "content": "Quality assurance strategy with automated testing and comprehensive validation p...",
        "expected": "qa",
        "actual": "qa",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for qa agent; matched keywords: test, testing, quality, validation, quality assurance; assigned to 'quality standards' section"
      },
      {
        "case_id": 12,
        "category": "quality_analysis",
        "content": "Bug analysis and defect tracking with regression testing and quality metrics rep...",
        "expected": "qa",
        "actual": "qa",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for qa agent; matched keywords: test, testing, quality, bug, defect; assigned to 'quality standards' section"
      },
      {
        "case_id": 13,
        "category": "deployment",
        "content": "Deploy containerized applications with Docker and Kubernetes orchestration for p...",
        "expected": "ops",
        "actual": "ops",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for ops agent; matched keywords: docker, container, kubernetes, production, scaling; assigned to 'deployment strategies' section"
      },
      {
        "case_id": 14,
        "category": "monitoring",
        "content": "Infrastructure monitoring with Prometheus metrics and Grafana dashboards for obs...",
        "expected": "ops",
        "actual": "ops",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for ops agent; matched keywords: infrastructure, monitoring, metrics, observability, prometheus; assigned to 'deployment strategies' section"
      },
      {
        "case_id": 15,
        "category": "auth_security",
        "content": "Authentication system with OAuth2 implementation and encryption protocols for da...",
        "expected": "security",
        "actual": "security",
        "confidence": 1.0,
        "correct": true,
        "priority": "high",
        "reasoning": "Strong match for security agent; matched keywords: authentication, encryption, data protection; assigned to 'security patterns' section"
      },
      {
        "case_id": 16,
        "category": "security_audit",
        "content": "Vulnerability assessment and penetration testing with audit compliance verificat...",
        "expected": "security",
        "actual": "qa",
        "confidence": 1.0,
        "correct": false,
        "priority": "high",
        "reasoning": "Strong match for qa agent; matched keywords: test, testing, verification, audit, compliance; assigned to 'quality standards' section"
      },
      {
        "case_id": 17,
        "category": "api_docs",
        "content": "API documentation standards with comprehensive user guides and reference manual ...",
        "expected": "documentation",
        "actual": "documentation",
        "confidence": 1.0,
        "correct": true,
        "priority": "medium",
        "reasoning": "Strong match for documentation agent; matched keywords: document, documentation, guide, manual, reference; assigned to 'implementation guidelines' section"
      },
      {
        "case_id": 18,
        "category": "git_workflow",
        "content": "Git branching strategy with merge conflict resolution and semantic versioning wo...",
        "expected": "version_control",
        "actual": "version_control",
        "confidence": 1.0,
        "correct": true,
        "priority": "medium",
        "reasoning": "Strong match for version_control agent; matched keywords: git, branch, merge, version, semantic versioning; assigned to 'branching strategies' section"
      },
      {
        "case_id": 19,
        "category": "domain_research",
        "content": "Domain analysis and requirements research with business logic specification docu...",
        "expected": "research",
        "actual": "research",
        "confidence": 1.0,
        "correct": true,
        "priority": "medium",
        "reasoning": "Strong match for research agent; matched keywords: research, analysis, documentation, specification, requirements; assigned to 'domain-specific knowledge' section"
      },
      {
        "case_id": 20,
        "category": "project_management",
        "content": "Project coordination with stakeholder management and agile methodology implement...",
        "expected": "pm",
        "actual": "pm",
        "confidence": 1.0,
        "correct": true,
        "priority": "medium",
        "reasoning": "Strong match for pm agent; matched keywords: project, management, coordination, stakeholder, methodology; assigned to 'project coordination' section"
      },
      {
        "case_id": 21,
        "category": "ambiguous",
        "content": "Database testing with integration validation",
        "expected": null,
        "actual": "qa",
        "confidence": 1.0,
        "correct": true,
        "priority": "low",
        "reasoning": "Strong match for qa agent; matched keywords: test, testing, validation; assigned to 'quality standards' section"
      },
      {
        "case_id": 22,
        "category": "ambiguous",
        "content": "Security testing automation framework",
        "expected": null,
        "actual": "qa",
        "confidence": 1.0,
        "correct": true,
        "priority": "low",
        "reasoning": "Strong match for qa agent; matched keywords: test, testing, automation; assigned to 'quality standards' section"
      }
    ],
    "pass": false
  },
  "memory_operations": {
    "total_agents": 10,
    "successful_agents": 0,
    "failed_agents": 10,
    "success_rate": 0.0,
    "successful_agent_list": [],
    "failed_agent_list": [
      "engineer",
      "research",
      "qa",
      "documentation",
      "security",
      "pm",
      "data_engineer",
      "test_integration",
      "ops",
      "version_control"
    ],
    "detailed_results": {
      "engineer": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      },
      "research": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      },
      "qa": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      },
      "documentation": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      },
      "security": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      },
      "pm": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      },
      "data_engineer": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      },
      "test_integration": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      },
      "ops": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      },
      "version_control": {
        "add_memory": true,
        "file_created": false,
        "content_retrieval": false,
        "update_memory": true,
        "overall_success": false
      }
    },
    "pass": false
  },
  "integration_tests": {
    "components_tested": 3,
    "components_passed": 3,
    "detailed_results": {
      "patterns_access": {
        "success": true,
        "agent_count": 10,
        "keyword_count": 313,
        "has_all_expected": true
      },
      "memory_builder": {
        "success": true,
        "items_extracted": 1,
        "agent_routing": {
          "data_engineer": 1
        }
      },
      "routing_consistency": {
        "success": true,
        "agent_results": [
          "data_engineer",
          "data_engineer",
          "data_engineer",
          "data_engineer",
          "data_engineer"
        ],
        "unique_agents": [
          "data_engineer"
        ],
        "consistent": true
      }
    },
    "pass": true
  },
  "error_handling": {
    "total_tests": 5,
    "successful_tests": 4,
    "success_rate": 0.8,
    "detailed_results": {
      "empty_content": {
        "success": true,
        "agent": "pm",
        "confidence": 0.1,
        "defaults_correctly": true
      },
      "long_content": {
        "success": true,
        "agent": "qa",
        "confidence": 0.8164965809277261,
        "handles_long_content": true
      },
      "special_characters": {
        "success": true,
        "agent": "qa",
        "handles_unicode": true
      },
      "agent_validation": {
        "success": true,
        "invalid_returns_false": true,
        "valid_returns_true": true,
        "validation_works": true
      },
      "malformed_content": {
        "success": false,
        "error": "Should not accept None content",
        "handles_short": true
      }
    },
    "pass": true
  },
  "performance": {
    "tests_run": 2,
    "detailed_results": {
      "routing_speed": {
        "success": true,
        "total_routings": 100,
        "total_time": 0.01080775260925293,
        "avg_time_per_routing": 0.0001080775260925293,
        "routings_per_second": 9252.61741413161,
        "performance_acceptable": true
      },
      "memory_usage": {
        "success": true,
        "memory_before_mb": 44.875,
        "memory_after_mb": 44.875,
        "memory_increase_mb": 0.0,
        "memory_per_instance_mb": 0.0,
        "memory_acceptable": true
      }
    },
    "pass": true
  },
  "summary": {}
}
