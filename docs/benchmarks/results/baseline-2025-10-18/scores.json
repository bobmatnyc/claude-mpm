{
  "benchmark_type": "lightweight",
  "version": "1.0.0",
  "timestamp": "2025-10-18T00:17:12.958090",
  "total_agents": 7,
  "scores": {
    "python_engineer": {
      "agent_id": "python_engineer",
      "language": "python",
      "total_tests": 12,
      "tests_passed": 7,
      "pass_rate": 58.33,
      "total_points": 90.38,
      "max_points": 145.0,
      "percentage": 62.33,
      "grade": "C",
      "grade_description": "Adequate",
      "dimension_scores": {
        "correctness": {
          "points": 31.32,
          "max_points": 31.32,
          "percentage": 100.0,
          "weight": 0.4
        },
        "idiomaticity": {
          "points": 19.63,
          "max_points": 19.63,
          "percentage": 100.01,
          "weight": 0.25
        },
        "performance": {
          "points": 15.6,
          "max_points": 15.6,
          "percentage": 100.0,
          "weight": 0.2
        },
        "best_practices": {
          "points": 10.5,
          "max_points": 10.5,
          "percentage": 100.0,
          "weight": 0.15
        }
      },
      "difficulty_breakdown": {
        "easy": {
          "total": 4,
          "passed": 4,
          "points": 32.82,
          "max_points": 40.0,
          "percentage": 82.05
        },
        "medium": {
          "total": 5,
          "passed": 2,
          "points": 35.27,
          "max_points": 60.0,
          "percentage": 58.78
        },
        "hard": {
          "total": 3,
          "passed": 1,
          "points": 22.29,
          "max_points": 45.0,
          "percentage": 49.53
        }
      },
      "category_scores": {
        "algorithms": {
          "total": 4,
          "passed": 2,
          "points": 29.62,
          "max_points": 49.0,
          "percentage": 60.45
        },
        "data_structures": {
          "total": 3,
          "passed": 2,
          "points": 25.19,
          "max_points": 37.0,
          "percentage": 68.08
        },
        "real_world": {
          "total": 2,
          "passed": 2,
          "points": 19.45,
          "max_points": 22.0,
          "percentage": 88.41
        },
        "string_manipulation": {
          "total": 1,
          "passed": 1,
          "points": 8.41,
          "max_points": 10.0,
          "percentage": 84.1
        },
        "async_programming": {
          "total": 2,
          "passed": 0,
          "points": 7.71,
          "max_points": 27.0,
          "percentage": 28.56
        }
      },
      "strengths": [
        "Strong idiomaticity (100.0%)",
        "Excellent easy test performance (100%)",
        "Excels in real_world (88.4%)"
      ],
      "weaknesses": [
        "Struggles with medium tests (40%)",
        "Struggles with hard tests (33%)",
        "Needs improvement in async_programming (28.6%)"
      ],
      "test_scores": [
        {
          "test_id": "python_easy_01",
          "test_name": "Two Sum",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.07,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.07,
          "max_possible": 10.0,
          "percentage": 80.66,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.19,
              "weight": 0.4,
              "weighted_score": 3.676
            },
            "idiomaticity": {
              "raw_score": 6.68,
              "weight": 0.25,
              "weighted_score": 1.67
            },
            "performance": {
              "raw_score": 8.95,
              "weight": 0.2,
              "weighted_score": 1.79
            },
            "best_practices": {
              "raw_score": 6.2,
              "weight": 0.15,
              "weighted_score": 0.93
            }
          }
        },
        {
          "test_id": "python_easy_02",
          "test_name": "Valid Parentheses",
          "difficulty": "easy",
          "passed": true,
          "base_score": 7.45,
          "difficulty_multiplier": 1.0,
          "weighted_score": 7.45,
          "max_possible": 10.0,
          "percentage": 74.53,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.1,
              "weight": 0.4,
              "weighted_score": 3.64
            },
            "idiomaticity": {
              "raw_score": 7.29,
              "weight": 0.25,
              "weighted_score": 1.823
            },
            "performance": {
              "raw_score": 5.44,
              "weight": 0.2,
              "weighted_score": 1.088
            },
            "best_practices": {
              "raw_score": 6.02,
              "weight": 0.15,
              "weighted_score": 0.903
            }
          }
        },
        {
          "test_id": "python_easy_09",
          "test_name": "FizzBuzz",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.89,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.89,
          "max_possible": 10.0,
          "percentage": 88.88,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.76,
              "weight": 0.4,
              "weighted_score": 3.504
            },
            "idiomaticity": {
              "raw_score": 9.48,
              "weight": 0.25,
              "weighted_score": 2.37
            },
            "performance": {
              "raw_score": 8.82,
              "weight": 0.2,
              "weighted_score": 1.764
            },
            "best_practices": {
              "raw_score": 8.33,
              "weight": 0.15,
              "weighted_score": 1.25
            }
          }
        },
        {
          "test_id": "python_easy_05",
          "test_name": "Find First Palindromic String",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.41,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.41,
          "max_possible": 10.0,
          "percentage": 84.06,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.51,
              "weight": 0.4,
              "weighted_score": 3.804
            },
            "idiomaticity": {
              "raw_score": 7.26,
              "weight": 0.25,
              "weighted_score": 1.815
            },
            "performance": {
              "raw_score": 8.57,
              "weight": 0.2,
              "weighted_score": 1.714
            },
            "best_practices": {
              "raw_score": 7.15,
              "weight": 0.15,
              "weighted_score": 1.073
            }
          }
        },
        {
          "test_id": "python_medium_02",
          "test_name": "Three Sum",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.86,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.44,
          "max_possible": 12.0,
          "percentage": 78.63,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.1,
              "weight": 0.4,
              "weighted_score": 3.64
            },
            "idiomaticity": {
              "raw_score": 7.32,
              "weight": 0.25,
              "weighted_score": 1.83
            },
            "performance": {
              "raw_score": 6.67,
              "weight": 0.2,
              "weighted_score": 1.334
            },
            "best_practices": {
              "raw_score": 7.06,
              "weight": 0.15,
              "weighted_score": 1.059
            }
          }
        },
        {
          "test_id": "python_medium_03",
          "test_name": "Longest Substring Without Repeating",
          "difficulty": "medium",
          "passed": false,
          "base_score": 4.63,
          "difficulty_multiplier": 1.2,
          "weighted_score": 5.55,
          "max_possible": 12.0,
          "percentage": 46.26,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 3.96,
              "weight": 0.4,
              "weighted_score": 1.584
            },
            "idiomaticity": {
              "raw_score": 5.99,
              "weight": 0.25,
              "weighted_score": 1.498
            },
            "performance": {
              "raw_score": 5.23,
              "weight": 0.2,
              "weighted_score": 1.046
            },
            "best_practices": {
              "raw_score": 3.32,
              "weight": 0.15,
              "weighted_score": 0.498
            }
          }
        },
        {
          "test_id": "python_medium_06",
          "test_name": "Async Task Processor",
          "difficulty": "medium",
          "passed": false,
          "base_score": 2.77,
          "difficulty_multiplier": 1.2,
          "weighted_score": 3.33,
          "max_possible": 12.0,
          "percentage": 27.74,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 0.68,
              "weight": 0.4,
              "weighted_score": 0.272
            },
            "idiomaticity": {
              "raw_score": 4.96,
              "weight": 0.25,
              "weighted_score": 1.24
            },
            "performance": {
              "raw_score": 3.52,
              "weight": 0.2,
              "weighted_score": 0.704
            },
            "best_practices": {
              "raw_score": 3.72,
              "weight": 0.15,
              "weighted_score": 0.558
            }
          }
        },
        {
          "test_id": "python_medium_04",
          "test_name": "Binary Tree Level Order Traversal",
          "difficulty": "medium",
          "passed": false,
          "base_score": 5.33,
          "difficulty_multiplier": 1.2,
          "weighted_score": 6.39,
          "max_possible": 12.0,
          "percentage": 53.26,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 3.7,
              "weight": 0.4,
              "weighted_score": 1.48
            },
            "idiomaticity": {
              "raw_score": 4.33,
              "weight": 0.25,
              "weighted_score": 1.083
            },
            "performance": {
              "raw_score": 9.44,
              "weight": 0.2,
              "weighted_score": 1.888
            },
            "best_practices": {
              "raw_score": 5.84,
              "weight": 0.15,
              "weighted_score": 0.876
            }
          }
        },
        {
          "test_id": "python_medium_10",
          "test_name": "Rate Limiter",
          "difficulty": "medium",
          "passed": true,
          "base_score": 8.8,
          "difficulty_multiplier": 1.2,
          "weighted_score": 10.56,
          "max_possible": 12.0,
          "percentage": 87.96,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 10.0,
              "weight": 0.4,
              "weighted_score": 4.0
            },
            "idiomaticity": {
              "raw_score": 9.39,
              "weight": 0.25,
              "weighted_score": 2.348
            },
            "performance": {
              "raw_score": 5.08,
              "weight": 0.2,
              "weighted_score": 1.016
            },
            "best_practices": {
              "raw_score": 9.55,
              "weight": 0.15,
              "weighted_score": 1.433
            }
          }
        },
        {
          "test_id": "python_hard_01",
          "test_name": "Median of Two Sorted Arrays",
          "difficulty": "hard",
          "passed": false,
          "base_score": 4.37,
          "difficulty_multiplier": 1.5,
          "weighted_score": 6.56,
          "max_possible": 15.0,
          "percentage": 43.73,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 3.44,
              "weight": 0.4,
              "weighted_score": 1.376
            },
            "idiomaticity": {
              "raw_score": 4.62,
              "weight": 0.25,
              "weighted_score": 1.155
            },
            "performance": {
              "raw_score": 6.95,
              "weight": 0.2,
              "weighted_score": 1.39
            },
            "best_practices": {
              "raw_score": 3.01,
              "weight": 0.15,
              "weighted_score": 0.451
            }
          }
        },
        {
          "test_id": "python_hard_05",
          "test_name": "Async Worker Pool with Retries",
          "difficulty": "hard",
          "passed": false,
          "base_score": 2.92,
          "difficulty_multiplier": 1.5,
          "weighted_score": 4.38,
          "max_possible": 15.0,
          "percentage": 29.2,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 1.23,
              "weight": 0.4,
              "weighted_score": 0.492
            },
            "idiomaticity": {
              "raw_score": 4.47,
              "weight": 0.25,
              "weighted_score": 1.117
            },
            "performance": {
              "raw_score": 3.34,
              "weight": 0.2,
              "weighted_score": 0.668
            },
            "best_practices": {
              "raw_score": 4.28,
              "weight": 0.15,
              "weighted_score": 0.642
            }
          }
        },
        {
          "test_id": "python_hard_03",
          "test_name": "Serialize and Deserialize Binary Tree",
          "difficulty": "hard",
          "passed": true,
          "base_score": 7.57,
          "difficulty_multiplier": 1.5,
          "weighted_score": 11.35,
          "max_possible": 15.0,
          "percentage": 75.66,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.63,
              "weight": 0.4,
              "weighted_score": 3.852
            },
            "idiomaticity": {
              "raw_score": 6.74,
              "weight": 0.25,
              "weighted_score": 1.685
            },
            "performance": {
              "raw_score": 6.01,
              "weight": 0.2,
              "weighted_score": 1.202
            },
            "best_practices": {
              "raw_score": 5.51,
              "weight": 0.15,
              "weighted_score": 0.826
            }
          }
        }
      ]
    },
    "typescript_engineer": {
      "agent_id": "typescript_engineer",
      "language": "typescript",
      "total_tests": 12,
      "tests_passed": 8,
      "pass_rate": 66.67,
      "total_points": 96.8,
      "max_points": 145.0,
      "percentage": 66.76,
      "grade": "C+",
      "grade_description": "Fair",
      "dimension_scores": {
        "correctness": {
          "points": 33.59,
          "max_points": 33.59,
          "percentage": 100.0,
          "weight": 0.4
        },
        "idiomaticity": {
          "points": 19.22,
          "max_points": 19.22,
          "percentage": 99.99,
          "weight": 0.25
        },
        "performance": {
          "points": 17.13,
          "max_points": 17.13,
          "percentage": 100.0,
          "weight": 0.2
        },
        "best_practices": {
          "points": 10.92,
          "max_points": 10.92,
          "percentage": 100.0,
          "weight": 0.15
        }
      },
      "difficulty_breakdown": {
        "easy": {
          "total": 4,
          "passed": 4,
          "points": 32.08,
          "max_points": 40.0,
          "percentage": 80.2
        },
        "medium": {
          "total": 5,
          "passed": 2,
          "points": 33.75,
          "max_points": 60.0,
          "percentage": 56.25
        },
        "hard": {
          "total": 3,
          "passed": 2,
          "points": 30.97,
          "max_points": 45.0,
          "percentage": 68.82
        }
      },
      "category_scores": {
        "algorithms": {
          "total": 1,
          "passed": 1,
          "points": 8.68,
          "max_points": 10.0,
          "percentage": 86.8
        },
        "data_structures": {
          "total": 1,
          "passed": 1,
          "points": 7.33,
          "max_points": 10.0,
          "percentage": 73.3
        },
        "type_safety": {
          "total": 2,
          "passed": 2,
          "points": 17.23,
          "max_points": 22.0,
          "percentage": 78.32
        },
        "type_system": {
          "total": 4,
          "passed": 3,
          "points": 37.25,
          "max_points": 52.0,
          "percentage": 71.63
        },
        "design_patterns": {
          "total": 2,
          "passed": 1,
          "points": 16.56,
          "max_points": 27.0,
          "percentage": 61.33
        },
        "functional_programming": {
          "total": 1,
          "passed": 0,
          "points": 5.0,
          "max_points": 12.0,
          "percentage": 41.67
        },
        "real_world": {
          "total": 1,
          "passed": 0,
          "points": 4.75,
          "max_points": 12.0,
          "percentage": 39.58
        }
      },
      "strengths": [
        "Strong correctness (100.0%)",
        "Excellent easy test performance (100%)",
        "Excels in algorithms (86.8%)"
      ],
      "weaknesses": [
        "Struggles with medium tests (40%)",
        "Needs improvement in real_world (39.6%)"
      ],
      "test_scores": [
        {
          "test_id": "typescript_easy_01",
          "test_name": "Type-Safe Two Sum",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.68,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.68,
          "max_possible": 10.0,
          "percentage": 86.8,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.76,
              "weight": 0.4,
              "weighted_score": 3.904
            },
            "idiomaticity": {
              "raw_score": 7.55,
              "weight": 0.25,
              "weighted_score": 1.887
            },
            "performance": {
              "raw_score": 9.69,
              "weight": 0.2,
              "weighted_score": 1.938
            },
            "best_practices": {
              "raw_score": 6.34,
              "weight": 0.15,
              "weighted_score": 0.951
            }
          }
        },
        {
          "test_id": "typescript_easy_02",
          "test_name": "Generic Stack Implementation",
          "difficulty": "easy",
          "passed": true,
          "base_score": 7.33,
          "difficulty_multiplier": 1.0,
          "weighted_score": 7.33,
          "max_possible": 10.0,
          "percentage": 73.31,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.36,
              "weight": 0.4,
              "weighted_score": 3.744
            },
            "idiomaticity": {
              "raw_score": 6.68,
              "weight": 0.25,
              "weighted_score": 1.67
            },
            "performance": {
              "raw_score": 5.31,
              "weight": 0.2,
              "weighted_score": 1.062
            },
            "best_practices": {
              "raw_score": 5.7,
              "weight": 0.15,
              "weighted_score": 0.855
            }
          }
        },
        {
          "test_id": "typescript_easy_03",
          "test_name": "Type Predicate for User Validation",
          "difficulty": "easy",
          "passed": true,
          "base_score": 7.84,
          "difficulty_multiplier": 1.0,
          "weighted_score": 7.84,
          "max_possible": 10.0,
          "percentage": 78.38,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.95,
              "weight": 0.4,
              "weighted_score": 3.58
            },
            "idiomaticity": {
              "raw_score": 8.4,
              "weight": 0.25,
              "weighted_score": 2.1
            },
            "performance": {
              "raw_score": 5.46,
              "weight": 0.2,
              "weighted_score": 1.092
            },
            "best_practices": {
              "raw_score": 7.11,
              "weight": 0.15,
              "weighted_score": 1.067
            }
          }
        },
        {
          "test_id": "typescript_easy_04",
          "test_name": "Mapped Type Utility",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.23,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.23,
          "max_possible": 10.0,
          "percentage": 82.28,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.55,
              "weight": 0.4,
              "weighted_score": 3.82
            },
            "idiomaticity": {
              "raw_score": 8.18,
              "weight": 0.25,
              "weighted_score": 2.045
            },
            "performance": {
              "raw_score": 5.62,
              "weight": 0.2,
              "weighted_score": 1.124
            },
            "best_practices": {
              "raw_score": 8.26,
              "weight": 0.15,
              "weighted_score": 1.239
            }
          }
        },
        {
          "test_id": "typescript_medium_05",
          "test_name": "State Machine with Types",
          "difficulty": "medium",
          "passed": true,
          "base_score": 8.27,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.93,
          "max_possible": 12.0,
          "percentage": 82.73,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.54,
              "weight": 0.4,
              "weighted_score": 3.816
            },
            "idiomaticity": {
              "raw_score": 8.65,
              "weight": 0.25,
              "weighted_score": 2.163
            },
            "performance": {
              "raw_score": 5.59,
              "weight": 0.2,
              "weighted_score": 1.118
            },
            "best_practices": {
              "raw_score": 7.84,
              "weight": 0.15,
              "weighted_score": 1.176
            }
          }
        },
        {
          "test_id": "typescript_medium_03",
          "test_name": "Async Pipeline with Types",
          "difficulty": "medium",
          "passed": false,
          "base_score": 4.17,
          "difficulty_multiplier": 1.2,
          "weighted_score": 5.0,
          "max_possible": 12.0,
          "percentage": 41.68,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 2.25,
              "weight": 0.4,
              "weighted_score": 0.9
            },
            "idiomaticity": {
              "raw_score": 3.74,
              "weight": 0.25,
              "weighted_score": 0.935
            },
            "performance": {
              "raw_score": 8.59,
              "weight": 0.2,
              "weighted_score": 1.718
            },
            "best_practices": {
              "raw_score": 4.1,
              "weight": 0.15,
              "weighted_score": 0.615
            }
          }
        },
        {
          "test_id": "typescript_medium_09",
          "test_name": "Type-Safe Query Builder",
          "difficulty": "medium",
          "passed": false,
          "base_score": 3.96,
          "difficulty_multiplier": 1.2,
          "weighted_score": 4.75,
          "max_possible": 12.0,
          "percentage": 39.62,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 1.93,
              "weight": 0.4,
              "weighted_score": 0.772
            },
            "idiomaticity": {
              "raw_score": 5.77,
              "weight": 0.25,
              "weighted_score": 1.442
            },
            "performance": {
              "raw_score": 5.54,
              "weight": 0.2,
              "weighted_score": 1.108
            },
            "best_practices": {
              "raw_score": 4.26,
              "weight": 0.15,
              "weighted_score": 0.639
            }
          }
        },
        {
          "test_id": "typescript_medium_06",
          "test_name": "Branded ID Types",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.82,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.39,
          "max_possible": 12.0,
          "percentage": 78.24,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.97,
              "weight": 0.4,
              "weighted_score": 3.588
            },
            "idiomaticity": {
              "raw_score": 6.59,
              "weight": 0.25,
              "weighted_score": 1.647
            },
            "performance": {
              "raw_score": 8.39,
              "weight": 0.2,
              "weighted_score": 1.678
            },
            "best_practices": {
              "raw_score": 6.07,
              "weight": 0.15,
              "weighted_score": 0.91
            }
          }
        },
        {
          "test_id": "typescript_medium_01",
          "test_name": "Advanced Generic Constraints",
          "difficulty": "medium",
          "passed": false,
          "base_score": 3.9,
          "difficulty_multiplier": 1.2,
          "weighted_score": 4.68,
          "max_possible": 12.0,
          "percentage": 39.04,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 2.45,
              "weight": 0.4,
              "weighted_score": 0.98
            },
            "idiomaticity": {
              "raw_score": 4.13,
              "weight": 0.25,
              "weighted_score": 1.032
            },
            "performance": {
              "raw_score": 6.11,
              "weight": 0.2,
              "weighted_score": 1.222
            },
            "best_practices": {
              "raw_score": 4.46,
              "weight": 0.15,
              "weighted_score": 0.669
            }
          }
        },
        {
          "test_id": "typescript_hard_04",
          "test_name": "Type-Safe Event Sourcing",
          "difficulty": "hard",
          "passed": false,
          "base_score": 4.42,
          "difficulty_multiplier": 1.5,
          "weighted_score": 6.63,
          "max_possible": 15.0,
          "percentage": 44.18,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 3.23,
              "weight": 0.4,
              "weighted_score": 1.292
            },
            "idiomaticity": {
              "raw_score": 3.95,
              "weight": 0.25,
              "weighted_score": 0.988
            },
            "performance": {
              "raw_score": 7.16,
              "weight": 0.2,
              "weighted_score": 1.432
            },
            "best_practices": {
              "raw_score": 4.71,
              "weight": 0.15,
              "weighted_score": 0.707
            }
          }
        },
        {
          "test_id": "typescript_hard_01",
          "test_name": "Advanced Mapped Types",
          "difficulty": "hard",
          "passed": true,
          "base_score": 8.24,
          "difficulty_multiplier": 1.5,
          "weighted_score": 12.36,
          "max_possible": 15.0,
          "percentage": 82.38,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.29,
              "weight": 0.4,
              "weighted_score": 3.716
            },
            "idiomaticity": {
              "raw_score": 6.8,
              "weight": 0.25,
              "weighted_score": 1.7
            },
            "performance": {
              "raw_score": 8.58,
              "weight": 0.2,
              "weighted_score": 1.716
            },
            "best_practices": {
              "raw_score": 7.37,
              "weight": 0.15,
              "weighted_score": 1.105
            }
          }
        },
        {
          "test_id": "typescript_hard_02",
          "test_name": "Type-Level String Manipulation",
          "difficulty": "hard",
          "passed": true,
          "base_score": 7.99,
          "difficulty_multiplier": 1.5,
          "weighted_score": 11.98,
          "max_possible": 15.0,
          "percentage": 79.9,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.69,
              "weight": 0.4,
              "weighted_score": 3.476
            },
            "idiomaticity": {
              "raw_score": 6.43,
              "weight": 0.25,
              "weighted_score": 1.607
            },
            "performance": {
              "raw_score": 9.62,
              "weight": 0.2,
              "weighted_score": 1.924
            },
            "best_practices": {
              "raw_score": 6.55,
              "weight": 0.15,
              "weighted_score": 0.982
            }
          }
        }
      ]
    },
    "nextjs_engineer": {
      "agent_id": "nextjs_engineer",
      "language": "nextjs",
      "total_tests": 12,
      "tests_passed": 9,
      "pass_rate": 75.0,
      "total_points": 95.43,
      "max_points": 145.0,
      "percentage": 65.81,
      "grade": "C+",
      "grade_description": "Fair",
      "dimension_scores": {
        "correctness": {
          "points": 34.55,
          "max_points": 34.55,
          "percentage": 100.0,
          "weight": 0.4
        },
        "idiomaticity": {
          "points": 19.42,
          "max_points": 19.42,
          "percentage": 100.0,
          "weight": 0.25
        },
        "performance": {
          "points": 15.53,
          "max_points": 15.53,
          "percentage": 100.0,
          "weight": 0.2
        },
        "best_practices": {
          "points": 11.46,
          "max_points": 11.46,
          "percentage": 100.0,
          "weight": 0.15
        }
      },
      "difficulty_breakdown": {
        "easy": {
          "total": 4,
          "passed": 4,
          "points": 31.34,
          "max_points": 40.0,
          "percentage": 78.35
        },
        "medium": {
          "total": 5,
          "passed": 4,
          "points": 41.39,
          "max_points": 60.0,
          "percentage": 68.98
        },
        "hard": {
          "total": 3,
          "passed": 1,
          "points": 22.7,
          "max_points": 45.0,
          "percentage": 50.44
        }
      },
      "category_scores": {
        "client_components": {
          "total": 1,
          "passed": 1,
          "points": 7.32,
          "max_points": 10.0,
          "percentage": 73.2
        },
        "routing": {
          "total": 2,
          "passed": 2,
          "points": 15.7,
          "max_points": 22.0,
          "percentage": 71.36
        },
        "server_components": {
          "total": 1,
          "passed": 1,
          "points": 8.24,
          "max_points": 10.0,
          "percentage": 82.4
        },
        "streaming": {
          "total": 2,
          "passed": 1,
          "points": 12.93,
          "max_points": 22.0,
          "percentage": 58.77
        },
        "metadata": {
          "total": 1,
          "passed": 1,
          "points": 9.57,
          "max_points": 12.0,
          "percentage": 79.75
        },
        "middleware": {
          "total": 1,
          "passed": 1,
          "points": 9.4,
          "max_points": 12.0,
          "percentage": 78.33
        },
        "server_actions": {
          "total": 1,
          "passed": 1,
          "points": 9.57,
          "max_points": 12.0,
          "percentage": 79.75
        },
        "caching": {
          "total": 1,
          "passed": 1,
          "points": 11.03,
          "max_points": 15.0,
          "percentage": 73.53
        },
        "performance": {
          "total": 1,
          "passed": 0,
          "points": 6.23,
          "max_points": 15.0,
          "percentage": 41.53
        },
        "rendering": {
          "total": 1,
          "passed": 0,
          "points": 5.44,
          "max_points": 15.0,
          "percentage": 36.27
        }
      },
      "strengths": [
        "Strong correctness (100.0%)",
        "Excellent easy test performance (100%)"
      ],
      "weaknesses": [
        "Struggles with hard tests (33%)",
        "Needs improvement in rendering (36.3%)"
      ],
      "test_scores": [
        {
          "test_id": "nextjs_easy_02",
          "test_name": "Client Component with State",
          "difficulty": "easy",
          "passed": true,
          "base_score": 7.32,
          "difficulty_multiplier": 1.0,
          "weighted_score": 7.32,
          "max_possible": 10.0,
          "percentage": 73.21,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.29,
              "weight": 0.4,
              "weighted_score": 3.716
            },
            "idiomaticity": {
              "raw_score": 6.66,
              "weight": 0.25,
              "weighted_score": 1.665
            },
            "performance": {
              "raw_score": 5.41,
              "weight": 0.2,
              "weighted_score": 1.082
            },
            "best_practices": {
              "raw_score": 5.72,
              "weight": 0.15,
              "weighted_score": 0.858
            }
          }
        },
        {
          "test_id": "nextjs_easy_03",
          "test_name": "Dynamic Route",
          "difficulty": "easy",
          "passed": true,
          "base_score": 7.5,
          "difficulty_multiplier": 1.0,
          "weighted_score": 7.5,
          "max_possible": 10.0,
          "percentage": 74.99,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.52,
              "weight": 0.4,
              "weighted_score": 3.808
            },
            "idiomaticity": {
              "raw_score": 6.79,
              "weight": 0.25,
              "weighted_score": 1.698
            },
            "performance": {
              "raw_score": 5.7,
              "weight": 0.2,
              "weighted_score": 1.14
            },
            "best_practices": {
              "raw_score": 5.69,
              "weight": 0.15,
              "weighted_score": 0.854
            }
          }
        },
        {
          "test_id": "nextjs_easy_01",
          "test_name": "Basic Server Component",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.24,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.24,
          "max_possible": 10.0,
          "percentage": 82.38,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.18,
              "weight": 0.4,
              "weighted_score": 3.672
            },
            "idiomaticity": {
              "raw_score": 7.42,
              "weight": 0.25,
              "weighted_score": 1.855
            },
            "performance": {
              "raw_score": 8.87,
              "weight": 0.2,
              "weighted_score": 1.774
            },
            "best_practices": {
              "raw_score": 6.25,
              "weight": 0.15,
              "weighted_score": 0.938
            }
          }
        },
        {
          "test_id": "nextjs_easy_04",
          "test_name": "Loading UI",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.28,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.28,
          "max_possible": 10.0,
          "percentage": 82.81,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.96,
              "weight": 0.4,
              "weighted_score": 3.584
            },
            "idiomaticity": {
              "raw_score": 8.09,
              "weight": 0.25,
              "weighted_score": 2.022
            },
            "performance": {
              "raw_score": 7.83,
              "weight": 0.2,
              "weighted_score": 1.566
            },
            "best_practices": {
              "raw_score": 7.39,
              "weight": 0.15,
              "weighted_score": 1.108
            }
          }
        },
        {
          "test_id": "nextjs_medium_05",
          "test_name": "Dynamic Metadata",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.98,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.57,
          "max_possible": 12.0,
          "percentage": 79.77,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.03,
              "weight": 0.4,
              "weighted_score": 3.612
            },
            "idiomaticity": {
              "raw_score": 6.18,
              "weight": 0.25,
              "weighted_score": 1.545
            },
            "performance": {
              "raw_score": 9.38,
              "weight": 0.2,
              "weighted_score": 1.876
            },
            "best_practices": {
              "raw_score": 6.29,
              "weight": 0.15,
              "weighted_score": 0.944
            }
          }
        },
        {
          "test_id": "nextjs_medium_07",
          "test_name": "Middleware",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.83,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.4,
          "max_possible": 12.0,
          "percentage": 78.31,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.58,
              "weight": 0.4,
              "weighted_score": 3.432
            },
            "idiomaticity": {
              "raw_score": 8.06,
              "weight": 0.25,
              "weighted_score": 2.015
            },
            "performance": {
              "raw_score": 6.06,
              "weight": 0.2,
              "weighted_score": 1.212
            },
            "best_practices": {
              "raw_score": 7.81,
              "weight": 0.15,
              "weighted_score": 1.171
            }
          }
        },
        {
          "test_id": "nextjs_medium_02",
          "test_name": "Parallel Routes",
          "difficulty": "medium",
          "passed": true,
          "base_score": 6.83,
          "difficulty_multiplier": 1.2,
          "weighted_score": 8.2,
          "max_possible": 12.0,
          "percentage": 68.31,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.91,
              "weight": 0.4,
              "weighted_score": 3.964
            },
            "idiomaticity": {
              "raw_score": 6.01,
              "weight": 0.25,
              "weighted_score": 1.502
            },
            "performance": {
              "raw_score": 2.05,
              "weight": 0.2,
              "weighted_score": 0.41
            },
            "best_practices": {
              "raw_score": 6.36,
              "weight": 0.15,
              "weighted_score": 0.954
            }
          }
        },
        {
          "test_id": "nextjs_medium_01",
          "test_name": "Server Actions",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.97,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.57,
          "max_possible": 12.0,
          "percentage": 79.75,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.61,
              "weight": 0.4,
              "weighted_score": 3.844
            },
            "idiomaticity": {
              "raw_score": 7.89,
              "weight": 0.25,
              "weighted_score": 1.972
            },
            "performance": {
              "raw_score": 5.6,
              "weight": 0.2,
              "weighted_score": 1.12
            },
            "best_practices": {
              "raw_score": 6.92,
              "weight": 0.15,
              "weighted_score": 1.038
            }
          }
        },
        {
          "test_id": "nextjs_medium_04",
          "test_name": "Streaming with Suspense",
          "difficulty": "medium",
          "passed": false,
          "base_score": 3.87,
          "difficulty_multiplier": 1.2,
          "weighted_score": 4.65,
          "max_possible": 12.0,
          "percentage": 38.72,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 1.0,
              "weight": 0.4,
              "weighted_score": 0.4
            },
            "idiomaticity": {
              "raw_score": 3.31,
              "weight": 0.25,
              "weighted_score": 0.828
            },
            "performance": {
              "raw_score": 8.76,
              "weight": 0.2,
              "weighted_score": 1.752
            },
            "best_practices": {
              "raw_score": 5.95,
              "weight": 0.15,
              "weighted_score": 0.892
            }
          }
        },
        {
          "test_id": "nextjs_hard_02",
          "test_name": "Advanced Caching Strategy",
          "difficulty": "hard",
          "passed": true,
          "base_score": 7.35,
          "difficulty_multiplier": 1.5,
          "weighted_score": 11.03,
          "max_possible": 15.0,
          "percentage": 73.5,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.85,
              "weight": 0.4,
              "weighted_score": 3.54
            },
            "idiomaticity": {
              "raw_score": 6.51,
              "weight": 0.25,
              "weighted_score": 1.627
            },
            "performance": {
              "raw_score": 5.71,
              "weight": 0.2,
              "weighted_score": 1.142
            },
            "best_practices": {
              "raw_score": 6.94,
              "weight": 0.15,
              "weighted_score": 1.041
            }
          }
        },
        {
          "test_id": "nextjs_hard_04",
          "test_name": "Request Waterfall Optimization",
          "difficulty": "hard",
          "passed": false,
          "base_score": 4.15,
          "difficulty_multiplier": 1.5,
          "weighted_score": 6.23,
          "max_possible": 15.0,
          "percentage": 41.55,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 2.41,
              "weight": 0.4,
              "weighted_score": 0.964
            },
            "idiomaticity": {
              "raw_score": 5.6,
              "weight": 0.25,
              "weighted_score": 1.4
            },
            "performance": {
              "raw_score": 4.8,
              "weight": 0.2,
              "weighted_score": 0.96
            },
            "best_practices": {
              "raw_score": 5.54,
              "weight": 0.15,
              "weighted_score": 0.831
            }
          }
        },
        {
          "test_id": "nextjs_hard_01",
          "test_name": "Partial Pre-rendering",
          "difficulty": "hard",
          "passed": false,
          "base_score": 3.62,
          "difficulty_multiplier": 1.5,
          "weighted_score": 5.44,
          "max_possible": 15.0,
          "percentage": 36.23,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 0.04,
              "weight": 0.4,
              "weighted_score": 0.016
            },
            "idiomaticity": {
              "raw_score": 5.15,
              "weight": 0.25,
              "weighted_score": 1.288
            },
            "performance": {
              "raw_score": 7.46,
              "weight": 0.2,
              "weighted_score": 1.492
            },
            "best_practices": {
              "raw_score": 5.52,
              "weight": 0.15,
              "weighted_score": 0.828
            }
          }
        }
      ]
    },
    "php_engineer": {
      "agent_id": "php_engineer",
      "language": "php",
      "total_tests": 12,
      "tests_passed": 7,
      "pass_rate": 58.33,
      "total_points": 88.18,
      "max_points": 145.0,
      "percentage": 60.81,
      "grade": "C",
      "grade_description": "Adequate",
      "dimension_scores": {
        "correctness": {
          "points": 27.18,
          "max_points": 27.18,
          "percentage": 100.0,
          "weight": 0.4
        },
        "idiomaticity": {
          "points": 20.33,
          "max_points": 20.33,
          "percentage": 100.01,
          "weight": 0.25
        },
        "performance": {
          "points": 17.88,
          "max_points": 17.88,
          "percentage": 100.0,
          "weight": 0.2
        },
        "best_practices": {
          "points": 11.34,
          "max_points": 11.34,
          "percentage": 100.0,
          "weight": 0.15
        }
      },
      "difficulty_breakdown": {
        "easy": {
          "total": 4,
          "passed": 4,
          "points": 35.12,
          "max_points": 40.0,
          "percentage": 87.8
        },
        "medium": {
          "total": 5,
          "passed": 3,
          "points": 37.4,
          "max_points": 60.0,
          "percentage": 62.33
        },
        "hard": {
          "total": 3,
          "passed": 0,
          "points": 15.66,
          "max_points": 45.0,
          "percentage": 34.8
        }
      },
      "category_scores": {
        "algorithms": {
          "total": 1,
          "passed": 1,
          "points": 9.02,
          "max_points": 10.0,
          "percentage": 90.2
        },
        "real_world": {
          "total": 1,
          "passed": 1,
          "points": 9.07,
          "max_points": 10.0,
          "percentage": 90.7
        },
        "string_manipulation": {
          "total": 1,
          "passed": 1,
          "points": 8.6,
          "max_points": 10.0,
          "percentage": 86.0
        },
        "validation": {
          "total": 1,
          "passed": 1,
          "points": 8.43,
          "max_points": 10.0,
          "percentage": 84.3
        },
        "design_patterns": {
          "total": 1,
          "passed": 1,
          "points": 9.24,
          "max_points": 12.0,
          "percentage": 77.0
        },
        "laravel": {
          "total": 4,
          "passed": 2,
          "points": 28.16,
          "max_points": 48.0,
          "percentage": 58.67
        },
        "concurrency": {
          "total": 1,
          "passed": 0,
          "points": 5.97,
          "max_points": 15.0,
          "percentage": 39.8
        },
        "database": {
          "total": 1,
          "passed": 0,
          "points": 4.67,
          "max_points": 15.0,
          "percentage": 31.13
        },
        "performance": {
          "total": 1,
          "passed": 0,
          "points": 5.02,
          "max_points": 15.0,
          "percentage": 33.47
        }
      },
      "strengths": [
        "Strong idiomaticity (100.0%)",
        "Excellent easy test performance (100%)",
        "Excels in real_world (90.7%)"
      ],
      "weaknesses": [
        "Struggles with hard tests (0%)",
        "Needs improvement in database (31.1%)"
      ],
      "test_scores": [
        {
          "test_id": "php_easy_01",
          "test_name": "Strict Types Array Sum",
          "difficulty": "easy",
          "passed": true,
          "base_score": 9.02,
          "difficulty_multiplier": 1.0,
          "weighted_score": 9.02,
          "max_possible": 10.0,
          "percentage": 90.2,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.84,
              "weight": 0.4,
              "weighted_score": 3.936
            },
            "idiomaticity": {
              "raw_score": 8.47,
              "weight": 0.25,
              "weighted_score": 2.118
            },
            "performance": {
              "raw_score": 9.53,
              "weight": 0.2,
              "weighted_score": 1.906
            },
            "best_practices": {
              "raw_score": 7.07,
              "weight": 0.15,
              "weighted_score": 1.06
            }
          }
        },
        {
          "test_id": "php_easy_05",
          "test_name": "Temperature Converter",
          "difficulty": "easy",
          "passed": true,
          "base_score": 9.07,
          "difficulty_multiplier": 1.0,
          "weighted_score": 9.07,
          "max_possible": 10.0,
          "percentage": 90.71,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.03,
              "weight": 0.4,
              "weighted_score": 3.612
            },
            "idiomaticity": {
              "raw_score": 9.13,
              "weight": 0.25,
              "weighted_score": 2.283
            },
            "performance": {
              "raw_score": 9.4,
              "weight": 0.2,
              "weighted_score": 1.88
            },
            "best_practices": {
              "raw_score": 8.64,
              "weight": 0.15,
              "weighted_score": 1.296
            }
          }
        },
        {
          "test_id": "php_easy_03",
          "test_name": "String Palindrome Check",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.6,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.6,
          "max_possible": 10.0,
          "percentage": 86.02,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.52,
              "weight": 0.4,
              "weighted_score": 3.808
            },
            "idiomaticity": {
              "raw_score": 8.37,
              "weight": 0.25,
              "weighted_score": 2.092
            },
            "performance": {
              "raw_score": 6.97,
              "weight": 0.2,
              "weighted_score": 1.394
            },
            "best_practices": {
              "raw_score": 8.72,
              "weight": 0.15,
              "weighted_score": 1.308
            }
          }
        },
        {
          "test_id": "php_easy_02",
          "test_name": "Email Validator",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.43,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.43,
          "max_possible": 10.0,
          "percentage": 84.33,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.91,
              "weight": 0.4,
              "weighted_score": 3.964
            },
            "idiomaticity": {
              "raw_score": 7.57,
              "weight": 0.25,
              "weighted_score": 1.893
            },
            "performance": {
              "raw_score": 7.03,
              "weight": 0.2,
              "weighted_score": 1.406
            },
            "best_practices": {
              "raw_score": 7.8,
              "weight": 0.15,
              "weighted_score": 1.17
            }
          }
        },
        {
          "test_id": "php_medium_09",
          "test_name": "Repository Pattern",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.7,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.24,
          "max_possible": 12.0,
          "percentage": 76.99,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.8,
              "weight": 0.4,
              "weighted_score": 3.52
            },
            "idiomaticity": {
              "raw_score": 7.62,
              "weight": 0.25,
              "weighted_score": 1.905
            },
            "performance": {
              "raw_score": 6.69,
              "weight": 0.2,
              "weighted_score": 1.338
            },
            "best_practices": {
              "raw_score": 6.24,
              "weight": 0.15,
              "weighted_score": 0.936
            }
          }
        },
        {
          "test_id": "php_medium_01",
          "test_name": "Laravel Eloquent Query Builder",
          "difficulty": "medium",
          "passed": true,
          "base_score": 8.42,
          "difficulty_multiplier": 1.2,
          "weighted_score": 10.1,
          "max_possible": 12.0,
          "percentage": 84.2,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.05,
              "weight": 0.4,
              "weighted_score": 3.62
            },
            "idiomaticity": {
              "raw_score": 8.63,
              "weight": 0.25,
              "weighted_score": 2.158
            },
            "performance": {
              "raw_score": 6.88,
              "weight": 0.2,
              "weighted_score": 1.376
            },
            "best_practices": {
              "raw_score": 8.44,
              "weight": 0.15,
              "weighted_score": 1.266
            }
          }
        },
        {
          "test_id": "php_medium_02",
          "test_name": "Custom Validation Rule",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.37,
          "difficulty_multiplier": 1.2,
          "weighted_score": 8.84,
          "max_possible": 12.0,
          "percentage": 73.66,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.51,
              "weight": 0.4,
              "weighted_score": 3.804
            },
            "idiomaticity": {
              "raw_score": 6.99,
              "weight": 0.25,
              "weighted_score": 1.748
            },
            "performance": {
              "raw_score": 4.01,
              "weight": 0.2,
              "weighted_score": 0.802
            },
            "best_practices": {
              "raw_score": 6.75,
              "weight": 0.15,
              "weighted_score": 1.012
            }
          }
        },
        {
          "test_id": "php_medium_03",
          "test_name": "Service Container Binding",
          "difficulty": "medium",
          "passed": false,
          "base_score": 3.76,
          "difficulty_multiplier": 1.2,
          "weighted_score": 4.51,
          "max_possible": 12.0,
          "percentage": 37.6,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 0.19,
              "weight": 0.4,
              "weighted_score": 0.076
            },
            "idiomaticity": {
              "raw_score": 4.83,
              "weight": 0.25,
              "weighted_score": 1.208
            },
            "performance": {
              "raw_score": 9.55,
              "weight": 0.2,
              "weighted_score": 1.91
            },
            "best_practices": {
              "raw_score": 3.78,
              "weight": 0.15,
              "weighted_score": 0.567
            }
          }
        },
        {
          "test_id": "php_medium_04",
          "test_name": "Database Migration with Relations",
          "difficulty": "medium",
          "passed": false,
          "base_score": 3.93,
          "difficulty_multiplier": 1.2,
          "weighted_score": 4.71,
          "max_possible": 12.0,
          "percentage": 39.26,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 0.52,
              "weight": 0.4,
              "weighted_score": 0.208
            },
            "idiomaticity": {
              "raw_score": 5.65,
              "weight": 0.25,
              "weighted_score": 1.413
            },
            "performance": {
              "raw_score": 8.01,
              "weight": 0.2,
              "weighted_score": 1.602
            },
            "best_practices": {
              "raw_score": 4.69,
              "weight": 0.15,
              "weighted_score": 0.704
            }
          }
        },
        {
          "test_id": "php_hard_05",
          "test_name": "Distributed Lock Manager",
          "difficulty": "hard",
          "passed": false,
          "base_score": 3.98,
          "difficulty_multiplier": 1.5,
          "weighted_score": 5.97,
          "max_possible": 15.0,
          "percentage": 39.79,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 0.6,
              "weight": 0.4,
              "weighted_score": 0.24
            },
            "idiomaticity": {
              "raw_score": 5.34,
              "weight": 0.25,
              "weighted_score": 1.335
            },
            "performance": {
              "raw_score": 9.44,
              "weight": 0.2,
              "weighted_score": 1.888
            },
            "best_practices": {
              "raw_score": 3.44,
              "weight": 0.15,
              "weighted_score": 0.516
            }
          }
        },
        {
          "test_id": "php_hard_02",
          "test_name": "Database Transaction Saga",
          "difficulty": "hard",
          "passed": false,
          "base_score": 3.12,
          "difficulty_multiplier": 1.5,
          "weighted_score": 4.67,
          "max_possible": 15.0,
          "percentage": 31.16,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 0.6,
              "weight": 0.4,
              "weighted_score": 0.24
            },
            "idiomaticity": {
              "raw_score": 4.64,
              "weight": 0.25,
              "weighted_score": 1.16
            },
            "performance": {
              "raw_score": 5.11,
              "weight": 0.2,
              "weighted_score": 1.022
            },
            "best_practices": {
              "raw_score": 4.63,
              "weight": 0.15,
              "weighted_score": 0.695
            }
          }
        },
        {
          "test_id": "php_hard_01",
          "test_name": "Advanced Query Optimization",
          "difficulty": "hard",
          "passed": false,
          "base_score": 3.34,
          "difficulty_multiplier": 1.5,
          "weighted_score": 5.02,
          "max_possible": 15.0,
          "percentage": 33.43,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 0.39,
              "weight": 0.4,
              "weighted_score": 0.156
            },
            "idiomaticity": {
              "raw_score": 4.08,
              "weight": 0.25,
              "weighted_score": 1.02
            },
            "performance": {
              "raw_score": 6.78,
              "weight": 0.2,
              "weighted_score": 1.356
            },
            "best_practices": {
              "raw_score": 5.41,
              "weight": 0.15,
              "weighted_score": 0.811
            }
          }
        }
      ]
    },
    "ruby_engineer": {
      "agent_id": "ruby_engineer",
      "language": "ruby",
      "total_tests": 12,
      "tests_passed": 9,
      "pass_rate": 75.0,
      "total_points": 98.8,
      "max_points": 145.0,
      "percentage": 68.14,
      "grade": "C+",
      "grade_description": "Fair",
      "dimension_scores": {
        "correctness": {
          "points": 36.18,
          "max_points": 36.18,
          "percentage": 100.0,
          "weight": 0.4
        },
        "idiomaticity": {
          "points": 20.01,
          "max_points": 20.0,
          "percentage": 100.01,
          "weight": 0.25
        },
        "performance": {
          "points": 15.36,
          "max_points": 15.36,
          "percentage": 100.0,
          "weight": 0.2
        },
        "best_practices": {
          "points": 10.95,
          "max_points": 10.95,
          "percentage": 99.97,
          "weight": 0.15
        }
      },
      "difficulty_breakdown": {
        "easy": {
          "total": 4,
          "passed": 3,
          "points": 28.86,
          "max_points": 40.0,
          "percentage": 72.15
        },
        "medium": {
          "total": 5,
          "passed": 4,
          "points": 42.17,
          "max_points": 60.0,
          "percentage": 70.28
        },
        "hard": {
          "total": 3,
          "passed": 2,
          "points": 27.77,
          "max_points": 45.0,
          "percentage": 61.71
        }
      },
      "category_scores": {
        "algorithms": {
          "total": 1,
          "passed": 1,
          "points": 8.73,
          "max_points": 10.0,
          "percentage": 87.3
        },
        "functions": {
          "total": 1,
          "passed": 0,
          "points": 2.58,
          "max_points": 10.0,
          "percentage": 25.8
        },
        "idioms": {
          "total": 1,
          "passed": 1,
          "points": 8.65,
          "max_points": 10.0,
          "percentage": 86.5
        },
        "string_manipulation": {
          "total": 1,
          "passed": 1,
          "points": 8.9,
          "max_points": 10.0,
          "percentage": 89.0
        },
        "design_patterns": {
          "total": 2,
          "passed": 2,
          "points": 19.84,
          "max_points": 27.0,
          "percentage": 73.48
        },
        "metaprogramming": {
          "total": 2,
          "passed": 2,
          "points": 20.16,
          "max_points": 27.0,
          "percentage": 74.67
        },
        "oop": {
          "total": 1,
          "passed": 0,
          "points": 5.19,
          "max_points": 12.0,
          "percentage": 43.25
        },
        "rails": {
          "total": 1,
          "passed": 1,
          "points": 8.93,
          "max_points": 12.0,
          "percentage": 74.42
        },
        "testing": {
          "total": 1,
          "passed": 1,
          "points": 9.54,
          "max_points": 12.0,
          "percentage": 79.5
        },
        "performance": {
          "total": 1,
          "passed": 0,
          "points": 6.28,
          "max_points": 15.0,
          "percentage": 41.87
        }
      },
      "strengths": [
        "Strong idiomaticity (100.0%)",
        "Excels in string_manipulation (89.0%)"
      ],
      "weaknesses": [
        "Needs improvement in functions (25.8%)"
      ],
      "test_scores": [
        {
          "test_id": "ruby_easy_01",
          "test_name": "Array Sum with Inject",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.73,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.73,
          "max_possible": 10.0,
          "percentage": 87.34,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.22,
              "weight": 0.4,
              "weighted_score": 3.688
            },
            "idiomaticity": {
              "raw_score": 7.53,
              "weight": 0.25,
              "weighted_score": 1.883
            },
            "performance": {
              "raw_score": 9.89,
              "weight": 0.2,
              "weighted_score": 1.978
            },
            "best_practices": {
              "raw_score": 7.9,
              "weight": 0.15,
              "weighted_score": 1.185
            }
          }
        },
        {
          "test_id": "ruby_easy_09",
          "test_name": "Default Parameter Values",
          "difficulty": "easy",
          "passed": false,
          "base_score": 2.58,
          "difficulty_multiplier": 1.0,
          "weighted_score": 2.58,
          "max_possible": 10.0,
          "percentage": 25.76,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 0.12,
              "weight": 0.4,
              "weighted_score": 0.048
            },
            "idiomaticity": {
              "raw_score": 3.27,
              "weight": 0.25,
              "weighted_score": 0.818
            },
            "performance": {
              "raw_score": 6.19,
              "weight": 0.2,
              "weighted_score": 1.238
            },
            "best_practices": {
              "raw_score": 3.15,
              "weight": 0.15,
              "weighted_score": 0.472
            }
          }
        },
        {
          "test_id": "ruby_easy_10",
          "test_name": "Truthiness Check",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.65,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.65,
          "max_possible": 10.0,
          "percentage": 86.5,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.26,
              "weight": 0.4,
              "weighted_score": 3.704
            },
            "idiomaticity": {
              "raw_score": 7.87,
              "weight": 0.25,
              "weighted_score": 1.968
            },
            "performance": {
              "raw_score": 9.95,
              "weight": 0.2,
              "weighted_score": 1.99
            },
            "best_practices": {
              "raw_score": 6.59,
              "weight": 0.15,
              "weighted_score": 0.988
            }
          }
        },
        {
          "test_id": "ruby_easy_03",
          "test_name": "String Palindrome",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.9,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.9,
          "max_possible": 10.0,
          "percentage": 89.04,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.89,
              "weight": 0.4,
              "weighted_score": 3.956
            },
            "idiomaticity": {
              "raw_score": 8.48,
              "weight": 0.25,
              "weighted_score": 2.12
            },
            "performance": {
              "raw_score": 7.48,
              "weight": 0.2,
              "weighted_score": 1.496
            },
            "best_practices": {
              "raw_score": 8.88,
              "weight": 0.15,
              "weighted_score": 1.332
            }
          }
        },
        {
          "test_id": "ruby_medium_06",
          "test_name": "Service Object Pattern",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.8,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.36,
          "max_possible": 12.0,
          "percentage": 77.97,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.28,
              "weight": 0.4,
              "weighted_score": 3.712
            },
            "idiomaticity": {
              "raw_score": 6.43,
              "weight": 0.25,
              "weighted_score": 1.607
            },
            "performance": {
              "raw_score": 8.36,
              "weight": 0.2,
              "weighted_score": 1.672
            },
            "best_practices": {
              "raw_score": 5.37,
              "weight": 0.15,
              "weighted_score": 0.805
            }
          }
        },
        {
          "test_id": "ruby_medium_01",
          "test_name": "Metaprogramming with Define Method",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.62,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.15,
          "max_possible": 12.0,
          "percentage": 76.25,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.75,
              "weight": 0.4,
              "weighted_score": 3.9
            },
            "idiomaticity": {
              "raw_score": 8.01,
              "weight": 0.25,
              "weighted_score": 2.002
            },
            "performance": {
              "raw_score": 2.68,
              "weight": 0.2,
              "weighted_score": 0.536
            },
            "best_practices": {
              "raw_score": 7.91,
              "weight": 0.15,
              "weighted_score": 1.186
            }
          }
        },
        {
          "test_id": "ruby_medium_03",
          "test_name": "Module Mixins",
          "difficulty": "medium",
          "passed": false,
          "base_score": 4.32,
          "difficulty_multiplier": 1.2,
          "weighted_score": 5.19,
          "max_possible": 12.0,
          "percentage": 43.21,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 3.2,
              "weight": 0.4,
              "weighted_score": 1.28
            },
            "idiomaticity": {
              "raw_score": 4.08,
              "weight": 0.25,
              "weighted_score": 1.02
            },
            "performance": {
              "raw_score": 7.72,
              "weight": 0.2,
              "weighted_score": 1.544
            },
            "best_practices": {
              "raw_score": 3.18,
              "weight": 0.15,
              "weighted_score": 0.477
            }
          }
        },
        {
          "test_id": "ruby_medium_04",
          "test_name": "ActiveRecord Scope",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.44,
          "difficulty_multiplier": 1.2,
          "weighted_score": 8.93,
          "max_possible": 12.0,
          "percentage": 74.41,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.42,
              "weight": 0.4,
              "weighted_score": 3.768
            },
            "idiomaticity": {
              "raw_score": 6.4,
              "weight": 0.25,
              "weighted_score": 1.6
            },
            "performance": {
              "raw_score": 5.15,
              "weight": 0.2,
              "weighted_score": 1.03
            },
            "best_practices": {
              "raw_score": 6.95,
              "weight": 0.15,
              "weighted_score": 1.042
            }
          }
        },
        {
          "test_id": "ruby_medium_07",
          "test_name": "RSpec Shared Examples",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.95,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.54,
          "max_possible": 12.0,
          "percentage": 79.48,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.53,
              "weight": 0.4,
              "weighted_score": 3.812
            },
            "idiomaticity": {
              "raw_score": 8.62,
              "weight": 0.25,
              "weighted_score": 2.155
            },
            "performance": {
              "raw_score": 3.26,
              "weight": 0.2,
              "weighted_score": 0.652
            },
            "best_practices": {
              "raw_score": 8.86,
              "weight": 0.15,
              "weighted_score": 1.329
            }
          }
        },
        {
          "test_id": "ruby_hard_02",
          "test_name": "Decorator Pattern",
          "difficulty": "hard",
          "passed": true,
          "base_score": 6.99,
          "difficulty_multiplier": 1.5,
          "weighted_score": 10.48,
          "max_possible": 15.0,
          "percentage": 69.85,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.37,
              "weight": 0.4,
              "weighted_score": 3.748
            },
            "idiomaticity": {
              "raw_score": 6.99,
              "weight": 0.25,
              "weighted_score": 1.748
            },
            "performance": {
              "raw_score": 3.16,
              "weight": 0.2,
              "weighted_score": 0.632
            },
            "best_practices": {
              "raw_score": 5.72,
              "weight": 0.15,
              "weighted_score": 0.858
            }
          }
        },
        {
          "test_id": "ruby_hard_01",
          "test_name": "DSL Creation",
          "difficulty": "hard",
          "passed": true,
          "base_score": 7.34,
          "difficulty_multiplier": 1.5,
          "weighted_score": 11.01,
          "max_possible": 15.0,
          "percentage": 73.37,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.11,
              "weight": 0.4,
              "weighted_score": 3.644
            },
            "idiomaticity": {
              "raw_score": 6.73,
              "weight": 0.25,
              "weighted_score": 1.683
            },
            "performance": {
              "raw_score": 5.95,
              "weight": 0.2,
              "weighted_score": 1.19
            },
            "best_practices": {
              "raw_score": 5.47,
              "weight": 0.15,
              "weighted_score": 0.82
            }
          }
        },
        {
          "test_id": "ruby_hard_05",
          "test_name": "YJIT Optimization Pattern",
          "difficulty": "hard",
          "passed": false,
          "base_score": 4.18,
          "difficulty_multiplier": 1.5,
          "weighted_score": 6.28,
          "max_possible": 15.0,
          "percentage": 41.84,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 2.3,
              "weight": 0.4,
              "weighted_score": 0.92
            },
            "idiomaticity": {
              "raw_score": 5.61,
              "weight": 0.25,
              "weighted_score": 1.403
            },
            "performance": {
              "raw_score": 7.03,
              "weight": 0.2,
              "weighted_score": 1.406
            },
            "best_practices": {
              "raw_score": 3.04,
              "weight": 0.15,
              "weighted_score": 0.456
            }
          }
        }
      ]
    },
    "golang_engineer": {
      "agent_id": "golang_engineer",
      "language": "golang",
      "total_tests": 12,
      "tests_passed": 7,
      "pass_rate": 58.33,
      "total_points": 90.79,
      "max_points": 145.0,
      "percentage": 62.61,
      "grade": "C",
      "grade_description": "Adequate",
      "dimension_scores": {
        "correctness": {
          "points": 30.02,
          "max_points": 30.02,
          "percentage": 100.0,
          "weight": 0.4
        },
        "idiomaticity": {
          "points": 19.1,
          "max_points": 19.1,
          "percentage": 99.99,
          "weight": 0.25
        },
        "performance": {
          "points": 16.34,
          "max_points": 16.34,
          "percentage": 100.0,
          "weight": 0.2
        },
        "best_practices": {
          "points": 10.68,
          "max_points": 10.68,
          "percentage": 99.98,
          "weight": 0.15
        }
      },
      "difficulty_breakdown": {
        "easy": {
          "total": 4,
          "passed": 3,
          "points": 27.12,
          "max_points": 40.0,
          "percentage": 67.8
        },
        "medium": {
          "total": 5,
          "passed": 3,
          "points": 39.47,
          "max_points": 60.0,
          "percentage": 65.78
        },
        "hard": {
          "total": 3,
          "passed": 1,
          "points": 24.2,
          "max_points": 45.0,
          "percentage": 53.78
        }
      },
      "category_scores": {
        "concurrency": {
          "total": 3,
          "passed": 2,
          "points": 26.14,
          "max_points": 37.0,
          "percentage": 70.65
        },
        "error_handling": {
          "total": 2,
          "passed": 2,
          "points": 17.15,
          "max_points": 22.0,
          "percentage": 77.95
        },
        "interfaces": {
          "total": 2,
          "passed": 1,
          "points": 14.13,
          "max_points": 22.0,
          "percentage": 64.23
        },
        "oop": {
          "total": 1,
          "passed": 1,
          "points": 8.27,
          "max_points": 10.0,
          "percentage": 82.7
        },
        "generics": {
          "total": 1,
          "passed": 0,
          "points": 4.5,
          "max_points": 12.0,
          "percentage": 37.5
        },
        "real_world": {
          "total": 2,
          "passed": 1,
          "points": 15.06,
          "max_points": 27.0,
          "percentage": 55.78
        },
        "performance": {
          "total": 1,
          "passed": 0,
          "points": 5.54,
          "max_points": 15.0,
          "percentage": 36.93
        }
      },
      "strengths": [
        "Strong correctness (100.0%)"
      ],
      "weaknesses": [
        "Struggles with hard tests (33%)",
        "Needs improvement in performance (36.9%)"
      ],
      "test_scores": [
        {
          "test_id": "go_easy_01",
          "test_name": "Simple Goroutine",
          "difficulty": "easy",
          "passed": false,
          "base_score": 2.89,
          "difficulty_multiplier": 1.0,
          "weighted_score": 2.89,
          "max_possible": 10.0,
          "percentage": 28.86,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 1.08,
              "weight": 0.4,
              "weighted_score": 0.432
            },
            "idiomaticity": {
              "raw_score": 3.17,
              "weight": 0.25,
              "weighted_score": 0.792
            },
            "performance": {
              "raw_score": 5.46,
              "weight": 0.2,
              "weighted_score": 1.092
            },
            "best_practices": {
              "raw_score": 3.8,
              "weight": 0.15,
              "weighted_score": 0.57
            }
          }
        },
        {
          "test_id": "go_easy_05",
          "test_name": "Error Handling",
          "difficulty": "easy",
          "passed": true,
          "base_score": 7.98,
          "difficulty_multiplier": 1.0,
          "weighted_score": 7.98,
          "max_possible": 10.0,
          "percentage": 79.79,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.6,
              "weight": 0.4,
              "weighted_score": 3.44
            },
            "idiomaticity": {
              "raw_score": 7.39,
              "weight": 0.25,
              "weighted_score": 1.847
            },
            "performance": {
              "raw_score": 7.79,
              "weight": 0.2,
              "weighted_score": 1.558
            },
            "best_practices": {
              "raw_score": 7.56,
              "weight": 0.15,
              "weighted_score": 1.134
            }
          }
        },
        {
          "test_id": "go_easy_04",
          "test_name": "Interface Implementation",
          "difficulty": "easy",
          "passed": true,
          "base_score": 7.98,
          "difficulty_multiplier": 1.0,
          "weighted_score": 7.98,
          "max_possible": 10.0,
          "percentage": 79.82,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.18,
              "weight": 0.4,
              "weighted_score": 3.672
            },
            "idiomaticity": {
              "raw_score": 7.83,
              "weight": 0.25,
              "weighted_score": 1.958
            },
            "performance": {
              "raw_score": 5.92,
              "weight": 0.2,
              "weighted_score": 1.184
            },
            "best_practices": {
              "raw_score": 7.79,
              "weight": 0.15,
              "weighted_score": 1.168
            }
          }
        },
        {
          "test_id": "go_easy_03",
          "test_name": "Struct Methods",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.27,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.27,
          "max_possible": 10.0,
          "percentage": 82.65,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.77,
              "weight": 0.4,
              "weighted_score": 3.508
            },
            "idiomaticity": {
              "raw_score": 8.52,
              "weight": 0.25,
              "weighted_score": 2.13
            },
            "performance": {
              "raw_score": 6.62,
              "weight": 0.2,
              "weighted_score": 1.324
            },
            "best_practices": {
              "raw_score": 8.69,
              "weight": 0.15,
              "weighted_score": 1.303
            }
          }
        },
        {
          "test_id": "go_medium_01",
          "test_name": "Worker Pool",
          "difficulty": "medium",
          "passed": true,
          "base_score": 8.33,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.99,
          "max_possible": 12.0,
          "percentage": 83.26,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.1,
              "weight": 0.4,
              "weighted_score": 3.64
            },
            "idiomaticity": {
              "raw_score": 6.71,
              "weight": 0.25,
              "weighted_score": 1.677
            },
            "performance": {
              "raw_score": 9.68,
              "weight": 0.2,
              "weighted_score": 1.936
            },
            "best_practices": {
              "raw_score": 7.15,
              "weight": 0.15,
              "weighted_score": 1.073
            }
          }
        },
        {
          "test_id": "go_medium_04",
          "test_name": "Custom Error Type",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.64,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.17,
          "max_possible": 12.0,
          "percentage": 76.41,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.52,
              "weight": 0.4,
              "weighted_score": 3.808
            },
            "idiomaticity": {
              "raw_score": 7.05,
              "weight": 0.25,
              "weighted_score": 1.762
            },
            "performance": {
              "raw_score": 6.12,
              "weight": 0.2,
              "weighted_score": 1.224
            },
            "best_practices": {
              "raw_score": 5.64,
              "weight": 0.15,
              "weighted_score": 0.846
            }
          }
        },
        {
          "test_id": "go_medium_05",
          "test_name": "Generic Stack",
          "difficulty": "medium",
          "passed": false,
          "base_score": 3.75,
          "difficulty_multiplier": 1.2,
          "weighted_score": 4.5,
          "max_possible": 12.0,
          "percentage": 37.53,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 1.71,
              "weight": 0.4,
              "weighted_score": 0.684
            },
            "idiomaticity": {
              "raw_score": 5.28,
              "weight": 0.25,
              "weighted_score": 1.32
            },
            "performance": {
              "raw_score": 5.88,
              "weight": 0.2,
              "weighted_score": 1.176
            },
            "best_practices": {
              "raw_score": 3.82,
              "weight": 0.15,
              "weighted_score": 0.573
            }
          }
        },
        {
          "test_id": "go_medium_07",
          "test_name": "Interface Composition",
          "difficulty": "medium",
          "passed": false,
          "base_score": 5.13,
          "difficulty_multiplier": 1.2,
          "weighted_score": 6.15,
          "max_possible": 12.0,
          "percentage": 51.25,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 3.51,
              "weight": 0.4,
              "weighted_score": 1.404
            },
            "idiomaticity": {
              "raw_score": 4.7,
              "weight": 0.25,
              "weighted_score": 1.175
            },
            "performance": {
              "raw_score": 9.44,
              "weight": 0.2,
              "weighted_score": 1.888
            },
            "best_practices": {
              "raw_score": 4.39,
              "weight": 0.15,
              "weighted_score": 0.658
            }
          }
        },
        {
          "test_id": "go_medium_10",
          "test_name": "HTTP Client with Timeout",
          "difficulty": "medium",
          "passed": true,
          "base_score": 8.05,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.66,
          "max_possible": 12.0,
          "percentage": 80.52,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.9,
              "weight": 0.4,
              "weighted_score": 3.96
            },
            "idiomaticity": {
              "raw_score": 6.44,
              "weight": 0.25,
              "weighted_score": 1.61
            },
            "performance": {
              "raw_score": 7.76,
              "weight": 0.2,
              "weighted_score": 1.552
            },
            "best_practices": {
              "raw_score": 6.2,
              "weight": 0.15,
              "weighted_score": 0.93
            }
          }
        },
        {
          "test_id": "go_hard_01",
          "test_name": "Pipeline Pattern",
          "difficulty": "hard",
          "passed": true,
          "base_score": 8.84,
          "difficulty_multiplier": 1.5,
          "weighted_score": 13.26,
          "max_possible": 15.0,
          "percentage": 88.43,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.71,
              "weight": 0.4,
              "weighted_score": 3.484
            },
            "idiomaticity": {
              "raw_score": 8.6,
              "weight": 0.25,
              "weighted_score": 2.15
            },
            "performance": {
              "raw_score": 8.97,
              "weight": 0.2,
              "weighted_score": 1.794
            },
            "best_practices": {
              "raw_score": 9.43,
              "weight": 0.15,
              "weighted_score": 1.414
            }
          }
        },
        {
          "test_id": "go_hard_04",
          "test_name": "Memory Pool",
          "difficulty": "hard",
          "passed": false,
          "base_score": 3.69,
          "difficulty_multiplier": 1.5,
          "weighted_score": 5.54,
          "max_possible": 15.0,
          "percentage": 36.9,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 3.52,
              "weight": 0.4,
              "weighted_score": 1.408
            },
            "idiomaticity": {
              "raw_score": 4.99,
              "weight": 0.25,
              "weighted_score": 1.248
            },
            "performance": {
              "raw_score": 2.39,
              "weight": 0.2,
              "weighted_score": 0.478
            },
            "best_practices": {
              "raw_score": 3.71,
              "weight": 0.15,
              "weighted_score": 0.556
            }
          }
        },
        {
          "test_id": "go_hard_03",
          "test_name": "Graceful Shutdown",
          "difficulty": "hard",
          "passed": false,
          "base_score": 3.6,
          "difficulty_multiplier": 1.5,
          "weighted_score": 5.4,
          "max_possible": 15.0,
          "percentage": 36.02,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 1.46,
              "weight": 0.4,
              "weighted_score": 0.584
            },
            "idiomaticity": {
              "raw_score": 5.74,
              "weight": 0.25,
              "weighted_score": 1.435
            },
            "performance": {
              "raw_score": 5.65,
              "weight": 0.2,
              "weighted_score": 1.13
            },
            "best_practices": {
              "raw_score": 3.02,
              "weight": 0.15,
              "weighted_score": 0.453
            }
          }
        }
      ]
    },
    "rust_engineer": {
      "agent_id": "rust_engineer",
      "language": "rust",
      "total_tests": 12,
      "tests_passed": 9,
      "pass_rate": 75.0,
      "total_points": 97.6,
      "max_points": 145.0,
      "percentage": 67.31,
      "grade": "C+",
      "grade_description": "Fair",
      "dimension_scores": {
        "correctness": {
          "points": 35.72,
          "max_points": 35.72,
          "percentage": 100.0,
          "weight": 0.4
        },
        "idiomaticity": {
          "points": 18.55,
          "max_points": 18.55,
          "percentage": 99.99,
          "weight": 0.25
        },
        "performance": {
          "points": 15.73,
          "max_points": 15.73,
          "percentage": 100.0,
          "weight": 0.2
        },
        "best_practices": {
          "points": 10.78,
          "max_points": 10.78,
          "percentage": 99.99,
          "weight": 0.15
        }
      },
      "difficulty_breakdown": {
        "easy": {
          "total": 4,
          "passed": 3,
          "points": 26.82,
          "max_points": 40.0,
          "percentage": 67.05
        },
        "medium": {
          "total": 5,
          "passed": 4,
          "points": 40.82,
          "max_points": 60.0,
          "percentage": 68.03
        },
        "hard": {
          "total": 3,
          "passed": 2,
          "points": 29.96,
          "max_points": 45.0,
          "percentage": 66.58
        }
      },
      "category_scores": {
        "borrowing": {
          "total": 1,
          "passed": 1,
          "points": 8.1,
          "max_points": 10.0,
          "percentage": 81.0
        },
        "error_handling": {
          "total": 1,
          "passed": 1,
          "points": 7.78,
          "max_points": 10.0,
          "percentage": 77.8
        },
        "ownership": {
          "total": 1,
          "passed": 1,
          "points": 7.36,
          "max_points": 10.0,
          "percentage": 73.6
        },
        "pattern_matching": {
          "total": 1,
          "passed": 0,
          "points": 3.58,
          "max_points": 10.0,
          "percentage": 35.8
        },
        "data_structures": {
          "total": 1,
          "passed": 0,
          "points": 3.92,
          "max_points": 12.0,
          "percentage": 32.67
        },
        "functional": {
          "total": 1,
          "passed": 1,
          "points": 9.64,
          "max_points": 12.0,
          "percentage": 80.33
        },
        "generics": {
          "total": 1,
          "passed": 1,
          "points": 9.27,
          "max_points": 12.0,
          "percentage": 77.25
        },
        "lifetimes": {
          "total": 1,
          "passed": 1,
          "points": 8.89,
          "max_points": 12.0,
          "percentage": 74.08
        },
        "memory": {
          "total": 1,
          "passed": 1,
          "points": 9.1,
          "max_points": 12.0,
          "percentage": 75.83
        },
        "advanced_types": {
          "total": 1,
          "passed": 1,
          "points": 12.3,
          "max_points": 15.0,
          "percentage": 82.0
        },
        "async": {
          "total": 1,
          "passed": 1,
          "points": 11.86,
          "max_points": 15.0,
          "percentage": 79.07
        },
        "unsafe": {
          "total": 1,
          "passed": 0,
          "points": 5.8,
          "max_points": 15.0,
          "percentage": 38.67
        }
      },
      "strengths": [
        "Strong correctness (100.0%)"
      ],
      "weaknesses": [
        "Needs improvement in data_structures (32.7%)"
      ],
      "test_scores": [
        {
          "test_id": "rust_easy_02",
          "test_name": "Borrowing Basics",
          "difficulty": "easy",
          "passed": true,
          "base_score": 8.1,
          "difficulty_multiplier": 1.0,
          "weighted_score": 8.1,
          "max_possible": 10.0,
          "percentage": 81.03,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.13,
              "weight": 0.4,
              "weighted_score": 3.652
            },
            "idiomaticity": {
              "raw_score": 7.12,
              "weight": 0.25,
              "weighted_score": 1.78
            },
            "performance": {
              "raw_score": 8.72,
              "weight": 0.2,
              "weighted_score": 1.744
            },
            "best_practices": {
              "raw_score": 6.18,
              "weight": 0.15,
              "weighted_score": 0.927
            }
          }
        },
        {
          "test_id": "rust_easy_03",
          "test_name": "Option Handling",
          "difficulty": "easy",
          "passed": true,
          "base_score": 7.78,
          "difficulty_multiplier": 1.0,
          "weighted_score": 7.78,
          "max_possible": 10.0,
          "percentage": 77.77,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.49,
              "weight": 0.4,
              "weighted_score": 3.796
            },
            "idiomaticity": {
              "raw_score": 6.59,
              "weight": 0.25,
              "weighted_score": 1.647
            },
            "performance": {
              "raw_score": 6.33,
              "weight": 0.2,
              "weighted_score": 1.266
            },
            "best_practices": {
              "raw_score": 7.12,
              "weight": 0.15,
              "weighted_score": 1.068
            }
          }
        },
        {
          "test_id": "rust_easy_01",
          "test_name": "Ownership Transfer",
          "difficulty": "easy",
          "passed": true,
          "base_score": 7.36,
          "difficulty_multiplier": 1.0,
          "weighted_score": 7.36,
          "max_possible": 10.0,
          "percentage": 73.56,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.11,
              "weight": 0.4,
              "weighted_score": 3.644
            },
            "idiomaticity": {
              "raw_score": 6.77,
              "weight": 0.25,
              "weighted_score": 1.692
            },
            "performance": {
              "raw_score": 5.83,
              "weight": 0.2,
              "weighted_score": 1.166
            },
            "best_practices": {
              "raw_score": 5.69,
              "weight": 0.15,
              "weighted_score": 0.854
            }
          }
        },
        {
          "test_id": "rust_easy_07",
          "test_name": "Match Expression",
          "difficulty": "easy",
          "passed": false,
          "base_score": 3.58,
          "difficulty_multiplier": 1.0,
          "weighted_score": 3.58,
          "max_possible": 10.0,
          "percentage": 35.75,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 2.38,
              "weight": 0.4,
              "weighted_score": 0.952
            },
            "idiomaticity": {
              "raw_score": 4.0,
              "weight": 0.25,
              "weighted_score": 1.0
            },
            "performance": {
              "raw_score": 5.17,
              "weight": 0.2,
              "weighted_score": 1.034
            },
            "best_practices": {
              "raw_score": 3.93,
              "weight": 0.15,
              "weighted_score": 0.59
            }
          }
        },
        {
          "test_id": "rust_medium_03",
          "test_name": "Enum with Data",
          "difficulty": "medium",
          "passed": false,
          "base_score": 3.26,
          "difficulty_multiplier": 1.2,
          "weighted_score": 3.92,
          "max_possible": 12.0,
          "percentage": 32.64,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 0.16,
              "weight": 0.4,
              "weighted_score": 0.064
            },
            "idiomaticity": {
              "raw_score": 3.26,
              "weight": 0.25,
              "weighted_score": 0.815
            },
            "performance": {
              "raw_score": 7.8,
              "weight": 0.2,
              "weighted_score": 1.56
            },
            "best_practices": {
              "raw_score": 5.5,
              "weight": 0.15,
              "weighted_score": 0.825
            }
          }
        },
        {
          "test_id": "rust_medium_07",
          "test_name": "Closure Capturing",
          "difficulty": "medium",
          "passed": true,
          "base_score": 8.03,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.64,
          "max_possible": 12.0,
          "percentage": 80.31,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.82,
              "weight": 0.4,
              "weighted_score": 3.928
            },
            "idiomaticity": {
              "raw_score": 6.73,
              "weight": 0.25,
              "weighted_score": 1.683
            },
            "performance": {
              "raw_score": 7.23,
              "weight": 0.2,
              "weighted_score": 1.446
            },
            "best_practices": {
              "raw_score": 6.5,
              "weight": 0.15,
              "weighted_score": 0.975
            }
          }
        },
        {
          "test_id": "rust_medium_02",
          "test_name": "Generic Functions",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.72,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.27,
          "max_possible": 12.0,
          "percentage": 77.21,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.43,
              "weight": 0.4,
              "weighted_score": 3.772
            },
            "idiomaticity": {
              "raw_score": 6.65,
              "weight": 0.25,
              "weighted_score": 1.663
            },
            "performance": {
              "raw_score": 6.49,
              "weight": 0.2,
              "weighted_score": 1.298
            },
            "best_practices": {
              "raw_score": 6.59,
              "weight": 0.15,
              "weighted_score": 0.988
            }
          }
        },
        {
          "test_id": "rust_medium_01",
          "test_name": "Lifetime Annotations",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.41,
          "difficulty_multiplier": 1.2,
          "weighted_score": 8.89,
          "max_possible": 12.0,
          "percentage": 74.11,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.86,
              "weight": 0.4,
              "weighted_score": 3.944
            },
            "idiomaticity": {
              "raw_score": 6.49,
              "weight": 0.25,
              "weighted_score": 1.623
            },
            "performance": {
              "raw_score": 4.1,
              "weight": 0.2,
              "weighted_score": 0.82
            },
            "best_practices": {
              "raw_score": 6.83,
              "weight": 0.15,
              "weighted_score": 1.024
            }
          }
        },
        {
          "test_id": "rust_medium_04",
          "test_name": "Smart Pointers - Box",
          "difficulty": "medium",
          "passed": true,
          "base_score": 7.58,
          "difficulty_multiplier": 1.2,
          "weighted_score": 9.1,
          "max_possible": 12.0,
          "percentage": 75.8,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.52,
              "weight": 0.4,
              "weighted_score": 3.808
            },
            "idiomaticity": {
              "raw_score": 7.3,
              "weight": 0.25,
              "weighted_score": 1.825
            },
            "performance": {
              "raw_score": 5.14,
              "weight": 0.2,
              "weighted_score": 1.028
            },
            "best_practices": {
              "raw_score": 6.13,
              "weight": 0.15,
              "weighted_score": 0.919
            }
          }
        },
        {
          "test_id": "rust_hard_04",
          "test_name": "Higher-Ranked Trait Bounds",
          "difficulty": "hard",
          "passed": true,
          "base_score": 8.2,
          "difficulty_multiplier": 1.5,
          "weighted_score": 12.3,
          "max_possible": 15.0,
          "percentage": 82.02,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 8.93,
              "weight": 0.4,
              "weighted_score": 3.572
            },
            "idiomaticity": {
              "raw_score": 7.17,
              "weight": 0.25,
              "weighted_score": 1.792
            },
            "performance": {
              "raw_score": 9.27,
              "weight": 0.2,
              "weighted_score": 1.854
            },
            "best_practices": {
              "raw_score": 6.56,
              "weight": 0.15,
              "weighted_score": 0.984
            }
          }
        },
        {
          "test_id": "rust_hard_01",
          "test_name": "Async/Await with Tokio",
          "difficulty": "hard",
          "passed": true,
          "base_score": 7.91,
          "difficulty_multiplier": 1.5,
          "weighted_score": 11.86,
          "max_possible": 15.0,
          "percentage": 79.09,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 9.23,
              "weight": 0.4,
              "weighted_score": 3.692
            },
            "idiomaticity": {
              "raw_score": 6.97,
              "weight": 0.25,
              "weighted_score": 1.742
            },
            "performance": {
              "raw_score": 7.53,
              "weight": 0.2,
              "weighted_score": 1.506
            },
            "best_practices": {
              "raw_score": 6.46,
              "weight": 0.15,
              "weighted_score": 0.969
            }
          }
        },
        {
          "test_id": "rust_hard_03",
          "test_name": "Unsafe Code",
          "difficulty": "hard",
          "passed": false,
          "base_score": 3.87,
          "difficulty_multiplier": 1.5,
          "weighted_score": 5.8,
          "max_possible": 15.0,
          "percentage": 38.66,
          "dimension_breakdown": {
            "correctness": {
              "raw_score": 2.25,
              "weight": 0.4,
              "weighted_score": 0.9
            },
            "idiomaticity": {
              "raw_score": 5.17,
              "weight": 0.25,
              "weighted_score": 1.292
            },
            "performance": {
              "raw_score": 5.06,
              "weight": 0.2,
              "weighted_score": 1.012
            },
            "best_practices": {
              "raw_score": 4.41,
              "weight": 0.15,
              "weighted_score": 0.661
            }
          }
        }
      ]
    }
  },
  "leaderboard": [
    {
      "rank": 1,
      "agent_id": "ruby_engineer",
      "language": "ruby",
      "score": 68.14,
      "grade": "C+",
      "tests_passed": "9/12",
      "pass_rate": 75.0
    },
    {
      "rank": 2,
      "agent_id": "rust_engineer",
      "language": "rust",
      "score": 67.31,
      "grade": "C+",
      "tests_passed": "9/12",
      "pass_rate": 75.0
    },
    {
      "rank": 3,
      "agent_id": "typescript_engineer",
      "language": "typescript",
      "score": 66.76,
      "grade": "C+",
      "tests_passed": "8/12",
      "pass_rate": 66.67
    },
    {
      "rank": 4,
      "agent_id": "nextjs_engineer",
      "language": "nextjs",
      "score": 65.81,
      "grade": "C+",
      "tests_passed": "9/12",
      "pass_rate": 75.0
    },
    {
      "rank": 5,
      "agent_id": "golang_engineer",
      "language": "golang",
      "score": 62.61,
      "grade": "C",
      "tests_passed": "7/12",
      "pass_rate": 58.33
    },
    {
      "rank": 6,
      "agent_id": "python_engineer",
      "language": "python",
      "score": 62.33,
      "grade": "C",
      "tests_passed": "7/12",
      "pass_rate": 58.33
    },
    {
      "rank": 7,
      "agent_id": "php_engineer",
      "language": "php",
      "score": 60.81,
      "grade": "C",
      "tests_passed": "7/12",
      "pass_rate": 58.33
    }
  ],
  "aggregate_statistics": {
    "total_tests_executed": 84,
    "total_tests_passed": 56,
    "overall_pass_rate": 66.67,
    "average_score": 64.82,
    "highest_score": 68.14,
    "lowest_score": 60.81,
    "dimension_averages": {
      "correctness": 100.0,
      "idiomaticity": 100.0,
      "performance": 100.0,
      "best_practices": 99.99
    },
    "grade_distribution": {
      "C": 3,
      "C+": 4
    }
  }
}