<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="24" skipped="0" tests="156" time="1.984" timestamp="2025-08-20T12:38:47.692752-04:00" hostname="Masas-M4-Air.local"><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_initialization" time="0.046" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_validate_args_no_subcommand" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_validate_args_invalid_subcommand" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_validate_args_valid_subcommand" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_run_start_command_success" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_run_start_command_failure" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_run_stop_command_success" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_run_status_command_success" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_run_sessions_command_success" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_run_view_command_success" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_run_export_command_success" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_run_unknown_subcommand" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_start_command_delegates_to_legacy" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_stop_command_delegates_to_legacy" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_status_command_delegates_to_legacy" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_sessions_command_delegates_to_legacy" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_view_command_delegates_to_legacy" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommand" name="test_export_command_delegates_to_legacy" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandFunction" name="test_aggregate_command_success" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandFunction" name="test_aggregate_command_error" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandFunction" name="test_aggregate_command_structured_output" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandFunction" name="test_aggregate_command_no_structured_output" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandIntegration" name="test_full_execution_flow" time="0.002" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandIntegration" name="test_error_handling_in_execution" time="0.004" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandIntegration" name="test_keyboard_interrupt_handling" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandLegacyCompatibility" name="test_all_legacy_commands_called" time="0.002" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandLegacyCompatibility" name="test_legacy_function_compatibility" time="0.001" /><testcase classname="tests.cli.test_aggregate_command.TestAggregateCommandLegacyCompatibility" name="test_legacy_function_unknown_subcommand" time="0.001" /><testcase classname="tests.cli.test_base_command.TestCommandResult" name="test_success_result_creation" time="0.001" /><testcase classname="tests.cli.test_base_command.TestCommandResult" name="test_success_result_with_data" time="0.000" /><testcase classname="tests.cli.test_base_command.TestCommandResult" name="test_error_result_creation" time="0.000" /><testcase classname="tests.cli.test_base_command.TestCommandResult" name="test_error_result_with_custom_exit_code" time="0.000" /><testcase classname="tests.cli.test_base_command.TestCommandResult" name="test_error_result_with_data" time="0.001" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_initialization" time="0.001" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_config_lazy_loading" time="0.001" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_working_dir_default" time="0.001" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_working_dir_from_env" time="0.001" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_setup_logging_debug" time="0.002" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_setup_logging_verbose" time="0.002" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_setup_logging_quiet" time="0.001" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_load_config_default" time="0.001" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_load_config_with_file" time="0.001" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_execute_success" time="0.001" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_execute_validation_error" time="0.002" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_execute_keyboard_interrupt" time="0.002" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_execute_exception" time="0.003" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_print_result_text_format" time="0.002" /><testcase classname="tests.cli.test_base_command.TestBaseCommand" name="test_print_result_to_file" time="0.001" /><testcase classname="tests.cli.test_base_command.TestServiceCommand" name="test_initialization" time="0.001" /><testcase classname="tests.cli.test_base_command.TestServiceCommand" name="test_service_lazy_loading" time="0.001" /><testcase classname="tests.cli.test_base_command.TestAgentCommand" name="test_initialization" time="0.001" /><testcase classname="tests.cli.test_base_command.TestAgentCommand" name="test_get_agent_dir_from_args" time="0.001" /><testcase classname="tests.cli.test_base_command.TestAgentCommand" name="test_get_agent_dir_default" time="0.001" /><testcase classname="tests.cli.test_base_command.TestAgentCommand" name="test_get_agent_pattern" time="0.000" /><testcase classname="tests.cli.test_base_command.TestAgentCommand" name="test_get_agent_pattern_none" time="0.001" /><testcase classname="tests.cli.test_base_command.TestMemoryCommand" name="test_initialization" time="0.001" /><testcase classname="tests.cli.test_base_command.TestMemoryCommand" name="test_get_memory_dir_from_args" time="0.000" /><testcase classname="tests.cli.test_base_command.TestMemoryCommand" name="test_get_memory_dir_default" time="0.001" /><testcase classname="tests.cli.test_cleanup_command.TestCleanupCommand" name="test_cleanup_handles_eof_error" time="0.006" /><testcase classname="tests.cli.test_cleanup_command.TestCleanupCommand" name="test_cleanup_no_claude_json" time="0.002" /><testcase classname="tests.cli.test_cleanup_command.TestCleanupCommand" name="test_cleanup_with_force_flag" time="0.007" /><testcase classname="tests.cli.test_cleanup_command.TestCleanupCommand" name="test_cleanup_with_user_cancel_non_tty" time="0.005" /><testcase classname="tests.cli.test_cleanup_command.TestCleanupCommand" name="test_cleanup_with_user_cancel_tty" time="0.003" /><testcase classname="tests.cli.test_cleanup_command.TestCleanupCommand" name="test_format_size" time="0.001" /><testcase classname="tests.cli.test_cleanup_command.TestCleanupCommand" name="test_parse_size" time="0.001" /><testcase classname="tests.cli.test_command_separation.TestCommandSeparation" name="test_can_import_run_without_memory_guardian" time="0.001" /><testcase classname="tests.cli.test_command_separation.TestCommandSeparation" name="test_documentation_has_experimental_warnings" time="0.001" /><testcase classname="tests.cli.test_command_separation.TestCommandSeparation" name="test_experimental_features_config_exists" time="0.001" /><testcase classname="tests.cli.test_command_separation.TestCommandSeparation" name="test_experimental_flag_controls_feature" time="0.003"><failure message="AssertionError: False is not true : Warning should be shown for experimental features">test_command_separation.py:246: in test_experimental_flag_controls_feature
    self.assertTrue(
E   AssertionError: False is not true : Warning should be shown for experimental features</failure></testcase><testcase classname="tests.cli.test_command_separation.TestCommandSeparation" name="test_experimental_warning_shown" time="0.001"><failure message="FileNotFoundError: [Errno 2] No such file or directory: '/Users/masa/Projects/claude-mpm/src/claude_mpm/cli/commands/run_guarded.py'">test_command_separation.py:129: in test_experimental_warning_shown
    with open(self.run_guarded_module_path, "r") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: '/Users/masa/Projects/claude-mpm/src/claude_mpm/cli/commands/run_guarded.py'</failure></testcase><testcase classname="tests.cli.test_command_separation.TestCommandSeparation" name="test_parser_marks_run_guarded_as_experimental" time="0.001"><failure message="AssertionError: 'EXPERIMENTAL' not found in '&quot;&quot;&quot;\nArgument parser for claude-mpm CLI.\n\nWHY: This module provides backward compatibility and delegates to the new modular\nparser structure. The massive create_parser function has been split into focused\nmodules in the parsers/ package.\n\nDESIGN DECISION: We maintain this file for backward compatibility while the actual\nparser logic has been moved to parsers/ modules for better maintainability.\n\nREFACTORING NOTE: The original 961-line create_parser function has been split into:\n- parsers/base_parser.py: Common arguments and main parser setup\n- parsers/run_parser.py: Run command arguments\n- parsers/agents_parser.py: Agent management commands\n- parsers/memory_parser.py: Memory management commands\n- parsers/tickets_parser.py: Ticket management commands\n- parsers/config_parser.py: Configuration commands\n- parsers/monitor_parser.py: Monitoring commands\n- parsers/mcp_parser.py: MCP Gateway commands\n&quot;&quot;&quot;\n\nimport argparse\nfrom pathlib import Path\nfrom typing import List, Optional\n\n# Import from the new modular structure\nfrom .parsers import add_common_arguments, create_parser, preprocess_args\n\n# Re-export for backward compatibility\n__all__ = [&quot;create_parser&quot;, &quot;add_common_arguments&quot;, &quot;preprocess_args&quot;]\n\n# Legacy functions removed - all functionality moved to parsers/ modules\n# The original parser.py file contained a massive 961-line create_parser function\n# that has been split into focused modules for better maintainability.\n' : parser.py should mark run-guarded as EXPERIMENTAL">test_command_separation.py:156: in test_parser_marks_run_guarded_as_experimental
    self.assertIn(
E   AssertionError: 'EXPERIMENTAL' not found in '"""\nArgument parser for claude-mpm CLI.\n\nWHY: This module provides backward compatibility and delegates to the new modular\nparser structure. The massive create_parser function has been split into focused\nmodules in the parsers/ package.\n\nDESIGN DECISION: We maintain this file for backward compatibility while the actual\nparser logic has been moved to parsers/ modules for better maintainability.\n\nREFACTORING NOTE: The original 961-line create_parser function has been split into:\n- parsers/base_parser.py: Common arguments and main parser setup\n- parsers/run_parser.py: Run command arguments\n- parsers/agents_parser.py: Agent management commands\n- parsers/memory_parser.py: Memory management commands\n- parsers/tickets_parser.py: Ticket management commands\n- parsers/config_parser.py: Configuration commands\n- parsers/monitor_parser.py: Monitoring commands\n- parsers/mcp_parser.py: MCP Gateway commands\n"""\n\nimport argparse\nfrom pathlib import Path\nfrom typing import List, Optional\n\n# Import from the new modular structure\nfrom .parsers import add_common_arguments, create_parser, preprocess_args\n\n# Re-export for backward compatibility\n__all__ = ["create_parser", "add_common_arguments", "preprocess_args"]\n\n# Legacy functions removed - all functionality moved to parsers/ modules\n# The original parser.py file contained a massive 961-line create_parser function\n# that has been split into focused modules for better maintainability.\n' : parser.py should mark run-guarded as EXPERIMENTAL</failure></testcase><testcase classname="tests.cli.test_command_separation.TestCommandSeparation" name="test_run_guarded_extends_claude_runner" time="0.001"><failure message="FileNotFoundError: [Errno 2] No such file or directory: '/Users/masa/Projects/claude-mpm/src/claude_mpm/cli/commands/run_guarded.py'">test_command_separation.py:107: in test_run_guarded_extends_claude_runner
    with open(self.run_guarded_module_path, "r") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: '/Users/masa/Projects/claude-mpm/src/claude_mpm/cli/commands/run_guarded.py'</failure></testcase><testcase classname="tests.cli.test_command_separation.TestCommandSeparation" name="test_run_has_no_memory_guardian_imports" time="0.020" /><testcase classname="tests.cli.test_command_separation.TestCommandSeparation" name="test_run_has_no_memory_guardian_references" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_initialization" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_validate_args_no_command" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_validate_args_invalid_command" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_validate_args_valid_command" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_validate_config_success" time="0.008" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_validate_config_failure" time="0.003" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_view_config_text_format" time="0.002" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_view_config_json_format" time="0.003" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_view_config_yaml_format" time="0.002" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_view_config_with_output_file" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_view_config_table_format" time="0.002" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_show_config_status" time="0.002" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_show_config_status_json" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_run_unknown_command" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_display_config_table_flat" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_display_config_table_nested" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_flatten_config_simple" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_flatten_config_nested" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommand" name="test_flatten_config_with_lists" time="0.001" /><testcase classname="tests.cli.test_config_command.TestManageConfigFunction" name="test_manage_config_success" time="0.001" /><testcase classname="tests.cli.test_config_command.TestManageConfigFunction" name="test_manage_config_error" time="0.001" /><testcase classname="tests.cli.test_config_command.TestManageConfigFunction" name="test_manage_config_structured_output" time="0.001" /><testcase classname="tests.cli.test_config_command.TestConfigCommandIntegration" name="test_full_execution_flow" time="0.003" /><testcase classname="tests.cli.test_config_command.TestConfigCommandIntegration" name="test_error_handling_in_execution" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_initialization" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_validate_args_no_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_validate_args_invalid_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_validate_args_valid_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_default_status" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_init_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_view_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_add_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_clean_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_optimize_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_build_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_cross_ref_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_route_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_run_unknown_command" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_init_memory_success" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_init_memory_failure" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_show_status_success" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_show_memories_text_format" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_show_memories_json_format" time="0.002" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_route_memory_command_json_format" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommand" name="test_route_memory_command_text_format" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestManageMemoryFunction" name="test_manage_memory_success" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestManageMemoryFunction" name="test_manage_memory_error" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestManageMemoryFunction" name="test_manage_memory_structured_output" time="0.001" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommandIntegration" name="test_full_execution_flow" time="0.002" /><testcase classname="tests.cli.test_memory_command.TestMemoryCommandIntegration" name="test_error_handling_in_execution" time="0.002" /><testcase classname="tests.cli.test_shared_utilities.TestCommonArguments" name="test_verbose_argument" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestCommonArguments" name="test_quiet_argument" time="0.001"><failure message="AssertionError: assert 'quiet' in 'suppress non-error output'&#10; +  where 'suppress non-error output' = &lt;built-in method lower of str object at 0x108546ce0&gt;()&#10; +    where &lt;built-in method lower of str object at 0x108546ce0&gt; = 'Suppress non-error output'.lower">test_shared_utilities.py:43: in test_quiet_argument
    assert "quiet" in quiet["help"].lower()
E   AssertionError: assert 'quiet' in 'suppress non-error output'
E    +  where 'suppress non-error output' = &lt;built-in method lower of str object at 0x108546ce0&gt;()
E    +    where &lt;built-in method lower of str object at 0x108546ce0&gt; = 'Suppress non-error output'.lower</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestCommonArguments" name="test_debug_argument" time="0.000" /><testcase classname="tests.cli.test_shared_utilities.TestCommonArguments" name="test_config_file_argument" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestCommonArguments" name="test_output_format_argument" time="0.001"><failure message="AssertionError: assert ['json', 'yaml', 'table', 'text'] == ['text', 'json', 'yaml', 'table']&#10;  &#10;  At index 0 diff: 'json' != 'text'&#10;  &#10;  Full diff:&#10;    [&#10;  -     'text',&#10;        'json',&#10;        'yaml',&#10;        'table',&#10;  +     'text',&#10;    ]">test_shared_utilities.py:62: in test_output_format_argument
    assert output_format["choices"] == ["text", "json", "yaml", "table"]
E   AssertionError: assert ['json', 'yaml', 'table', 'text'] == ['text', 'json', 'yaml', 'table']
E     
E     At index 0 diff: 'json' != 'text'
E     
E     Full diff:
E       [
E     -     'text',
E           'json',
E           'yaml',
E           'table',
E     +     'text',
E       ]</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestArgumentPatterns" name="test_add_common_arguments" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestArgumentPatterns" name="test_add_logging_arguments" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestArgumentPatterns" name="test_add_config_arguments" time="0.001"><failure message="AssertionError: assert PosixPath('test.yaml') == 'test.yaml'&#10; +  where PosixPath('test.yaml') = Namespace(config=PosixPath('test.yaml'), config_dir=None).config">test_shared_utilities.py:96: in test_add_config_arguments
    assert args.config == "test.yaml"
E   AssertionError: assert PosixPath('test.yaml') == 'test.yaml'
E    +  where PosixPath('test.yaml') = Namespace(config=PosixPath('test.yaml'), config_dir=None).config</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestArgumentPatterns" name="test_add_output_arguments" time="0.001"><failure message="AssertionError: assert PosixPath('output.json') == 'output.json'&#10; +  where PosixPath('output.json') = Namespace(format='json', output=PosixPath('output.json')).output">test_shared_utilities.py:105: in test_add_output_arguments
    assert args.output == "output.json"
E   AssertionError: assert PosixPath('output.json') == 'output.json'
E    +  where PosixPath('output.json') = Namespace(format='json', output=PosixPath('output.json')).output</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestArgumentPatterns" name="test_add_agent_arguments" time="0.002"><failure message="AssertionError: assert PosixPath('/test/agents') == '/test/agents'&#10; +  where PosixPath('/test/agents') = Namespace(agent='test-agent', agent_dir=PosixPath('/test/agents')).agent_dir">test_shared_utilities.py:113: in test_add_agent_arguments
    assert args.agent_dir == "/test/agents"
E   AssertionError: assert PosixPath('/test/agents') == '/test/agents'
E    +  where PosixPath('/test/agents') = Namespace(agent='test-agent', agent_dir=PosixPath('/test/agents')).agent_dir</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestArgumentPatterns" name="test_add_memory_arguments" time="0.001"><failure message="AssertionError: assert PosixPath('/test/memories') == '/test/memories'&#10; +  where PosixPath('/test/memories') = Namespace(memory_dir=PosixPath('/test/memories')).memory_dir">test_shared_utilities.py:122: in test_add_memory_arguments
    assert args.memory_dir == "/test/memories"
E   AssertionError: assert PosixPath('/test/memories') == '/test/memories'
E    +  where PosixPath('/test/memories') = Namespace(memory_dir=PosixPath('/test/memories')).memory_dir</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestOutputFormatter" name="test_format_text_success" time="0.001"><failure message="assert ('\u2705' in &quot;CommandResult(success=True, exit_code=0, message='Test success', data={'key': 'value'})&quot; or 'SUCCESS' in &quot;CommandResult(success=True, exit_code=0, message='Test success', data={'key': 'value'})&quot;)">test_shared_utilities.py:138: in test_format_text_success
    assert "✅" in output or "SUCCESS" in output
E   assert ('\u2705' in "CommandResult(success=True, exit_code=0, message='Test success', data={'key': 'value'})" or 'SUCCESS' in "CommandResult(success=True, exit_code=0, message='Test success', data={'key': 'value'})")</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestOutputFormatter" name="test_format_text_error" time="0.001"><failure message="assert ('\u274c' in &quot;CommandResult(success=False, exit_code=1, message='Test error', data={'error': 'details'})&quot; or 'ERROR' in &quot;CommandResult(success=False, exit_code=1, message='Test error', data={'error': 'details'})&quot;)">test_shared_utilities.py:144: in test_format_text_error
    assert "❌" in output or "ERROR" in output
E   assert ('\u274c' in "CommandResult(success=False, exit_code=1, message='Test error', data={'error': 'details'})" or 'ERROR' in "CommandResult(success=False, exit_code=1, message='Test error', data={'error': 'details'})")</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestOutputFormatter" name="test_format_json_success" time="0.001"><failure message="TypeError: string indices must be integers, not 'str'">test_shared_utilities.py:151: in test_format_json_success
    assert data["success"] is True
           ^^^^^^^^^^^^^^^
E   TypeError: string indices must be integers, not 'str'</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestOutputFormatter" name="test_format_json_error" time="0.001"><failure message="TypeError: string indices must be integers, not 'str'">test_shared_utilities.py:160: in test_format_json_error
    assert data["success"] is False
           ^^^^^^^^^^^^^^^
E   TypeError: string indices must be integers, not 'str'</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestOutputFormatter" name="test_format_yaml_success" time="0.002"><failure message="yaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object:claude_mpm.cli.shared.command_base.CommandResult'&#10;  in &quot;&lt;unicode string&gt;&quot;, line 1, column 1:&#10;    !!python/object:claude_mpm.cli.s ... &#10;    ^">test_shared_utilities.py:167: in test_format_yaml_success
    data = yaml.safe_load(output)
           ^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/__init__.py:125: in safe_load
    return load(stream, SafeLoader)
           ^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/__init__.py:81: in load
    return loader.get_single_data()
           ^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:51: in get_single_data
    return self.construct_document(node)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:55: in construct_document
    data = self.construct_object(node)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:100: in construct_object
    data = constructor(self, node)
           ^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:427: in construct_undefined
    raise ConstructorError(None, None,
E   yaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object:claude_mpm.cli.shared.command_base.CommandResult'
E     in "&lt;unicode string&gt;", line 1, column 1:
E       !!python/object:claude_mpm.cli.s ... 
E       ^</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestOutputFormatter" name="test_format_yaml_error" time="0.002"><failure message="yaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object:claude_mpm.cli.shared.command_base.CommandResult'&#10;  in &quot;&lt;unicode string&gt;&quot;, line 1, column 1:&#10;    !!python/object:claude_mpm.cli.s ... &#10;    ^">test_shared_utilities.py:176: in test_format_yaml_error
    data = yaml.safe_load(output)
           ^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/__init__.py:125: in safe_load
    return load(stream, SafeLoader)
           ^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/__init__.py:81: in load
    return loader.get_single_data()
           ^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:51: in get_single_data
    return self.construct_document(node)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:55: in construct_document
    data = self.construct_object(node)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:100: in construct_object
    data = constructor(self, node)
           ^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:427: in construct_undefined
    raise ConstructorError(None, None,
E   yaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object:claude_mpm.cli.shared.command_base.CommandResult'
E     in "&lt;unicode string&gt;", line 1, column 1:
E       !!python/object:claude_mpm.cli.s ... 
E       ^</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestOutputFormatter" name="test_format_table_success" time="0.001"><failure message="TypeError: 'CommandResult' object is not subscriptable">test_shared_utilities.py:184: in test_format_table_success
    output = self.formatter.format_table(self.success_result)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../src/claude_mpm/cli/shared/output_formatters.py:36: in format_table
    headers = list(data[0].keys())
                   ^^^^^^^
E   TypeError: 'CommandResult' object is not subscriptable</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestOutputFormatter" name="test_format_table_error" time="0.001"><failure message="TypeError: 'CommandResult' object is not subscriptable">test_shared_utilities.py:191: in test_format_table_error
    output = self.formatter.format_table(self.error_result)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../src/claude_mpm/cli/shared/output_formatters.py:36: in format_table
    headers = list(data[0].keys())
                   ^^^^^^^
E   TypeError: 'CommandResult' object is not subscriptable</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestOutputFormatter" name="test_format_unknown_format" time="0.001"><failure message="AttributeError: 'OutputFormatter' object has no attribute 'format'">test_shared_utilities.py:198: in test_format_unknown_format
    output = self.formatter.format(self.success_result, "unknown")
             ^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'OutputFormatter' object has no attribute 'format'</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestFormatOutputFunction" name="test_format_output_text" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestFormatOutputFunction" name="test_format_output_json" time="0.001"><failure message="TypeError: string indices must be integers, not 'str'">test_shared_utilities.py:217: in test_format_output_json
    assert data["success"] is True
           ^^^^^^^^^^^^^^^
E   TypeError: string indices must be integers, not 'str'</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestFormatOutputFunction" name="test_format_output_yaml" time="0.002"><failure message="yaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object:claude_mpm.cli.shared.command_base.CommandResult'&#10;  in &quot;&lt;unicode string&gt;&quot;, line 1, column 1:&#10;    !!python/object:claude_mpm.cli.s ... &#10;    ^">test_shared_utilities.py:224: in test_format_output_yaml
    data = yaml.safe_load(output)
           ^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/__init__.py:125: in safe_load
    return load(stream, SafeLoader)
           ^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/__init__.py:81: in load
    return loader.get_single_data()
           ^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:51: in get_single_data
    return self.construct_document(node)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:55: in construct_document
    data = self.construct_object(node)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:100: in construct_object
    data = constructor(self, node)
           ^^^^^^^^^^^^^^^^^^^^^^^
../../venv/lib/python3.13/site-packages/yaml/constructor.py:427: in construct_undefined
    raise ConstructorError(None, None,
E   yaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object:claude_mpm.cli.shared.command_base.CommandResult'
E     in "&lt;unicode string&gt;", line 1, column 1:
E       !!python/object:claude_mpm.cli.s ... 
E       ^</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestFormatOutputFunction" name="test_format_output_table" time="0.001"><failure message="TypeError: 'CommandResult' object is not subscriptable">test_shared_utilities.py:231: in test_format_output_table
    output = format_output(result, "table")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../src/claude_mpm/cli/shared/output_formatters.py:126: in format_output
    return formatter.format_table(data, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../src/claude_mpm/cli/shared/output_formatters.py:36: in format_table
    headers = list(data[0].keys())
                   ^^^^^^^
E   TypeError: 'CommandResult' object is not subscriptable</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestCLIErrorHandler" name="test_initialization" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestCLIErrorHandler" name="test_handle_keyboard_interrupt" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestCLIErrorHandler" name="test_handle_file_not_found_error" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestCLIErrorHandler" name="test_handle_permission_error" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestCLIErrorHandler" name="test_handle_generic_exception" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestCLIErrorHandler" name="test_format_error_message" time="0.001"><failure message="AttributeError: 'CLIErrorHandler' object has no attribute 'format_error_message'">test_shared_utilities.py:275: in test_format_error_message
    message = self.handler.format_error_message(error)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'CLIErrorHandler' object has no attribute 'format_error_message'</failure></testcase><testcase classname="tests.cli.test_shared_utilities.TestHandleCLIErrorsDecorator" name="test_decorator_success" time="0.001" /><testcase classname="tests.cli.test_shared_utilities.TestHandleCLIErrorsDecorator" name="test_decorator_with_exception" time="0.001"><failure message="assert 22 == 1">test_shared_utilities.py:299: in test_decorator_with_exception
    assert result == 1  # Error exit code
    ^^^^^^^^^^^^^^^^^^
E   assert 22 == 1</failure></testcase><testcase time="0.000" /></testsuite></testsuites>