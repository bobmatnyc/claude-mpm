name: Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'src/**'
      - '.readthedocs.yaml'
      - 'pyproject.toml'
      - 'setup.py'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
      - '.readthedocs.yaml'
      - 'pyproject.toml'
      - 'setup.py'
  workflow_dispatch:

jobs:
  build-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.11']
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for version detection
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y graphviz libgraphviz-dev pkg-config
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[docs]"
        pip install -r docs/api/requirements.txt
    
    - name: Build documentation
      run: |
        cd docs/api
        make clean
        make html
      env:
        READTHEDOCS: "True"
        CLAUDE_MPM_DOCS_BUILD: "True"
    
    - name: Check for build warnings
      run: |
        if grep -q "WARNING" docs/api/_build/html/output.txt 2>/dev/null; then
          echo "Documentation build produced warnings"
          grep "WARNING" docs/api/_build/html/output.txt
          exit 1
        fi
      continue-on-error: true
    
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation-${{ matrix.python-version }}
        path: docs/api/_build/html/
        retention-days: 7
    
    - name: Test documentation links
      run: |
        pip install sphinx-lint linkchecker
        # Check for broken internal links
        python -m sphinx.cmd.build -b linkcheck docs/api docs/api/_build/linkcheck
      continue-on-error: true

  validate-readthedocs-config:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install validation tools
      run: |
        pip install pyyaml jsonschema
    
    - name: Validate .readthedocs.yaml
      run: |
        python -c "
        import yaml
        import sys
        
        with open('.readthedocs.yaml', 'r') as f:
            config = yaml.safe_load(f)
        
        # Basic validation
        assert config.get('version') == 2, 'Config version must be 2'
        assert 'sphinx' in config, 'Sphinx configuration required'
        assert 'python' in config, 'Python configuration required'
        assert 'build' in config, 'Build configuration required'
        
        print('✓ .readthedocs.yaml is valid')
        "
    
    - name: Check documentation structure
      run: |
        # Ensure required files exist
        test -f docs/api/conf.py || exit 1
        test -f docs/api/index.rst || exit 1
        test -f docs/api/requirements.txt || exit 1
        test -d docs/api/_static || mkdir -p docs/api/_static
        test -f docs/api/_static/custom.css || touch docs/api/_static/custom.css
        echo "✓ Documentation structure is valid"

  test-sphinx-build:
    runs-on: ubuntu-latest
    needs: [build-docs]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: documentation-3.11
        path: docs/api/_build/html/
    
    - name: Check generated files
      run: |
        # Verify essential files were generated
        test -f docs/api/_build/html/index.html || exit 1
        test -f docs/api/_build/html/search.html || exit 1
        test -f docs/api/_build/html/genindex.html || exit 1
        test -f docs/api/_build/html/py-modindex.html || exit 1
        echo "✓ Essential documentation files generated successfully"
    
    - name: Check documentation size
      run: |
        # Warn if documentation is unusually small (might indicate build issues)
        SIZE=$(du -sb docs/api/_build/html/ | cut -f1)
        if [ $SIZE -lt 1000000 ]; then
          echo "⚠ Warning: Documentation seems unusually small (< 1MB)"
        else
          echo "✓ Documentation size is reasonable"
        fi

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [test-sphinx-build]
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: documentation-3.11
        path: docs/api/_build/html/
    
    - name: Deploy preview to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './docs/api/_build/html'
        production-deploy: false
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: true
        enable-commit-comment: false
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      continue-on-error: true