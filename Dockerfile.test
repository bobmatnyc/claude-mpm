# Dockerfile for testing clean installation of claude-mpm v4.4.2
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user for testing
RUN useradd -m -s /bin/bash testuser
WORKDIR /home/testuser

# Copy the entire project source
COPY . /home/testuser/claude-mpm-source/

# Change ownership to testuser
RUN chown -R testuser:testuser /home/testuser

# Switch to test user
USER testuser

# Set up Python environment and install claude-mpm from source
WORKDIR /home/testuser/claude-mpm-source
RUN pip install --user --upgrade pip setuptools wheel

# Install claude-mpm in development mode from current source
RUN pip install --user -e .

# Verify PATH includes user bin directory
ENV PATH="/home/testuser/.local/bin:${PATH}"

# Create a test workspace
WORKDIR /home/testuser/test-workspace

# Create test script
RUN echo '#!/bin/bash\n\
set -e\n\
echo "=== Testing claude-mpm installation ==="\n\
echo "Python version: $(python --version)"\n\
echo "User: $(whoami)"\n\
echo "Working directory: $(pwd)"\n\
echo "PATH: $PATH"\n\
echo\n\
echo "=== Testing --version command ==="\n\
claude-mpm --version\n\
echo\n\
echo "=== Testing --help command ==="\n\
claude-mpm --help\n\
echo\n\
echo "=== Testing list agents command ==="\n\
claude-mpm list agents\n\
echo\n\
echo "=== Testing init command (dry-run) ==="\n\
# Use a temporary directory to avoid conflicts\n\
mkdir -p /tmp/test-init\n\
cd /tmp/test-init\n\
claude-mpm init --dry-run\n\
echo\n\
echo "=== Testing actual init command ==="\n\
claude-mpm init\n\
echo\n\
echo "=== Checking .claude directory structure ==="\n\
if [ -d ".claude" ]; then\n\
  echo "✓ .claude directory created"\n\
  ls -la .claude/\n\
  if [ -d ".claude/agents" ]; then\n\
    echo "✓ .claude/agents directory created"\n\
    ls -la .claude/agents/ || echo "agents directory is empty (expected)"\n\
  else\n\
    echo "✗ .claude/agents directory not found"\n\
  fi\n\
  if [ -f ".claude/config.yaml" ]; then\n\
    echo "✓ .claude/config.yaml created"\n\
    echo "Config file contents:"\n\
    cat .claude/config.yaml\n\
  else\n\
    echo "✗ .claude/config.yaml not found"\n\
  fi\n\
else\n\
  echo "✗ .claude directory not created"\n\
fi\n\
echo\n\
echo "=== Testing run command (help mode) ==="\n\
claude-mpm run --help\n\
echo\n\
echo "=== All tests completed successfully! ===" \n\
' > /home/testuser/test-installation.sh

RUN chmod +x /home/testuser/test-installation.sh

# Default command to run our test script
CMD ["/home/testuser/test-installation.sh"]