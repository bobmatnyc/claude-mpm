{"version":3,"file":"dashboard.js","sources":["../js/components/agent-hierarchy.js","../js/components/build-tracker.js","../js/dashboard.js"],"sourcesContent":["/**\n * Agent Hierarchy Component\n * \n * Displays agents in a hierarchical tree structure with PM at the top level.\n * Shows subagents as children of the PM that spawned them, tracking delegation\n * relationships from Task tool calls.\n * \n * WHY: Provides clear visualization of agent delegation relationships, making it\n * easier to understand the flow of work through PM and subagent delegations.\n * \n * DESIGN DECISION: Uses tree-based visualization with expand/collapse functionality\n * to handle complex delegation chains while maintaining performance with large\n * event streams. Separates hierarchy building from rendering for flexibility.\n */\n\nclass AgentHierarchy {\n    constructor(agentInference, eventViewer) {\n        this.agentInference = agentInference;\n        this.eventViewer = eventViewer;\n        \n        // Hierarchy state\n        this.state = {\n            // Tree structure with PM nodes at root\n            hierarchyTree: null,\n            // Map of agent ID to node for quick lookups\n            nodeMap: new Map(),\n            // Expanded state for tree nodes\n            expandedNodes: new Set(),\n            // Currently selected node\n            selectedNode: null\n        };\n        \n        // Default expand all nodes initially\n        this.expandAll = true;\n        \n        // Set up event listeners\n        this.setupEventListeners();\n        \n        console.log('Agent hierarchy component initialized');\n    }\n    \n    /**\n     * Set up event listeners for safe interaction\n     */\n    setupEventListeners() {\n        // Use event delegation for toggle node clicks to avoid undefined dashboard errors\n        document.addEventListener('click', (event) => {\n            const toggleTarget = event.target.closest('[data-toggle-node]');\n            if (toggleTarget && window.dashboard && window.dashboard.agentHierarchy) {\n                const nodeId = toggleTarget.dataset.toggleNode;\n                window.dashboard.agentHierarchy.toggleNode(nodeId);\n            }\n        });\n    }\n    \n    /**\n     * Build hierarchical structure from events\n     * @returns {Object} Tree structure with PM at root\n     */\n    buildHierarchy() {\n        // Process agent inference first\n        this.agentInference.processAgentInference();\n        \n        // Get PM delegations and events\n        const pmDelegations = this.agentInference.getPMDelegations();\n        const events = this.eventViewer.events;\n        const eventAgentMap = this.agentInference.getEventAgentMap();\n        \n        // Create root PM nodes\n        const mainPM = {\n            id: 'pm_main',\n            type: 'pm',\n            name: 'PM (Main Session)',\n            children: [],\n            events: [],\n            eventCount: 0,\n            status: 'active',\n            startTime: null,\n            endTime: null,\n            expanded: true\n        };\n        \n        // Map to store multiple implied PM groups\n        const impliedPMGroups = new Map();\n        \n        // Clear node map\n        this.state.nodeMap.clear();\n        this.state.nodeMap.set(mainPM.id, mainPM);\n        \n        // Track which agents have been added\n        const processedAgents = new Set();\n        \n        // Process explicit PM delegations\n        for (const [delegationId, delegation] of pmDelegations) {\n            const agentNode = {\n                id: delegationId,\n                type: 'subagent',\n                name: delegation.agentName,\n                delegationContext: this.extractDelegationContext(delegation.pmCall),\n                children: [], // Subagents could theoretically delegate to others\n                events: delegation.agentEvents,\n                eventCount: delegation.agentEvents.length,\n                status: delegation.endIndex ? 'completed' : 'active',\n                startTime: delegation.timestamp,\n                endTime: delegation.endIndex ? events[delegation.endIndex]?.timestamp : null,\n                startIndex: delegation.startIndex,\n                endIndex: delegation.endIndex,\n                expanded: this.expandAll || this.state.expandedNodes.has(delegationId)\n            };\n            \n            mainPM.children.push(agentNode);\n            this.state.nodeMap.set(delegationId, agentNode);\n            processedAgents.add(delegation.agentName);\n            \n            // Update main PM stats\n            mainPM.eventCount++;\n            if (!mainPM.startTime || new Date(delegation.timestamp) < new Date(mainPM.startTime)) {\n                mainPM.startTime = delegation.timestamp;\n            }\n            if (delegation.endIndex && events[delegation.endIndex]) {\n                const endTime = events[delegation.endIndex].timestamp;\n                if (!mainPM.endTime || new Date(endTime) > new Date(mainPM.endTime)) {\n                    mainPM.endTime = endTime;\n                }\n            }\n        }\n        \n        // Get orphan subagent groups from agent inference\n        const orphanGroups = this.agentInference.getOrphanGroups();\n        \n        // Create implied PM nodes for each orphan group\n        let impliedPMCounter = 1;\n        for (const [groupingKey, orphans] of orphanGroups) {\n            // Create an implied PM node for this group\n            const impliedPM = {\n                id: `pm_implied_${groupingKey}`,\n                type: 'pm',\n                name: `PM (Implied #${impliedPMCounter})`,\n                children: [],\n                events: [],\n                eventCount: 0,\n                status: 'inferred',\n                startTime: null,\n                endTime: null,\n                expanded: true,\n                isImplied: true,\n                tooltip: 'Inferred PM - Subagents started without explicit PM delegation'\n            };\n            \n            impliedPMGroups.set(groupingKey, impliedPM);\n            this.state.nodeMap.set(impliedPM.id, impliedPM);\n            impliedPMCounter++;\n            \n            // Group orphan events by agent name within this implied PM\n            const agentEventGroups = new Map();\n            \n            for (const orphan of orphans) {\n                // Find all events for this orphan agent\n                const agentEvents = [];\n                events.forEach((event, index) => {\n                    const inference = eventAgentMap.get(index);\n                    if (inference && inference.agentName === orphan.agentName) {\n                        // Check if this event is orphaned (not in any PM delegation)\n                        let isOrphan = true;\n                        for (const [_, delegation] of pmDelegations) {\n                            if (delegation.agentEvents.some(e => e.eventIndex === index)) {\n                                isOrphan = false;\n                                break;\n                            }\n                        }\n                        \n                        if (isOrphan) {\n                            agentEvents.push({\n                                eventIndex: index,\n                                event: event,\n                                inference: inference\n                            });\n                        }\n                    }\n                });\n                \n                if (agentEvents.length > 0) {\n                    if (!agentEventGroups.has(orphan.agentName)) {\n                        agentEventGroups.set(orphan.agentName, []);\n                    }\n                    agentEventGroups.get(orphan.agentName).push(...agentEvents);\n                }\n            }\n            \n            // Create subagent nodes for each agent in this implied PM group\n            for (const [agentName, agentEvents] of agentEventGroups) {\n                if (agentEvents.length === 0) continue;\n                \n                const firstEvent = agentEvents[0].event;\n                const lastEvent = agentEvents[agentEvents.length - 1].event;\n                \n                const agentNode = {\n                    id: `implied_agent_${groupingKey}_${agentName}`,\n                    type: 'subagent',\n                    name: agentName,\n                    delegationContext: 'Orphan agent - no explicit PM delegation found',\n                    children: [],\n                    events: agentEvents,\n                    eventCount: agentEvents.length,\n                    status: 'inferred',\n                    startTime: firstEvent.timestamp,\n                    endTime: lastEvent.timestamp,\n                    startIndex: agentEvents[0].eventIndex,\n                    endIndex: agentEvents[agentEvents.length - 1].eventIndex,\n                    expanded: this.expandAll,\n                    isImplied: true,\n                    tooltip: 'This agent was spawned without an explicit PM Task delegation'\n                };\n                \n                impliedPM.children.push(agentNode);\n                this.state.nodeMap.set(agentNode.id, agentNode);\n                \n                // Update implied PM stats\n                impliedPM.eventCount += agentEvents.length;\n                if (!impliedPM.startTime || new Date(firstEvent.timestamp) < new Date(impliedPM.startTime)) {\n                    impliedPM.startTime = firstEvent.timestamp;\n                }\n                if (!impliedPM.endTime || new Date(lastEvent.timestamp) > new Date(impliedPM.endTime)) {\n                    impliedPM.endTime = lastEvent.timestamp;\n                }\n            }\n        }\n        \n        // Also find completely orphaned subagent events (not caught by SubagentStart)\n        const uncategorizedOrphans = [];\n        events.forEach((event, index) => {\n            const inference = eventAgentMap.get(index);\n            if (inference && inference.type === 'subagent') {\n                // Check if this agent is already in a PM delegation or implied PM\n                let isOrphan = true;\n                \n                // Check explicit delegations\n                for (const [_, delegation] of pmDelegations) {\n                    if (delegation.agentEvents.some(e => e.eventIndex === index)) {\n                        isOrphan = false;\n                        break;\n                    }\n                }\n                \n                // Check implied PMs\n                if (isOrphan) {\n                    for (const [_, impliedPM] of impliedPMGroups) {\n                        for (const child of impliedPM.children) {\n                            if (child.events.some(e => e.eventIndex === index)) {\n                                isOrphan = false;\n                                break;\n                            }\n                        }\n                        if (!isOrphan) break;\n                    }\n                }\n                \n                if (isOrphan) {\n                    uncategorizedOrphans.push({\n                        eventIndex: index,\n                        event: event,\n                        inference: inference\n                    });\n                }\n            }\n        });\n        \n        // If there are uncategorized orphans, create a generic implied PM for them\n        if (uncategorizedOrphans.length > 0) {\n            const genericImpliedPM = {\n                id: 'pm_implied_generic',\n                type: 'pm',\n                name: 'PM (Implied - Uncategorized)',\n                children: [],\n                events: [],\n                eventCount: 0,\n                status: 'inferred',\n                startTime: null,\n                endTime: null,\n                expanded: true,\n                isImplied: true,\n                tooltip: 'Orphan agents without clear grouping'\n            };\n            \n            // Group by agent name\n            const agentGroups = new Map();\n            for (const orphan of uncategorizedOrphans) {\n                const agentName = orphan.inference.agentName;\n                if (!agentGroups.has(agentName)) {\n                    agentGroups.set(agentName, []);\n                }\n                agentGroups.get(agentName).push(orphan);\n            }\n            \n            // Create nodes for each agent\n            for (const [agentName, agentEvents] of agentGroups) {\n                const firstEvent = agentEvents[0].event;\n                const lastEvent = agentEvents[agentEvents.length - 1].event;\n                \n                const agentNode = {\n                    id: `implied_generic_${agentName}`,\n                    type: 'subagent',\n                    name: agentName,\n                    delegationContext: 'Uncategorized orphan agent',\n                    children: [],\n                    events: agentEvents,\n                    eventCount: agentEvents.length,\n                    status: 'inferred',\n                    startTime: firstEvent.timestamp,\n                    endTime: lastEvent.timestamp,\n                    startIndex: agentEvents[0].eventIndex,\n                    endIndex: agentEvents[agentEvents.length - 1].eventIndex,\n                    expanded: this.expandAll,\n                    isImplied: true\n                };\n                \n                genericImpliedPM.children.push(agentNode);\n                this.state.nodeMap.set(agentNode.id, agentNode);\n                genericImpliedPM.eventCount += agentEvents.length;\n                \n                if (!genericImpliedPM.startTime || new Date(firstEvent.timestamp) < new Date(genericImpliedPM.startTime)) {\n                    genericImpliedPM.startTime = firstEvent.timestamp;\n                }\n                if (!genericImpliedPM.endTime || new Date(lastEvent.timestamp) > new Date(genericImpliedPM.endTime)) {\n                    genericImpliedPM.endTime = lastEvent.timestamp;\n                }\n            }\n            \n            if (genericImpliedPM.children.length > 0) {\n                impliedPMGroups.set('generic', genericImpliedPM);\n                this.state.nodeMap.set(genericImpliedPM.id, genericImpliedPM);\n            }\n        }\n        \n        // Count PM's own events (not delegated)\n        let pmOwnEvents = 0;\n        events.forEach((event, index) => {\n            const inference = eventAgentMap.get(index);\n            if (inference && inference.type === 'main_agent') {\n                pmOwnEvents++;\n                mainPM.events.push({\n                    eventIndex: index,\n                    event: event,\n                    inference: inference\n                });\n            }\n        });\n        mainPM.eventCount += pmOwnEvents;\n        \n        // Update PM status based on children\n        if (mainPM.children.length > 0) {\n            const hasActive = mainPM.children.some(child => child.status === 'active');\n            mainPM.status = hasActive ? 'active' : 'completed';\n        }\n        \n        // Build final tree structure\n        const tree = {\n            roots: []\n        };\n        \n        // Only add PMs that have content\n        if (mainPM.eventCount > 0 || mainPM.children.length > 0) {\n            tree.roots.push(mainPM);\n        }\n        \n        // Add all implied PM groups that have content\n        for (const [_, impliedPM] of impliedPMGroups) {\n            if (impliedPM.children.length > 0) {\n                tree.roots.push(impliedPM);\n            }\n        }\n        \n        this.state.hierarchyTree = tree;\n        \n        console.log('Hierarchy built:', {\n            mainPM: {\n                children: mainPM.children.length,\n                events: mainPM.eventCount,\n                ownEvents: pmOwnEvents\n            },\n            impliedPMGroups: impliedPMGroups.size,\n            totalImpliedAgents: Array.from(impliedPMGroups.values())\n                .reduce((sum, pm) => sum + pm.children.length, 0)\n        });\n        \n        return tree;\n    }\n    \n    /**\n     * Extract delegation context from PM Task call\n     * @param {Object} pmCall - The PM's Task tool call event\n     * @returns {string} Description of what was delegated\n     */\n    extractDelegationContext(pmCall) {\n        if (!pmCall) return 'Unknown delegation';\n        \n        // Try to extract task description from tool parameters\n        const params = pmCall.tool_parameters || pmCall.data?.tool_parameters || {};\n        const task = params.task || params.request || params.description;\n        \n        if (task) {\n            // Truncate long tasks\n            const maxLength = 100;\n            if (task.length > maxLength) {\n                return task.substring(0, maxLength) + '...';\n            }\n            return task;\n        }\n        \n        // Fallback to tool input\n        const toolInput = pmCall.tool_input || pmCall.data?.tool_input;\n        if (toolInput && typeof toolInput === 'string') {\n            const maxLength = 100;\n            if (toolInput.length > maxLength) {\n                return toolInput.substring(0, maxLength) + '...';\n            }\n            return toolInput;\n        }\n        \n        return 'Task delegation';\n    }\n    \n    /**\n     * Render the hierarchy tree to HTML\n     * @param {Object} filters - Optional filters for display\n     * @returns {string} HTML string for the hierarchy\n     */\n    render(filters = {}) {\n        const tree = this.state.hierarchyTree || this.buildHierarchy();\n        \n        if (!tree.roots || tree.roots.length === 0) {\n            return '<div class=\"agent-hierarchy-empty\">No agent activity detected</div>';\n        }\n        \n        // Apply filters if provided\n        const filteredTree = this.applyFilters(tree, filters);\n        \n        // Generate HTML\n        const html = filteredTree.roots.map(root => this.renderNode(root, 0)).join('');\n        \n        return `<div class=\"agent-hierarchy\">${html}</div>`;\n    }\n    \n    /**\n     * Render a single node and its children\n     * @param {Object} node - Node to render\n     * @param {number} level - Indentation level\n     * @returns {string} HTML string for the node\n     */\n    renderNode(node, level) {\n        const isExpanded = node.expanded || this.state.expandedNodes.has(node.id);\n        const hasChildren = node.children && node.children.length > 0;\n        const isSelected = this.state.selectedNode === node.id;\n        \n        // Icon based on node type and status\n        const icon = this.getNodeIcon(node);\n        const expandIcon = hasChildren ? (isExpanded ? '▼' : '▶') : '&nbsp;&nbsp;';\n        \n        // Status color\n        const statusClass = this.getStatusClass(node.status);\n        \n        // Add special styling for implied nodes\n        const impliedClass = node.isImplied ? 'agent-node-implied' : '';\n        const tooltipAttr = node.tooltip ? `title=\"${this.escapeHtml(node.tooltip)}\"` : '';\n        \n        // Build node HTML\n        let html = `\n            <div class=\"agent-node agent-node-level-${level} ${isSelected ? 'agent-node-selected' : ''} ${impliedClass}\" \n                 data-node-id=\"${node.id}\" ${tooltipAttr}>\n                <div class=\"agent-node-header ${statusClass}\" \n                     data-toggle-node=\"${node.id}\" style=\"cursor: pointer\">\n                    <span class=\"agent-node-expand\">${expandIcon}</span>\n                    <span class=\"agent-node-icon\">${icon}</span>\n                    <span class=\"agent-node-name\">${this.escapeHtml(node.name)}</span>\n                    <span class=\"agent-node-stats\">\n                        <span class=\"agent-event-count\">${node.eventCount} events</span>\n                        ${node.status ? `<span class=\"agent-status\">${node.status}</span>` : ''}\n                    </span>\n                </div>\n        `;\n        \n        // Add details if expanded\n        if (isExpanded && (node.delegationContext || node.startTime)) {\n            html += '<div class=\"agent-node-details\">';\n            \n            if (node.delegationContext && node.delegationContext !== 'Unknown delegation') {\n                html += `\n                    <div class=\"agent-delegation-context\">\n                        <strong>Task:</strong> ${this.escapeHtml(node.delegationContext)}\n                    </div>\n                `;\n            }\n            \n            if (node.startTime) {\n                const duration = this.calculateDuration(node.startTime, node.endTime);\n                html += `\n                    <div class=\"agent-timing\">\n                        <span class=\"agent-time-start\">${this.formatTime(node.startTime)}</span>\n                        ${duration ? `<span class=\"agent-duration\">(${duration})</span>` : ''}\n                    </div>\n                `;\n            }\n            \n            html += '</div>';\n        }\n        \n        // Render children if expanded\n        if (isExpanded && hasChildren) {\n            html += '<div class=\"agent-node-children\">';\n            html += node.children.map(child => this.renderNode(child, level + 1)).join('');\n            html += '</div>';\n        }\n        \n        html += '</div>';\n        \n        return html;\n    }\n    \n    /**\n     * Get icon for node based on type and status\n     * @param {Object} node - Node to get icon for\n     * @returns {string} Icon HTML/emoji\n     */\n    getNodeIcon(node) {\n        if (node.type === 'pm') {\n            return node.isImplied ? '🔍' : '👔';\n        }\n        \n        // Map agent names to icons\n        const agentIcons = {\n            'Engineer Agent': '🔧',\n            'Research Agent': '🔍',\n            'QA Agent': '✅',\n            'Documentation Agent': '📝',\n            'Security Agent': '🔒',\n            'Ops Agent': '⚙️',\n            'Version Control Agent': '📦',\n            'Data Engineer Agent': '💾',\n            'Test Integration Agent': '🧪'\n        };\n        \n        return agentIcons[node.name] || '🤖';\n    }\n    \n    /**\n     * Get status class for styling\n     * @param {string} status - Node status\n     * @returns {string} CSS class name\n     */\n    getStatusClass(status) {\n        switch (status) {\n            case 'active':\n                return 'agent-status-active';\n            case 'completed':\n                return 'agent-status-completed';\n            case 'pending':\n                return 'agent-status-pending';\n            case 'inferred':\n                return 'agent-status-inferred';\n            default:\n                return 'agent-status-unknown';\n        }\n    }\n    \n    /**\n     * Toggle node expansion\n     * @param {string} nodeId - ID of node to toggle\n     */\n    toggleNode(nodeId) {\n        const node = this.state.nodeMap.get(nodeId);\n        if (!node) return;\n        \n        if (this.state.expandedNodes.has(nodeId)) {\n            this.state.expandedNodes.delete(nodeId);\n            node.expanded = false;\n        } else {\n            this.state.expandedNodes.add(nodeId);\n            node.expanded = true;\n        }\n        \n        // Trigger re-render\n        if (window.dashboard) {\n            window.dashboard.renderCurrentTab();\n        }\n    }\n    \n    /**\n     * Select a node\n     * @param {string} nodeId - ID of node to select\n     */\n    selectNode(nodeId) {\n        this.state.selectedNode = nodeId;\n        const node = this.state.nodeMap.get(nodeId);\n        \n        if (node) {\n            // Dispatch event for other components to react\n            const event = new CustomEvent('agentNodeSelected', {\n                detail: { node: node }\n            });\n            document.dispatchEvent(event);\n        }\n    }\n    \n    /**\n     * Apply filters to the tree\n     * @param {Object} tree - Tree to filter\n     * @param {Object} filters - Filter criteria\n     * @returns {Object} Filtered tree\n     */\n    applyFilters(tree, filters) {\n        if (!filters || Object.keys(filters).length === 0) {\n            return tree;\n        }\n        \n        // Clone tree structure for filtering\n        const filteredTree = {\n            roots: []\n        };\n        \n        for (const root of tree.roots) {\n            const filteredRoot = this.filterNode(root, filters);\n            if (filteredRoot) {\n                filteredTree.roots.push(filteredRoot);\n            }\n        }\n        \n        return filteredTree;\n    }\n    \n    /**\n     * Filter a single node and its children\n     * @param {Object} node - Node to filter\n     * @param {Object} filters - Filter criteria\n     * @returns {Object|null} Filtered node or null if filtered out\n     */\n    filterNode(node, filters) {\n        // Check if node matches filters\n        let matches = true;\n        \n        if (filters.searchText) {\n            const searchLower = filters.searchText.toLowerCase();\n            matches = matches && (\n                node.name.toLowerCase().includes(searchLower) ||\n                (node.delegationContext && node.delegationContext.toLowerCase().includes(searchLower))\n            );\n        }\n        \n        if (filters.agentType) {\n            matches = matches && node.name.includes(filters.agentType);\n        }\n        \n        if (filters.status) {\n            matches = matches && node.status === filters.status;\n        }\n        \n        // Filter children recursively\n        let filteredChildren = [];\n        if (node.children) {\n            for (const child of node.children) {\n                const filteredChild = this.filterNode(child, filters);\n                if (filteredChild) {\n                    filteredChildren.push(filteredChild);\n                }\n            }\n        }\n        \n        // Include node if it matches or has matching children\n        if (matches || filteredChildren.length > 0) {\n            return {\n                ...node,\n                children: filteredChildren\n            };\n        }\n        \n        return null;\n    }\n    \n    /**\n     * Format timestamp for display\n     * @param {string} timestamp - ISO timestamp\n     * @returns {string} Formatted time\n     */\n    formatTime(timestamp) {\n        if (!timestamp) return '';\n        const date = new Date(timestamp);\n        return date.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: false\n        });\n    }\n    \n    /**\n     * Calculate duration between timestamps\n     * @param {string} start - Start timestamp\n     * @param {string} end - End timestamp\n     * @returns {string} Formatted duration\n     */\n    calculateDuration(start, end) {\n        if (!start || !end) return '';\n        \n        const startTime = new Date(start).getTime();\n        const endTime = new Date(end).getTime();\n        const duration = endTime - startTime;\n        \n        if (duration < 1000) {\n            return `${duration}ms`;\n        } else if (duration < 60000) {\n            return `${(duration / 1000).toFixed(1)}s`;\n        } else {\n            const minutes = Math.floor(duration / 60000);\n            const seconds = Math.floor((duration % 60000) / 1000);\n            return `${minutes}m ${seconds}s`;\n        }\n    }\n    \n    /**\n     * Escape HTML for safe rendering\n     * @param {string} text - Text to escape\n     * @returns {string} Escaped text\n     */\n    escapeHtml(text) {\n        if (!text) return '';\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n    \n    /**\n     * Update hierarchy when new events arrive\n     * @param {Array} events - New events\n     */\n    updateWithNewEvents(events) {\n        // Rebuild hierarchy with new events\n        this.buildHierarchy();\n    }\n    \n    /**\n     * Clear the hierarchy\n     */\n    clear() {\n        this.state.hierarchyTree = null;\n        this.state.nodeMap.clear();\n        this.state.expandedNodes.clear();\n        this.state.selectedNode = null;\n    }\n    \n    /**\n     * Expand all nodes\n     */\n    expandAllNodes() {\n        for (const [nodeId, node] of this.state.nodeMap) {\n            this.state.expandedNodes.add(nodeId);\n            node.expanded = true;\n        }\n        this.expandAll = true;\n    }\n    \n    /**\n     * Collapse all nodes\n     */\n    collapseAllNodes() {\n        this.state.expandedNodes.clear();\n        for (const [nodeId, node] of this.state.nodeMap) {\n            node.expanded = false;\n        }\n        this.expandAll = false;\n    }\n}\n\n// ES6 Module export\nexport { AgentHierarchy };\nexport default AgentHierarchy;","/**\n * Build Tracker Component\n * \n * WHY: Displays and manages version/build information for both MPM and Monitor UI,\n * providing users with clear visibility of the current system versions.\n * \n * DESIGN DECISION: Implemented as a standalone component that can be easily\n * integrated into the dashboard header, with automatic updates from SocketIO.\n */\n\nexport class BuildTracker {\n    constructor() {\n        this.element = null;\n        this.buildInfo = {\n            monitor: {\n                version: \"1.0.0\",\n                build: 1,\n                formatted_build: \"0001\",\n                full_version: \"v1.0.0-0001\"\n            },\n            mpm: {\n                version: \"unknown\",\n                build: \"unknown\",\n                full_version: \"v0.0.0\"\n            }\n        };\n        \n        // Socket client reference (will be set during initialization)\n        this.socketClient = null;\n        \n        // Initialize the component\n        this.init();\n    }\n    \n    /**\n     * Initialize the build tracker component\n     */\n    async init() {\n        // Try to load version.json for dashboard version\n        await this.loadDashboardVersion();\n        \n        this.createElements();\n        this.setupEventListeners();\n    }\n    \n    /**\n     * Load dashboard version from version.json if available\n     * \n     * WHY: Attempts to load the actual dashboard version from the \n     * version.json file created by the version management script.\n     * Falls back to defaults if file is not available.\n     */\n    async loadDashboardVersion() {\n        try {\n            // Try to fetch version.json from the dashboard root\n            const response = await fetch('/version.json');\n            if (response.ok) {\n                const versionData = await response.json();\n                \n                // Update monitor build info with loaded data\n                this.buildInfo.monitor = {\n                    version: versionData.version || \"1.0.0\",\n                    build: versionData.build || 1,\n                    formatted_build: versionData.formatted_build || \"0001\",\n                    full_version: versionData.full_version || \"v1.0.0-0001\"\n                };\n                \n                // Dashboard version loaded successfully\n            }\n        } catch (error) {\n            // Silently fall back to defaults if version.json not available\n        }\n    }\n    \n    /**\n     * Create the DOM elements for version display\n     * \n     * WHY: Creates a clean, unobtrusive version display that fits\n     * seamlessly into the dashboard header.\n     */\n    createElements() {\n        // Create container element\n        this.element = document.createElement('div');\n        this.element.className = 'version-display';\n        this.element.id = 'version-display';\n        \n        // Create MPM version element\n        const mpmVersion = document.createElement('span');\n        mpmVersion.className = 'version-item mpm-version';\n        mpmVersion.id = 'mpm-version';\n        mpmVersion.innerHTML = `\n            <span class=\"version-label\">MPM</span>\n            <span class=\"version-value\">v0.0.0</span>\n        `;\n        \n        // Create separator\n        const separator = document.createElement('span');\n        separator.className = 'version-separator';\n        separator.textContent = '|';\n        \n        // Create Monitor version element\n        const monitorVersion = document.createElement('span');\n        monitorVersion.className = 'version-item monitor-version';\n        monitorVersion.id = 'monitor-version';\n        monitorVersion.innerHTML = `\n            <span class=\"version-label\">Monitor</span>\n            <span class=\"version-value\">v1.0.0-0001</span>\n        `;\n        \n        // Assemble elements\n        this.element.appendChild(mpmVersion);\n        this.element.appendChild(separator);\n        this.element.appendChild(monitorVersion);\n        \n        // Add tooltip for detailed info\n        this.element.title = 'Click for detailed version information';\n    }\n    \n    /**\n     * Set the socket client for receiving updates\n     * \n     * @param {Object} socketClient - The Socket.IO client instance\n     */\n    setSocketClient(socketClient) {\n        this.socketClient = socketClient;\n        \n        // Listen for build info updates\n        if (this.socketClient && this.socketClient.socket) {\n            // Listen for welcome message with build info\n            this.socketClient.socket.on('welcome', (eventData) => {\n                // Handle both old format (direct) and new schema (nested in data)\n                const buildInfo = eventData.build_info || \n                                 (eventData.data && eventData.data.build_info);\n                if (buildInfo) {\n                    this.updateBuildInfo(buildInfo);\n                }\n            });\n            \n            // Listen for status updates with build info\n            this.socketClient.socket.on('status', (eventData) => {\n                // Handle both old format (direct) and new schema (nested in data)\n                const buildInfo = eventData.build_info || \n                                 (eventData.data && eventData.data.build_info);\n                if (buildInfo) {\n                    this.updateBuildInfo(buildInfo);\n                }\n            });\n            \n            // Listen for explicit build info updates\n            this.socketClient.socket.on('build_info', (data) => {\n                this.updateBuildInfo(data);\n            });\n        }\n    }\n    \n    /**\n     * Update the build information\n     * \n     * @param {Object} buildInfo - Build information from server\n     */\n    updateBuildInfo(buildInfo) {\n        // Store the build info\n        this.buildInfo = buildInfo;\n        \n        // Update display\n        this.updateDisplay();\n    }\n    \n    /**\n     * Update the version display elements\n     * \n     * WHY: Keeps the UI in sync with the latest version information\n     * received from the server.\n     */\n    updateDisplay() {\n        // Update MPM version\n        const mpmElement = this.element.querySelector('.mpm-version .version-value');\n        if (mpmElement && this.buildInfo.mpm) {\n            const mpmVersion = this.buildInfo.mpm.full_version || \n                              `v${this.buildInfo.mpm.version}`;\n            mpmElement.textContent = mpmVersion;\n            \n            // Add build number to tooltip if available\n            if (this.buildInfo.mpm.build && this.buildInfo.mpm.build !== \"unknown\") {\n                mpmElement.parentElement.title = `MPM Build: ${this.buildInfo.mpm.build}`;\n            }\n        }\n        \n        // Update Monitor version\n        const monitorElement = this.element.querySelector('.monitor-version .version-value');\n        if (monitorElement && this.buildInfo.monitor) {\n            const monitorVersion = this.buildInfo.monitor.full_version || \n                                  `v${this.buildInfo.monitor.version}-${this.buildInfo.monitor.formatted_build}`;\n            monitorElement.textContent = monitorVersion;\n            \n            // Add last updated to tooltip if available\n            if (this.buildInfo.monitor.last_updated) {\n                const lastUpdated = new Date(this.buildInfo.monitor.last_updated).toLocaleString();\n                monitorElement.parentElement.title = `Monitor Build: ${this.buildInfo.monitor.formatted_build}\\nLast Updated: ${lastUpdated}`;\n            }\n        }\n    }\n    \n    /**\n     * Setup event listeners\n     * \n     * WHY: Allows users to interact with the version display for\n     * additional information or actions.\n     */\n    setupEventListeners() {\n        // Click handler for showing detailed version info\n        this.element.addEventListener('click', () => {\n            this.showDetailedInfo();\n        });\n    }\n    \n    /**\n     * Show detailed version information in a modal or alert\n     * \n     * WHY: Provides power users with detailed build and version\n     * information for debugging and support purposes.\n     */\n    showDetailedInfo() {\n        const info = [];\n        \n        // MPM information\n        if (this.buildInfo.mpm) {\n            info.push('=== MPM Framework ===');\n            info.push(`Version: ${this.buildInfo.mpm.version}`);\n            if (this.buildInfo.mpm.build && this.buildInfo.mpm.build !== \"unknown\") {\n                info.push(`Build: ${this.buildInfo.mpm.build}`);\n            }\n            info.push(`Full: ${this.buildInfo.mpm.full_version}`);\n        }\n        \n        info.push('');\n        \n        // Monitor information\n        if (this.buildInfo.monitor) {\n            info.push('=== Monitor UI ===');\n            info.push(`Version: ${this.buildInfo.monitor.version}`);\n            info.push(`Build: ${this.buildInfo.monitor.formatted_build} (${this.buildInfo.monitor.build})`);\n            info.push(`Full: ${this.buildInfo.monitor.full_version}`);\n            if (this.buildInfo.monitor.last_updated) {\n                const lastUpdated = new Date(this.buildInfo.monitor.last_updated).toLocaleString();\n                info.push(`Updated: ${lastUpdated}`);\n            }\n        }\n        \n        // Version information compiled\n        \n        // Create a simple modal-like display\n        const modal = document.createElement('div');\n        modal.className = 'version-modal';\n        modal.innerHTML = `\n            <div class=\"version-modal-content\">\n                <h3>Version Information</h3>\n                <pre>${info.join('\\n')}</pre>\n                <button onclick=\"this.parentElement.parentElement.remove()\">Close</button>\n            </div>\n        `;\n        \n        // Add to body\n        document.body.appendChild(modal);\n        \n        // Auto-remove after 10 seconds\n        setTimeout(() => {\n            modal.remove();\n        }, 10000);\n    }\n    \n    /**\n     * Mount the component to a parent element\n     * \n     * @param {HTMLElement|string} parent - Parent element or selector\n     */\n    mount(parent) {\n        const parentElement = typeof parent === 'string' \n            ? document.querySelector(parent) \n            : parent;\n        \n        if (!this.element) {\n            return;\n        }\n        \n        if (!parentElement) {\n            return;\n        }\n        \n        // Check if already mounted to prevent duplicates\n        if (this.element.parentNode === parentElement) {\n            return;\n        }\n        \n        parentElement.appendChild(this.element);\n    }\n    \n    /**\n     * Get the component's DOM element\n     * \n     * @returns {HTMLElement} The component's root element\n     */\n    getElement() {\n        return this.element;\n    }\n    \n    /**\n     * Destroy the component and clean up\n     */\n    destroy() {\n        if (this.element && this.element.parentNode) {\n            this.element.parentNode.removeChild(this.element);\n        }\n        \n        // Clean up socket listeners\n        if (this.socketClient && this.socketClient.socket) {\n            this.socketClient.socket.off('welcome');\n            this.socketClient.socket.off('status');\n            this.socketClient.socket.off('build_info');\n        }\n        \n        this.element = null;\n        this.socketClient = null;\n    }\n}","/**\n * Refactored Dashboard Coordinator\n *\n * Main coordinator class that orchestrates all dashboard modules while maintaining\n * backward compatibility with the original dashboard interface.\n *\n * WHY: This refactored version breaks down the monolithic 4,133-line dashboard\n * into manageable, focused modules while preserving all existing functionality.\n * Each module handles a specific concern, improving maintainability and testability.\n *\n * DESIGN DECISION: Acts as a thin coordinator layer that initializes modules,\n * manages inter-module communication through events, and provides backward\n * compatibility for existing code that depends on the dashboard interface.\n */\n\n// ES6 Module imports\nimport { SocketManager } from '@components/socket-manager.js';\nimport { EventViewer } from '@components/event-viewer.js';\nimport { ModuleViewer } from '@components/module-viewer.js';\nimport { SessionManager } from '@components/session-manager.js';\nimport { AgentInference } from '@components/agent-inference.js';\nimport { AgentHierarchy } from '@components/agent-hierarchy.js';\nimport { UIStateManager } from '@components/ui-state-manager.js';\nimport { EventProcessor } from '@components/event-processor.js';\nimport { ExportManager } from '@components/export-manager.js';\nimport { WorkingDirectoryManager } from '@components/working-directory.js';\nimport { FileToolTracker } from '@components/file-tool-tracker.js';\nimport { BuildTracker } from '@components/build-tracker.js';\nclass Dashboard {\n    constructor() {\n        // Core components (existing)\n        this.eventViewer = null;\n        this.moduleViewer = null;\n        this.sessionManager = null;\n\n        // New modular components\n        this.socketManager = null;\n        this.agentInference = null;\n        this.agentHierarchy = null;\n        this.uiStateManager = null;\n        this.eventProcessor = null;\n        this.exportManager = null;\n        this.workingDirectoryManager = null;\n        this.fileToolTracker = null;\n        this.buildTracker = null;\n\n        // Initialize the dashboard\n        this.init();\n    }\n\n    /**\n     * Initialize the dashboard and all modules\n     */\n    init() {\n        console.log('Initializing refactored Claude MPM Dashboard...');\n\n        try {\n            // Initialize modules in dependency order\n            this.initializeSocketManager();\n            this.initializeCoreComponents();\n            this.initializeBuildTracker();\n            this.initializeAgentInference();\n            this.initializeAgentHierarchy();\n            this.initializeUIStateManager();\n            this.initializeWorkingDirectoryManager();\n            this.initializeFileToolTracker();\n            this.initializeEventProcessor();\n            this.initializeExportManager();\n\n            // Set up inter-module communication\n            this.setupModuleInteractions();\n\n            // Initialize from URL parameters\n            this.initializeFromURL();\n\n            console.log('Claude MPM Dashboard initialized successfully');\n        } catch (error) {\n            console.error('Error during dashboard initialization:', error);\n            // Re-throw to be caught by DOMContentLoaded handler\n            throw error;\n        }\n    }\n    \n    /**\n     * Validate that all critical components are initialized\n     * WHY: Ensures dashboard is in a valid state after initialization\n     */\n    validateInitialization() {\n        const criticalComponents = [\n            { name: 'socketManager', component: this.socketManager },\n            { name: 'eventViewer', component: this.eventViewer },\n            { name: 'agentHierarchy', component: this.agentHierarchy }\n        ];\n        \n        const missing = criticalComponents.filter(c => !c.component);\n        if (missing.length > 0) {\n            console.warn('Missing critical components:', missing.map(c => c.name));\n        } else {\n            console.log('All critical components initialized');\n        }\n    }\n\n    /**\n     * Post-initialization setup that requires window.dashboard to be set\n     * WHY: Some components need to reference window.dashboard but it's not available\n     * during constructor execution. This method is called after the Dashboard instance\n     * is assigned to window.dashboard, ensuring proper initialization order.\n     * \n     * DESIGN DECISION: Separate post-init phase prevents \"cannot read property of undefined\"\n     * errors when components try to access window.dashboard during construction.\n     */\n    postInit() {\n        try {\n            // Set global reference for agent hierarchy after dashboard is available\n            if (this.agentHierarchy) {\n                window.dashboard.agentHierarchy = this.agentHierarchy;\n                console.log('Agent hierarchy global reference set');\n            }\n            \n            // Initialize any other components that need window.dashboard\n            this.validateInitialization();\n        } catch (error) {\n            console.error('Error in dashboard postInit:', error);\n            // Continue execution - non-critical error\n        }\n    }\n\n    /**\n     * Initialize socket manager\n     */\n    initializeSocketManager() {\n        this.socketManager = new SocketManager();\n\n        // Set up connection controls\n        this.socketManager.setupConnectionControls();\n\n        // Backward compatibility\n        this.socketClient = this.socketManager.getSocketClient();\n        window.socketClient = this.socketClient;\n    }\n\n    /**\n     * Initialize core existing components\n     */\n    initializeCoreComponents() {\n        // Initialize existing components with socket client\n        this.eventViewer = new EventViewer('events-list', this.socketClient);\n        this.moduleViewer = new ModuleViewer();\n        this.sessionManager = new SessionManager(this.socketClient);\n\n        // Backward compatibility\n        window.eventViewer = this.eventViewer;\n        window.moduleViewer = this.moduleViewer;\n        window.sessionManager = this.sessionManager;\n    }\n\n    /**\n     * Initialize build tracker\n     */\n    initializeBuildTracker() {\n        this.buildTracker = new BuildTracker();\n        \n        // Set the socket client for receiving updates\n        this.buildTracker.setSocketClient(this.socketClient);\n        \n        // Mount to header with retry logic for DOM readiness\n        const mountBuildTracker = () => {\n            const headerTitle = document.querySelector('.header-title');\n            if (headerTitle) {\n                // Insert after the title and status badge\n                this.buildTracker.mount(headerTitle);\n                console.log('BuildTracker mounted successfully');\n            } else {\n                console.warn('Header-title element not found for build tracker, will retry');\n                // Retry after a short delay if DOM is still being constructed\n                setTimeout(mountBuildTracker, 100);\n            }\n        };\n        \n        // Try to mount immediately, with retry logic if needed\n        mountBuildTracker();\n        \n        // Make available globally for debugging\n        window.buildTracker = this.buildTracker;\n    }\n\n    /**\n     * Initialize agent inference system\n     */\n    initializeAgentInference() {\n        this.agentInference = new AgentInference(this.eventViewer);\n        this.agentInference.initialize();\n    }\n    \n    /**\n     * Initialize agent hierarchy component\n     * WHY: Creates the agent hierarchy visualization component but defers global\n     * reference setting to postInit() to avoid initialization order issues.\n     */\n    initializeAgentHierarchy() {\n        try {\n            this.agentHierarchy = new AgentHierarchy(this.agentInference, this.eventViewer);\n            // Global reference will be set in postInit() after window.dashboard exists\n            console.log('Agent hierarchy component created');\n        } catch (error) {\n            console.error('Failed to initialize agent hierarchy:', error);\n            // Create a stub to prevent further errors\n            this.agentHierarchy = {\n                render: () => '<div class=\"error\">Agent hierarchy unavailable</div>',\n                expandAllNodes: () => {},\n                collapseAllNodes: () => {},\n                updateWithNewEvents: () => {}\n            };\n        }\n    }\n\n    /**\n     * Initialize UI state manager\n     */\n    initializeUIStateManager() {\n        this.uiStateManager = new UIStateManager();\n        this.setupTabFilters(); // Set up filters after UI state manager\n    }\n\n    /**\n     * Initialize working directory manager\n     */\n    initializeWorkingDirectoryManager() {\n        this.workingDirectoryManager = new WorkingDirectoryManager(this.socketManager);\n    }\n\n    /**\n     * Initialize file-tool tracker\n     */\n    initializeFileToolTracker() {\n        this.fileToolTracker = new FileToolTracker(this.agentInference, this.workingDirectoryManager);\n    }\n\n    /**\n     * Initialize event processor\n     */\n    initializeEventProcessor() {\n        this.eventProcessor = new EventProcessor(this.eventViewer, this.agentInference);\n    }\n\n\n    /**\n     * Initialize export manager\n     */\n    initializeExportManager() {\n        this.exportManager = new ExportManager(this.eventViewer);\n    }\n\n    /**\n     * Set up interactions between modules\n     */\n    setupModuleInteractions() {\n        // Socket events to update file operations and tool calls\n        this.socketManager.onEventUpdate((events) => {\n            this.fileToolTracker.updateFileOperations(events);\n            this.fileToolTracker.updateToolCalls(events);\n\n            // Process agent inference for new events\n            this.agentInference.processAgentInference();\n            \n            // Update agent hierarchy with new events\n            this.agentHierarchy.updateWithNewEvents(events);\n\n            // Auto-scroll events list if on events tab\n            if (this.uiStateManager.getCurrentTab() === 'events') {\n                this.exportManager.scrollListToBottom('events-list');\n            }\n\n            // Re-render current tab\n            this.renderCurrentTab();\n        });\n\n        // Connection status changes\n        this.socketManager.onConnectionStatusChange((status, type) => {\n            // Set up git branch listener when connected\n            if (type === 'connected') {\n                this.workingDirectoryManager.updateGitBranch(\n                    this.workingDirectoryManager.getCurrentWorkingDir()\n                );\n            }\n        });\n\n        // Tab changes\n        document.addEventListener('tabChanged', (e) => {\n            this.renderCurrentTab();\n            this.uiStateManager.updateTabNavigationItems();\n        });\n\n        // Events clearing\n        document.addEventListener('eventsClearing', () => {\n            this.fileToolTracker.clear();\n            this.agentInference.initialize();\n        });\n\n        // Card details requests\n        document.addEventListener('showCardDetails', (e) => {\n            this.showCardDetails(e.detail.tabName, e.detail.index);\n        });\n\n        // Session changes\n        document.addEventListener('sessionFilterChanged', (e) => {\n            console.log('Session filter changed, re-rendering current tab:', this.uiStateManager.getCurrentTab());\n            this.renderCurrentTab();\n        });\n    }\n\n    /**\n     * Set up tab filters\n     */\n    setupTabFilters() {\n        // Agents tab filters\n        const agentsSearchInput = document.getElementById('agents-search-input');\n        const agentsTypeFilter = document.getElementById('agents-type-filter');\n\n        if (agentsSearchInput) {\n            agentsSearchInput.addEventListener('input', () => {\n                if (this.uiStateManager.getCurrentTab() === 'agents') this.renderCurrentTab();\n            });\n        }\n\n        if (agentsTypeFilter) {\n            agentsTypeFilter.addEventListener('change', () => {\n                if (this.uiStateManager.getCurrentTab() === 'agents') this.renderCurrentTab();\n            });\n        }\n\n        // Tools tab filters\n        const toolsSearchInput = document.getElementById('tools-search-input');\n        const toolsTypeFilter = document.getElementById('tools-type-filter');\n\n        if (toolsSearchInput) {\n            toolsSearchInput.addEventListener('input', () => {\n                if (this.uiStateManager.getCurrentTab() === 'tools') this.renderCurrentTab();\n            });\n        }\n\n        if (toolsTypeFilter) {\n            toolsTypeFilter.addEventListener('change', () => {\n                if (this.uiStateManager.getCurrentTab() === 'tools') this.renderCurrentTab();\n            });\n        }\n\n        // Files tab filters\n        const filesSearchInput = document.getElementById('files-search-input');\n        const filesTypeFilter = document.getElementById('files-type-filter');\n\n        if (filesSearchInput) {\n            filesSearchInput.addEventListener('input', () => {\n                if (this.uiStateManager.getCurrentTab() === 'files') this.renderCurrentTab();\n            });\n        }\n\n        if (filesTypeFilter) {\n            filesTypeFilter.addEventListener('change', () => {\n                if (this.uiStateManager.getCurrentTab() === 'files') this.renderCurrentTab();\n            });\n        }\n    }\n\n    /**\n     * Initialize from URL parameters\n     */\n    initializeFromURL() {\n        const params = new URLSearchParams(window.location.search);\n        this.socketManager.initializeFromURL(params);\n    }\n\n    /**\n     * Render current tab content\n     */\n    renderCurrentTab() {\n        const currentTab = this.uiStateManager.getCurrentTab();\n\n        switch (currentTab) {\n            case 'events':\n                // Events tab is handled by EventViewer\n                break;\n            case 'activity':\n                // Trigger Activity tab rendering through the component\n                // Check if ActivityTree class is available (from built module)\n                if (window.ActivityTree && typeof window.ActivityTree === 'function') {\n                    // Create or get instance\n                    if (!window.activityTreeInstance) {\n                        console.log('Creating new ActivityTree instance...');\n                        window.activityTreeInstance = new window.ActivityTree();\n                    }\n                    \n                    // Initialize if needed and render\n                    if (window.activityTreeInstance) {\n                        if (!window.activityTreeInstance.initialized) {\n                            console.log('Initializing ActivityTree...');\n                            window.activityTreeInstance.initialize();\n                        }\n                        \n                        if (typeof window.activityTreeInstance.renderWhenVisible === 'function') {\n                            console.log('Dashboard triggering activity tree render...');\n                            window.activityTreeInstance.renderWhenVisible();\n                        }\n                        \n                        // Force show to ensure the tree is visible\n                        if (typeof window.activityTreeInstance.forceShow === 'function') {\n                            console.log('Dashboard forcing activity tree to show...');\n                            window.activityTreeInstance.forceShow();\n                        }\n                    }\n                } else if (window.activityTree && typeof window.activityTree === 'function') {\n                    // Fallback to legacy approach if available\n                    const activityTreeInstance = window.activityTree();\n                    if (activityTreeInstance) {\n                        if (typeof activityTreeInstance.renderWhenVisible === 'function') {\n                            console.log('Dashboard triggering activity tree render (legacy)...');\n                            activityTreeInstance.renderWhenVisible();\n                        }\n                        if (typeof activityTreeInstance.forceShow === 'function') {\n                            console.log('Dashboard forcing activity tree to show (legacy)...');\n                            activityTreeInstance.forceShow();\n                        }\n                    }\n                } else {\n                    // Module not loaded yet, retry after a delay\n                    console.warn('Activity tree component not available, retrying in 100ms...');\n                    setTimeout(() => {\n                        if (this.currentTab === 'activity') {\n                            this.renderCurrentTab();\n                        }\n                    }, 100);\n                }\n                break;\n            case 'agents':\n                this.renderAgents();\n                break;\n            case 'tools':\n                this.renderTools();\n                break;\n            case 'files':\n                this.renderFiles();\n                break;\n        }\n\n        // Update selection UI if we have a selected card\n        const selectedCard = this.uiStateManager.getSelectedCard();\n        if (selectedCard.tab === currentTab) {\n            this.uiStateManager.updateCardSelectionUI();\n        }\n\n        // Update unified selection UI to maintain consistency\n        this.uiStateManager.updateUnifiedSelectionUI();\n    }\n\n    /**\n     * Render agents tab with flat chronological view\n     */\n    renderAgents() {\n        const agentsList = document.getElementById('agents-list');\n        if (!agentsList) return;\n        \n        // Get filter values\n        const searchText = document.getElementById('agents-search-input')?.value || '';\n        const agentType = document.getElementById('agents-type-filter')?.value || '';\n        \n        // Generate flat HTML\n        const flatHTML = this.renderAgentsFlat(searchText, agentType);\n        agentsList.innerHTML = flatHTML;\n        \n        // Remove hierarchy controls if they exist\n        this.removeHierarchyControls();\n        \n        // Update filter dropdowns with available agent types\n        const uniqueInstances = this.agentInference.getUniqueAgentInstances();\n        this.updateAgentsFilterDropdowns(uniqueInstances);\n    }\n    \n    /**\n     * Remove hierarchy control buttons (flat view doesn't need them)\n     */\n    removeHierarchyControls() {\n        const existingControls = document.getElementById('hierarchy-controls');\n        if (existingControls) {\n            existingControls.remove();\n        }\n    }\n    \n    /**\n     * Render agents as a flat chronological list\n     * @param {string} searchText - Search filter\n     * @param {string} agentType - Agent type filter \n     * @returns {string} HTML for flat agent list\n     */\n    renderAgentsFlat(searchText, agentType) {\n        const events = this.eventViewer.events;\n        if (!events || events.length === 0) {\n            return '<div class=\"no-events\">No agent events found...</div>';\n        }\n        \n        // Process agent inference to get agent mappings\n        this.agentInference.processAgentInference();\n        const eventAgentMap = this.agentInference.getEventAgentMap();\n        \n        // Collect all agent events with metadata\n        const agentEvents = [];\n        events.forEach((event, index) => {\n            const inference = eventAgentMap.get(index);\n            if (inference && (inference.type === 'subagent' || inference.type === 'main_agent')) {\n                // Apply filters\n                let includeEvent = true;\n                \n                if (searchText) {\n                    const searchLower = searchText.toLowerCase();\n                    includeEvent = includeEvent && (\n                        inference.agentName.toLowerCase().includes(searchLower) ||\n                        (event.tool_name && event.tool_name.toLowerCase().includes(searchLower)) ||\n                        (event.data && JSON.stringify(event.data).toLowerCase().includes(searchLower))\n                    );\n                }\n                \n                if (agentType) {\n                    includeEvent = includeEvent && inference.agentName.includes(agentType);\n                }\n                \n                if (includeEvent) {\n                    agentEvents.push({\n                        event,\n                        inference,\n                        index,\n                        timestamp: new Date(event.timestamp)\n                    });\n                }\n            }\n        });\n        \n        if (agentEvents.length === 0) {\n            return '<div class=\"no-events\">No agent events match the current filters...</div>';\n        }\n        \n        // Generate HTML for each event\n        const html = agentEvents.map((item, listIndex) => {\n            const { event, inference, index, timestamp } = item;\n            \n            // Determine action/tool\n            let action = 'Activity';\n            let actionIcon = '📋';\n            let details = '';\n            \n            if (event.event_type === 'SubagentStart') {\n                action = 'Started';\n                actionIcon = '🟢';\n                details = 'Agent session began';\n            } else if (event.event_type === 'SubagentStop') {\n                action = 'Stopped';\n                actionIcon = '🔴';\n                details = 'Agent session ended';\n            } else if (event.tool_name) {\n                action = `Tool: ${event.tool_name}`;\n                actionIcon = this.getToolIcon(event.tool_name);\n                \n                // Add tool parameters as details\n                if (event.data && event.data.tool_parameters) {\n                    const params = event.data.tool_parameters;\n                    if (params.file_path) {\n                        details = params.file_path;\n                    } else if (params.command) {\n                        details = params.command.substring(0, 50) + (params.command.length > 50 ? '...' : '');\n                    } else if (params.pattern) {\n                        details = `pattern=\"${params.pattern}\"`;\n                    } else if (params.query) {\n                        details = `query=\"${params.query}\"`;\n                    }\n                }\n            }\n            \n            // Status based on event type\n            let status = 'completed';\n            if (event.event_type === 'SubagentStart') {\n                status = 'active';\n            } else if (event.data && event.data.error) {\n                status = 'error';\n            }\n            \n            return `\n                <div class=\"agent-event-item\" data-index=\"${listIndex}\" onclick=\"window.dashboard.showCardDetails('agents', ${index})\">\n                    <div class=\"agent-event-header\">\n                        <div class=\"agent-event-time\">${this.formatTimestamp(timestamp)}</div>\n                        <div class=\"agent-event-agent\">\n                            ${this.getAgentIcon(inference.agentName)} ${inference.agentName}\n                        </div>\n                        <div class=\"agent-event-action\">\n                            ${actionIcon} ${action}\n                        </div>\n                        <div class=\"agent-event-status status-${status}\">\n                            ${this.getStatusIcon(status)}\n                        </div>\n                    </div>\n                    ${details ? `<div class=\"agent-event-details\">${this.escapeHtml(details)}</div>` : ''}\n                </div>\n            `;\n        }).join('');\n        \n        return `<div class=\"agent-events-flat\">${html}</div>`;\n    }\n    \n    /**\n     * Get icon for agent type\n     */\n    getAgentIcon(agentName) {\n        const agentIcons = {\n            'PM': '🎯',\n            'Engineer Agent': '🔧',\n            'Research Agent': '🔍', \n            'QA Agent': '✅',\n            'Documentation Agent': '📝',\n            'Security Agent': '🔒',\n            'Ops Agent': '⚙️',\n            'Version Control Agent': '📦',\n            'Data Engineer Agent': '💾',\n            'Test Integration Agent': '🧪'\n        };\n        return agentIcons[agentName] || '🤖';\n    }\n    \n    /**\n     * Get icon for tool\n     */\n    getToolIcon(toolName) {\n        const toolIcons = {\n            'Read': '📖',\n            'Write': '✏️',\n            'Edit': '📝',\n            'Bash': '💻',\n            'Grep': '🔍',\n            'Glob': '📂',\n            'LS': '📁',\n            'Task': '📋'\n        };\n        return toolIcons[toolName] || '🔧';\n    }\n    \n    /**\n     * Get icon for status\n     */\n    getStatusIcon(status) {\n        const statusIcons = {\n            'active': '🟢',\n            'completed': '✅',\n            'error': '❌',\n            'pending': '🟡'\n        };\n        return statusIcons[status] || '❓';\n    }\n    \n    /**\n     * Format timestamp for display\n     */\n    formatTimestamp(timestamp) {\n        return timestamp.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit', \n            second: '2-digit',\n            hour12: false\n        });\n    }\n    \n    /**\n     * Escape HTML for safe display\n     */\n    escapeHtml(text) {\n        if (!text) return '';\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n\n    /**\n     * Render tools tab with unique instance view (one row per unique tool call)\n     */\n    renderTools() {\n        const toolsList = document.getElementById('tools-list');\n        if (!toolsList) return;\n\n        const toolCalls = this.fileToolTracker.getToolCalls();\n        const toolCallsArray = Array.from(toolCalls.entries());\n        const uniqueToolInstances = this.eventProcessor.getUniqueToolInstances(toolCallsArray);\n        const toolHTML = this.eventProcessor.generateToolHTML(uniqueToolInstances);\n\n        toolsList.innerHTML = toolHTML;\n        this.exportManager.scrollListToBottom('tools-list');\n\n        // Update filter dropdowns\n        this.updateToolsFilterDropdowns(uniqueToolInstances);\n    }\n\n    /**\n     * Render files tab with unique instance view (one row per unique file)\n     */\n    renderFiles() {\n        const filesList = document.getElementById('files-list');\n        if (!filesList) return;\n\n        const fileOperations = this.fileToolTracker.getFileOperations();\n        const filesArray = Array.from(fileOperations.entries());\n        const uniqueFileInstances = this.eventProcessor.getUniqueFileInstances(filesArray);\n        const fileHTML = this.eventProcessor.generateFileHTML(uniqueFileInstances);\n\n        filesList.innerHTML = fileHTML;\n        this.exportManager.scrollListToBottom('files-list');\n\n        // Update filter dropdowns\n        this.updateFilesFilterDropdowns(filesArray);\n    }\n\n    /**\n     * Update agents filter dropdowns for unique instances\n     */\n    updateAgentsFilterDropdowns(uniqueInstances) {\n        const agentTypes = new Set();\n\n        // uniqueInstances is already an array of unique agent instances\n        uniqueInstances.forEach(instance => {\n            if (instance.agentName && instance.agentName !== 'Unknown') {\n                agentTypes.add(instance.agentName);\n            }\n        });\n\n        const sortedTypes = Array.from(agentTypes).filter(type => type && type.trim() !== '');\n        this.populateFilterDropdown('agents-type-filter', sortedTypes, 'All Agent Types');\n\n        // Debug log\n        if (sortedTypes.length > 0) {\n            console.log('Agent types found for filter:', sortedTypes);\n        } else {\n            console.log('No agent types found for filter. Instances:', uniqueInstances.length);\n        }\n    }\n\n    /**\n     * Update tools filter dropdowns\n     */\n    updateToolsFilterDropdowns(toolCallsArray) {\n        const toolNames = [...new Set(toolCallsArray.map(([key, toolCall]) => toolCall.tool_name))]\n            .filter(name => name);\n\n        this.populateFilterDropdown('tools-type-filter', toolNames, 'All Tools');\n    }\n\n    /**\n     * Update files filter dropdowns\n     */\n    updateFilesFilterDropdowns(filesArray) {\n        const operations = [...new Set(filesArray.flatMap(([path, data]) =>\n            data.operations.map(op => op.operation)\n        ))].filter(op => op);\n\n        this.populateFilterDropdown('files-type-filter', operations, 'All Operations');\n    }\n\n    /**\n     * Populate filter dropdown with values\n     */\n    populateFilterDropdown(selectId, values, allOption = 'All') {\n        const select = document.getElementById(selectId);\n        if (!select) return;\n\n        const currentValue = select.value;\n        const sortedValues = values.sort((a, b) => a.localeCompare(b));\n\n        // Clear existing options except the first \"All\" option\n        select.innerHTML = `<option value=\"\">${allOption}</option>`;\n\n        // Add sorted values\n        sortedValues.forEach(value => {\n            const option = document.createElement('option');\n            option.value = value;\n            option.textContent = value;\n            select.appendChild(option);\n        });\n\n        // Restore previous selection if it still exists\n        if (currentValue && sortedValues.includes(currentValue)) {\n            select.value = currentValue;\n        }\n    }\n\n    /**\n     * Show card details for specified tab and index\n     */\n    showCardDetails(tabName, index) {\n        switch (tabName) {\n            case 'events':\n                if (this.eventViewer) {\n                    this.eventViewer.showEventDetails(index);\n                }\n                break;\n            case 'agents':\n                this.showAgentDetailsByIndex(index);\n                break;\n            case 'tools':\n                this.showToolDetailsByIndex(index);\n                break;\n            case 'files':\n                this.showFileDetailsByIndex(index);\n                break;\n        }\n    }\n\n    /**\n     * Show agent details by index\n     */\n    showAgentDetailsByIndex(index) {\n        const events = this.eventProcessor.getFilteredEventsForTab('agents');\n\n        // Defensive checks\n        if (!events || !Array.isArray(events) || index < 0 || index >= events.length) {\n            console.warn('Dashboard: Invalid agent index or events array');\n            return;\n        }\n\n        const filteredSingleEvent = this.eventProcessor.applyAgentsFilters([events[index]]);\n\n        if (filteredSingleEvent.length > 0 && this.moduleViewer &&\n            typeof this.moduleViewer.showAgentEvent === 'function') {\n            const event = filteredSingleEvent[0];\n            this.moduleViewer.showAgentEvent(event, index);\n        }\n    }\n\n    /**\n     * Show agent instance details for unique instance view\n     * @param {string} instanceId - Agent instance ID\n     */\n    showAgentInstanceDetails(instanceId) {\n        const pmDelegations = this.agentInference.getPMDelegations();\n        const instance = pmDelegations.get(instanceId);\n\n        if (!instance) {\n            // Check if it's an implied delegation\n            const uniqueInstances = this.agentInference.getUniqueAgentInstances();\n            const impliedInstance = uniqueInstances.find(inst => inst.id === instanceId);\n\n            if (!impliedInstance) {\n                console.error('Agent instance not found:', instanceId);\n                return;\n            }\n\n            // For implied instances, show basic info\n            this.showImpliedAgentDetails(impliedInstance);\n            return;\n        }\n\n        // Show full PM delegation details\n        if (this.moduleViewer && typeof this.moduleViewer.showAgentInstance === 'function') {\n            this.moduleViewer.showAgentInstance(instance);\n        } else {\n            // Fallback: show in console or basic modal\n            console.log('Agent Instance Details:', {\n                id: instanceId,\n                agentName: instance.agentName,\n                type: 'PM Delegation',\n                eventCount: instance.agentEvents.length,\n                startTime: instance.timestamp,\n                pmCall: instance.pmCall\n            });\n        }\n    }\n\n    /**\n     * Show implied agent details (agents without explicit PM delegation)\n     * @param {Object} impliedInstance - Implied agent instance\n     */\n    showImpliedAgentDetails(impliedInstance) {\n        if (this.moduleViewer && typeof this.moduleViewer.showImpliedAgent === 'function') {\n            this.moduleViewer.showImpliedAgent(impliedInstance);\n        } else {\n            // Fallback: show in console or basic modal\n            console.log('Implied Agent Details:', {\n                id: impliedInstance.id,\n                agentName: impliedInstance.agentName,\n                type: 'Implied PM Delegation',\n                eventCount: impliedInstance.eventCount,\n                startTime: impliedInstance.timestamp,\n                note: 'No explicit PM call found - inferred from agent activity'\n            });\n        }\n    }\n\n    /**\n     * Show tool details by index\n     */\n    showToolDetailsByIndex(index) {\n        const toolCalls = this.fileToolTracker.getToolCalls();\n        const toolCallsArray = Array.from(toolCalls.entries());\n        const filteredToolCalls = this.eventProcessor.applyToolCallFilters(toolCallsArray);\n\n        if (index >= 0 && index < filteredToolCalls.length) {\n            const [toolCallKey] = filteredToolCalls[index];\n            this.showToolCallDetails(toolCallKey);\n        }\n    }\n\n    /**\n     * Show file details by index\n     */\n    showFileDetailsByIndex(index) {\n        const fileOperations = this.fileToolTracker.getFileOperations();\n        let filesArray = Array.from(fileOperations.entries());\n        filesArray = this.eventProcessor.applyFilesFilters(filesArray);\n\n        if (index >= 0 && index < filesArray.length) {\n            const [filePath] = filesArray[index];\n            this.showFileDetails(filePath);\n        }\n    }\n\n    /**\n     * Show tool call details\n     */\n    showToolCallDetails(toolCallKey) {\n        const toolCall = this.fileToolTracker.getToolCall(toolCallKey);\n        if (toolCall && this.moduleViewer) {\n            this.moduleViewer.showToolCall(toolCall, toolCallKey);\n        }\n    }\n\n    /**\n     * Show file details\n     */\n    showFileDetails(filePath) {\n        const fileData = this.fileToolTracker.getFileOperationsForFile(filePath);\n        if (fileData && this.moduleViewer) {\n            this.moduleViewer.showFileOperations(fileData, filePath);\n        }\n    }\n\n    // ====================================\n    // BACKWARD COMPATIBILITY METHODS\n    // ====================================\n\n    /**\n     * Switch tab (backward compatibility)\n     */\n    switchTab(tabName) {\n        this.uiStateManager.switchTab(tabName);\n    }\n\n    /**\n     * Select card (backward compatibility)\n     */\n    selectCard(tabName, index, type, data) {\n        this.uiStateManager.selectCard(tabName, index, type, data);\n    }\n\n    /**\n     * Clear events (backward compatibility)\n     */\n    clearEvents() {\n        this.exportManager.clearEvents();\n    }\n\n    /**\n     * Export events (backward compatibility)\n     */\n    exportEvents() {\n        this.exportManager.exportEvents();\n    }\n\n    /**\n     * Clear selection (backward compatibility)\n     */\n    clearSelection() {\n        this.uiStateManager.clearSelection();\n        if (this.eventViewer) {\n            this.eventViewer.clearSelection();\n        }\n        if (this.moduleViewer) {\n            this.moduleViewer.clear();\n        }\n    }\n\n\n    /**\n     * Get current working directory (backward compatibility)\n     */\n    get currentWorkingDir() {\n        return this.workingDirectoryManager.getCurrentWorkingDir();\n    }\n\n    /**\n     * Set current working directory (backward compatibility)\n     */\n    set currentWorkingDir(dir) {\n        this.workingDirectoryManager.setWorkingDirectory(dir);\n    }\n\n    /**\n     * Get current tab (backward compatibility)\n     */\n    get currentTab() {\n        return this.uiStateManager.getCurrentTab();\n    }\n\n    /**\n     * Get selected card (backward compatibility)\n     */\n    get selectedCard() {\n        return this.uiStateManager.getSelectedCard();\n    }\n\n    /**\n     * Get file operations (backward compatibility)\n     */\n    get fileOperations() {\n        return this.fileToolTracker.getFileOperations();\n    }\n\n    /**\n     * Get tool calls (backward compatibility)\n     */\n    get toolCalls() {\n        return this.fileToolTracker.getToolCalls();\n    }\n\n\n    /**\n     * Get tab navigation state (backward compatibility)\n     */\n    get tabNavigation() {\n        return this.uiStateManager ? this.uiStateManager.tabNavigation : null;\n    }\n}\n\n// Global functions for backward compatibility\nwindow.clearEvents = function() {\n    if (window.dashboard) {\n        window.dashboard.clearEvents();\n    }\n};\n\nwindow.exportEvents = function() {\n    if (window.dashboard) {\n        window.dashboard.exportEvents();\n    }\n};\n\nwindow.clearSelection = function() {\n    if (window.dashboard) {\n        window.dashboard.clearSelection();\n    }\n};\n\nwindow.switchTab = function(tabName) {\n    if (window.dashboard) {\n        window.dashboard.switchTab(tabName);\n    }\n};\n\n// File Viewer Modal Functions - REMOVED DUPLICATE (keeping the one at line 1553)\nwindow.showFileViewerModal = function(filePath, workingDir) {\n    // Use the dashboard's current working directory if not provided\n    if (!workingDir && window.dashboard && window.dashboard.currentWorkingDir) {\n        workingDir = window.dashboard.currentWorkingDir;\n    }\n\n    // Create modal if it doesn't exist\n    let modal = document.getElementById('file-viewer-modal');\n    if (!modal) {\n        modal = createFileViewerModal();\n        document.body.appendChild(modal);\n    }\n\n    // Update modal content\n    updateFileViewerModal(modal, filePath, workingDir);\n\n    // Show the modal as flex container\n    modal.style.display = 'flex';\n    document.body.style.overflow = 'hidden'; // Prevent background scrolling\n};\n\nwindow.hideFileViewerModal = function() {\n    const modal = document.getElementById('file-viewer-modal');\n    if (modal) {\n        modal.style.display = 'none';\n        document.body.style.overflow = ''; // Restore background scrolling\n    }\n};\n\nwindow.copyFileContent = function() {\n    const modal = document.getElementById('file-viewer-modal');\n    if (!modal) return;\n\n    const codeElement = modal.querySelector('.file-content-code');\n    if (!codeElement) return;\n\n    const text = codeElement.textContent;\n\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard.writeText(text).then(() => {\n            // Show brief feedback\n            const button = modal.querySelector('.file-content-copy');\n            const originalText = button.textContent;\n            button.textContent = '✅ Copied!';\n            setTimeout(() => {\n                button.textContent = originalText;\n            }, 2000);\n        }).catch(err => {\n            console.error('Failed to copy text:', err);\n        });\n    } else {\n        // Fallback for older browsers\n        const textarea = document.createElement('textarea');\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textarea);\n\n        const button = modal.querySelector('.file-content-copy');\n        const originalText = button.textContent;\n        button.textContent = '✅ Copied!';\n        setTimeout(() => {\n            button.textContent = originalText;\n        }, 2000);\n    }\n};\n\nfunction createFileViewerModal() {\n    const modal = document.createElement('div');\n    modal.id = 'file-viewer-modal';\n    modal.className = 'modal file-viewer-modal';\n\n    modal.innerHTML = `\n        <div class=\"modal-content file-viewer-content\">\n            <div class=\"file-viewer-header\">\n                <h2 class=\"file-viewer-title\">\n                    <span class=\"file-viewer-icon\">📄</span>\n                    <span class=\"file-viewer-title-text\">File Viewer</span>\n                </h2>\n                <div class=\"file-viewer-meta\">\n                    <span class=\"file-viewer-file-path\"></span>\n                    <span class=\"file-viewer-file-size\"></span>\n                </div>\n                <button class=\"file-viewer-close\" onclick=\"hideFileViewerModal()\">\n                    <span>&times;</span>\n                </button>\n            </div>\n            <div class=\"file-viewer-body\">\n                <div class=\"file-viewer-loading\">\n                    <div class=\"loading-spinner\"></div>\n                    <span>Loading file content...</span>\n                </div>\n                <div class=\"file-viewer-error\" style=\"display: none;\">\n                    <div class=\"error-icon\">⚠️</div>\n                    <div class=\"error-message\"></div>\n                    <div class=\"error-suggestions\"></div>\n                </div>\n                <div class=\"file-viewer-content-area\" style=\"display: none;\">\n                    <div class=\"file-viewer-toolbar\">\n                        <div class=\"file-viewer-info\">\n                            <span class=\"file-extension\"></span>\n                            <span class=\"file-encoding\"></span>\n                        </div>\n                        <div class=\"file-viewer-actions\">\n                            <button class=\"file-content-copy\" onclick=\"copyFileContent()\">\n                                📋 Copy\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"file-viewer-scroll-wrapper\">\n                        <pre class=\"file-content-display\"><code class=\"file-content-code\"></code></pre>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    // Close modal when clicking outside\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal) {\n            hideFileViewerModal();\n        }\n    });\n\n    // Close modal with Escape key\n    document.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape' && modal.style.display === 'flex') {\n            hideFileViewerModal();\n        }\n    });\n\n    return modal;\n}\n\nasync function updateFileViewerModal(modal, filePath, workingDir) {\n    // Update header info\n    const filePathElement = modal.querySelector('.file-viewer-file-path');\n    const fileSizeElement = modal.querySelector('.file-viewer-file-size');\n\n    filePathElement.textContent = filePath;\n    fileSizeElement.textContent = '';\n\n    // Show loading state\n    modal.querySelector('.file-viewer-loading').style.display = 'flex';\n    modal.querySelector('.file-viewer-error').style.display = 'none';\n    modal.querySelector('.file-viewer-content-area').style.display = 'none';\n\n    try {\n        // Get the Socket.IO client\n        const socket = window.socket || window.dashboard?.socketClient?.socket;\n        if (!socket) {\n            throw new Error('No socket connection available');\n        }\n\n        // Set up one-time listener for file content response\n        const responsePromise = new Promise((resolve, reject) => {\n            const responseHandler = (data) => {\n                if (data.file_path === filePath) {\n                    socket.off('file_content_response', responseHandler);\n                    if (data.success) {\n                        resolve(data);\n                    } else {\n                        reject(new Error(data.error || 'Failed to read file'));\n                    }\n                }\n            };\n\n            socket.on('file_content_response', responseHandler);\n\n            // Timeout after 10 seconds\n            setTimeout(() => {\n                socket.off('file_content_response', responseHandler);\n                reject(new Error('Request timeout'));\n            }, 10000);\n        });\n\n        // Send file read request\n        socket.emit('read_file', {\n            file_path: filePath,\n            working_dir: workingDir\n        });\n\n        // File viewer request sent\n\n        // Wait for response\n        const result = await responsePromise;\n        // File content received successfully\n\n        // Hide loading\n        modal.querySelector('.file-viewer-loading').style.display = 'none';\n\n        // Show successful content\n        displayFileContent(modal, result);\n\n    } catch (error) {\n        console.error('❌ Failed to fetch file content:', error);\n\n        modal.querySelector('.file-viewer-loading').style.display = 'none';\n\n        // Create detailed error message\n        let errorMessage = error.message || 'Unknown error occurred';\n        let suggestions = [];\n\n        if (error.message.includes('No socket connection')) {\n            errorMessage = 'Failed to connect to the monitoring server';\n            suggestions = [\n                'Check if the monitoring server is running',\n                'Verify the socket connection in the dashboard',\n                'Try refreshing the page and reconnecting'\n            ];\n        } else if (error.message.includes('timeout')) {\n            errorMessage = 'Request timed out';\n            suggestions = [\n                'The file may be too large to load quickly',\n                'Check your network connection',\n                'Try again in a few moments'\n            ];\n        } else if (error.message.includes('File does not exist')) {\n            errorMessage = 'File not found';\n            suggestions = [\n                'The file may have been moved or deleted',\n                'Check the file path spelling',\n                'Refresh the file list to see current files'\n            ];\n        } else if (error.message.includes('Access denied')) {\n            errorMessage = 'Access denied';\n            suggestions = [\n                'The file is outside the allowed directories',\n                'File access is restricted for security reasons'\n            ];\n        }\n\n        displayFileError(modal, {\n            error: errorMessage,\n            file_path: filePath,\n            working_dir: workingDir,\n            suggestions: suggestions\n        });\n    }\n}\n\nfunction displayFileContent(modal, result) {\n    // Display file content in modal\n    const contentArea = modal.querySelector('.file-viewer-content-area');\n    const extensionElement = modal.querySelector('.file-extension');\n    const encodingElement = modal.querySelector('.file-encoding');\n    const fileSizeElement = modal.querySelector('.file-viewer-file-size');\n    const codeElement = modal.querySelector('.file-content-code');\n\n    // Update metadata\n    if (extensionElement) extensionElement.textContent = `Type: ${result.extension || 'unknown'}`;\n    if (encodingElement) encodingElement.textContent = `Encoding: ${result.encoding || 'unknown'}`;\n    if (fileSizeElement) fileSizeElement.textContent = `Size: ${formatFileSize(result.file_size)}`;\n\n    // Update content with basic syntax highlighting\n    if (codeElement && result.content) {\n        // Setting file content\n        codeElement.innerHTML = highlightCode(result.content, result.extension);\n\n        // Force scrolling to work by setting explicit heights\n        const wrapper = modal.querySelector('.file-viewer-scroll-wrapper');\n        if (wrapper) {\n            // Give it a moment for content to render\n            setTimeout(() => {\n                const modalContent = modal.querySelector('.modal-content');\n                const header = modal.querySelector('.file-viewer-header');\n                const toolbar = modal.querySelector('.file-viewer-toolbar');\n\n                const modalHeight = modalContent?.offsetHeight || 0;\n                const headerHeight = header?.offsetHeight || 0;\n                const toolbarHeight = toolbar?.offsetHeight || 0;\n\n                const availableHeight = modalHeight - headerHeight - toolbarHeight - 40; // 40px for padding\n\n                // Setting file viewer scroll height\n\n                wrapper.style.maxHeight = `${availableHeight}px`;\n                wrapper.style.overflowY = 'auto';\n            }, 50);\n        }\n    } else {\n        console.warn('⚠️ Missing codeElement or file content');\n    }\n\n    // Show content area\n    if (contentArea) {\n        contentArea.style.display = 'block';\n        // File content area displayed\n    }\n}\n\nfunction displayFileError(modal, result) {\n    const errorArea = modal.querySelector('.file-viewer-error');\n    const messageElement = modal.querySelector('.error-message');\n    const suggestionsElement = modal.querySelector('.error-suggestions');\n\n    let errorMessage = result.error || 'Unknown error occurred';\n\n    messageElement.innerHTML = `\n        <div class=\"error-main\">${errorMessage}</div>\n        ${result.file_path ? `<div class=\"error-file\">File: ${result.file_path}</div>` : ''}\n        ${result.working_dir ? `<div class=\"error-dir\">Working directory: ${result.working_dir}</div>` : ''}\n    `;\n\n    if (result.suggestions && result.suggestions.length > 0) {\n        suggestionsElement.innerHTML = `\n            <h4>Suggestions:</h4>\n            <ul>\n                ${result.suggestions.map(s => `<li>${s}</li>`).join('')}\n            </ul>\n        `;\n    } else {\n        suggestionsElement.innerHTML = '';\n    }\n\n    console.log('📋 Displaying file viewer error:', {\n        originalError: result.error,\n        processedMessage: errorMessage,\n        suggestions: result.suggestions\n    });\n\n    errorArea.style.display = 'block';\n}\n\nfunction highlightCode(code, extension) {\n    /**\n     * Apply basic syntax highlighting to code content\n     * WHY: Provides basic highlighting for common file types to improve readability.\n     * This is a simple implementation that can be enhanced with full syntax highlighting\n     * libraries like highlight.js or Prism.js if needed.\n     */\n\n    // Escape HTML entities first\n    const escaped = code\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n\n    // Basic highlighting based on file extension\n    switch (extension) {\n        case '.js':\n        case '.jsx':\n        case '.ts':\n        case '.tsx':\n            return highlightJavaScript(escaped);\n        case '.py':\n            return highlightPython(escaped);\n        case '.json':\n            return highlightJSON(escaped);\n        case '.css':\n            return highlightCSS(escaped);\n        case '.html':\n        case '.htm':\n            return highlightHTML(escaped);\n        case '.md':\n        case '.markdown':\n            return highlightMarkdown(escaped);\n        default:\n            // Return with line numbers for plain text\n            return addLineNumbers(escaped);\n    }\n}\n\nfunction highlightJavaScript(code) {\n    return addLineNumbers(code\n        .replace(/\\b(function|const|let|var|if|else|for|while|return|import|export|class|extends)\\b/g, '<span class=\"keyword\">$1</span>')\n        .replace(/(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/g, '<span class=\"comment\">$1</span>')\n        .replace(/('[^']*'|\"[^\"]*\"|`[^`]*`)/g, '<span class=\"string\">$1</span>')\n        .replace(/\\b(\\d+)\\b/g, '<span class=\"number\">$1</span>'));\n}\n\nfunction highlightPython(code) {\n    return addLineNumbers(code\n        .replace(/\\b(def|class|if|elif|else|for|while|return|import|from|as|try|except|finally|with)\\b/g, '<span class=\"keyword\">$1</span>')\n        .replace(/(#.*)/g, '<span class=\"comment\">$1</span>')\n        .replace(/('[^']*'|\"[^\"]*\"|\"\"\"[\\s\\S]*?\"\"\")/g, '<span class=\"string\">$1</span>')\n        .replace(/\\b(\\d+)\\b/g, '<span class=\"number\">$1</span>'));\n}\n\nfunction highlightJSON(code) {\n    return addLineNumbers(code\n        .replace(/(\"[\\w\\s]*\")\\s*:/g, '<span class=\"property\">$1</span>:')\n        .replace(/:\\s*(\".*?\")/g, ': <span class=\"string\">$1</span>')\n        .replace(/:\\s*(\\d+)/g, ': <span class=\"number\">$1</span>')\n        .replace(/:\\s*(true|false|null)/g, ': <span class=\"keyword\">$1</span>'));\n}\n\nfunction highlightCSS(code) {\n    return addLineNumbers(code\n        .replace(/([.#]?[\\w-]+)\\s*\\{/g, '<span class=\"selector\">$1</span> {')\n        .replace(/([\\w-]+)\\s*:/g, '<span class=\"property\">$1</span>:')\n        .replace(/:\\s*([^;]+);/g, ': <span class=\"value\">$1</span>;')\n        .replace(/(\\/\\*[\\s\\S]*?\\*\\/)/g, '<span class=\"comment\">$1</span>'));\n}\n\nfunction highlightHTML(code) {\n    return addLineNumbers(code\n        .replace(/(&lt;\\/?[\\w-]+)/g, '<span class=\"tag\">$1</span>')\n        .replace(/([\\w-]+)=(['\"][^'\"]*['\"])/g, '<span class=\"attribute\">$1</span>=<span class=\"string\">$2</span>')\n        .replace(/(&lt;!--[\\s\\S]*?--&gt;)/g, '<span class=\"comment\">$1</span>'));\n}\n\nfunction highlightMarkdown(code) {\n    return addLineNumbers(code\n        .replace(/^(#{1,6})\\s+(.*)$/gm, '<span class=\"header\">$1</span> <span class=\"header-text\">$2</span>')\n        .replace(/\\*\\*(.*?)\\*\\*/g, '<span class=\"bold\">**$1**</span>')\n        .replace(/\\*(.*?)\\*/g, '<span class=\"italic\">*$1*</span>')\n        .replace(/`([^`]+)`/g, '<span class=\"code\">`$1`</span>')\n        .replace(/^\\s*[-*+]\\s+(.*)$/gm, '<span class=\"list-marker\">•</span> $1'));\n}\n\nfunction addLineNumbers(code) {\n    const lines = code.split('\\n');\n    return lines.map((line, index) =>\n        `<span class=\"line-number\">${String(index + 1).padStart(3, ' ')}</span> ${line || ' '}`\n    ).join('\\n');\n}\n\nfunction formatFileSize(bytes) {\n    if (!bytes) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// Git Diff Modal Functions - restored from original dashboard\nwindow.showGitDiffModal = function(filePath, timestamp, workingDir) {\n    // Use the dashboard's current working directory if not provided\n    if (!workingDir && window.dashboard && window.dashboard.currentWorkingDir) {\n        workingDir = window.dashboard.currentWorkingDir;\n    }\n\n    // Create modal if it doesn't exist\n    let modal = document.getElementById('git-diff-modal');\n    if (!modal) {\n        modal = createGitDiffModal();\n        document.body.appendChild(modal);\n    }\n\n    // Update modal content\n    updateGitDiffModal(modal, filePath, timestamp, workingDir);\n\n    // Show the modal as flex container\n    modal.style.display = 'flex';\n    document.body.style.overflow = 'hidden'; // Prevent background scrolling\n};\n\nwindow.hideGitDiffModal = function() {\n    const modal = document.getElementById('git-diff-modal');\n    if (modal) {\n        modal.style.display = 'none';\n        document.body.style.overflow = ''; // Restore background scrolling\n    }\n};\n\nwindow.copyGitDiff = function() {\n    const modal = document.getElementById('git-diff-modal');\n    if (!modal) return;\n\n    const codeElement = modal.querySelector('.git-diff-code');\n    if (!codeElement) return;\n\n    const text = codeElement.textContent;\n\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard.writeText(text).then(() => {\n            // Show brief feedback\n            const button = modal.querySelector('.git-diff-copy');\n            const originalText = button.textContent;\n            button.textContent = '✅ Copied!';\n            setTimeout(() => {\n                button.textContent = originalText;\n            }, 2000);\n        }).catch(err => {\n            console.error('Failed to copy text:', err);\n        });\n    } else {\n        // Fallback for older browsers\n        const textarea = document.createElement('textarea');\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textarea);\n\n        const button = modal.querySelector('.git-diff-copy');\n        const originalText = button.textContent;\n        button.textContent = '✅ Copied!';\n        setTimeout(() => {\n            button.textContent = originalText;\n        }, 2000);\n    }\n};\n\nfunction createGitDiffModal() {\n    const modal = document.createElement('div');\n    modal.id = 'git-diff-modal';\n    modal.className = 'modal git-diff-modal';\n\n    modal.innerHTML = `\n        <div class=\"modal-content git-diff-content\">\n            <div class=\"git-diff-header\">\n                <h2 class=\"git-diff-title\">\n                    <span class=\"git-diff-icon\">📋</span>\n                    <span class=\"git-diff-title-text\">Git Diff</span>\n                </h2>\n                <div class=\"git-diff-meta\">\n                    <span class=\"git-diff-file-path\"></span>\n                    <span class=\"git-diff-timestamp\"></span>\n                </div>\n                <button class=\"git-diff-close\" onclick=\"hideGitDiffModal()\">\n                    <span>&times;</span>\n                </button>\n            </div>\n            <div class=\"git-diff-body\">\n                <div class=\"git-diff-loading\">\n                    <div class=\"loading-spinner\"></div>\n                    <span>Loading git diff...</span>\n                </div>\n                <div class=\"git-diff-error\" style=\"display: none;\">\n                    <div class=\"error-icon\">⚠️</div>\n                    <div class=\"error-message\"></div>\n                    <div class=\"error-suggestions\"></div>\n                </div>\n                <div class=\"git-diff-content-area\" style=\"display: none;\">\n                    <div class=\"git-diff-toolbar\">\n                        <div class=\"git-diff-info\">\n                            <span class=\"commit-hash\"></span>\n                            <span class=\"diff-method\"></span>\n                        </div>\n                        <div class=\"git-diff-actions\">\n                            <button class=\"git-diff-copy\" onclick=\"copyGitDiff()\">\n                                📋 Copy\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"git-diff-scroll-wrapper\">\n                        <pre class=\"git-diff-display\"><code class=\"git-diff-code\"></code></pre>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    // Close modal when clicking outside\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal) {\n            hideGitDiffModal();\n        }\n    });\n\n    // Close modal with Escape key\n    document.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape' && modal.style.display === 'flex') {\n            hideGitDiffModal();\n        }\n    });\n\n    return modal;\n}\n\nasync function updateGitDiffModal(modal, filePath, timestamp, workingDir) {\n    // Update header info\n    const filePathElement = modal.querySelector('.git-diff-file-path');\n    const timestampElement = modal.querySelector('.git-diff-timestamp');\n\n    filePathElement.textContent = filePath;\n    timestampElement.textContent = timestamp ? new Date(timestamp).toLocaleString() : 'Latest';\n\n    // Show loading state\n    modal.querySelector('.git-diff-loading').style.display = 'flex';\n    modal.querySelector('.git-diff-error').style.display = 'none';\n    modal.querySelector('.git-diff-content-area').style.display = 'none';\n\n    try {\n        // Get the Socket.IO server port with multiple fallbacks\n        let port = 8765; // Default fallback\n\n        // Try to get port from socketClient first\n        if (window.dashboard && window.dashboard.socketClient && window.dashboard.socketClient.port) {\n            port = window.dashboard.socketClient.port;\n        }\n        // Fallback to port input field if socketClient port is not available\n        else {\n            const portInput = document.getElementById('port-input');\n            if (portInput && portInput.value) {\n                port = portInput.value;\n            }\n        }\n\n        // Build URL parameters\n        const params = new URLSearchParams({\n            file: filePath\n        });\n\n        if (timestamp) {\n            params.append('timestamp', timestamp);\n        }\n        if (workingDir) {\n            params.append('working_dir', workingDir);\n        }\n\n        const requestUrl = `http://localhost:${port}/api/git-diff?${params}`;\n        console.log('🌐 Making git diff request to:', requestUrl);\n        console.log('📋 Git diff request parameters:', {\n            filePath,\n            timestamp,\n            workingDir,\n            urlParams: params.toString()\n        });\n\n        // Test server connectivity first\n        try {\n            const healthResponse = await fetch(`http://localhost:${port}/health`, {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                mode: 'cors'\n            });\n\n            if (!healthResponse.ok) {\n                throw new Error(`Server health check failed: ${healthResponse.status} ${healthResponse.statusText}`);\n            }\n\n            // Server health check passed\n        } catch (healthError) {\n            throw new Error(`Cannot reach server at localhost:${port}. Health check failed: ${healthError.message}`);\n        }\n\n        // Make the actual git diff request\n        const response = await fetch(requestUrl, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors'\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n\n        const result = await response.json();\n        // Git diff response received\n\n        // Hide loading\n        modal.querySelector('.git-diff-loading').style.display = 'none';\n\n        if (result.success) {\n            // Displaying successful git diff\n            // Show successful diff\n            displayGitDiff(modal, result);\n        } else {\n            // Displaying git diff error\n            // Show error\n            displayGitDiffError(modal, result);\n        }\n\n    } catch (error) {\n        console.error('❌ Failed to fetch git diff:', error);\n        console.error('Error details:', {\n            name: error.name,\n            message: error.message,\n            stack: error.stack,\n            filePath,\n            timestamp,\n            workingDir\n        });\n\n        modal.querySelector('.git-diff-loading').style.display = 'none';\n\n        // Create detailed error message based on error type\n        let errorMessage = `Network error: ${error.message}`;\n        let suggestions = [];\n\n        if (error.message.includes('Failed to fetch')) {\n            errorMessage = 'Failed to connect to the monitoring server';\n            suggestions = [\n                'Check if the monitoring server is running on port 8765',\n                'Verify the port configuration in the dashboard',\n                'Check browser console for CORS or network errors',\n                'Try refreshing the page and reconnecting'\n            ];\n        } else if (error.message.includes('health check failed')) {\n            errorMessage = error.message;\n            suggestions = [\n                'The server may be starting up - try again in a few seconds',\n                'Check if another process is using port 8765',\n                'Restart the claude-mpm monitoring server'\n            ];\n        } else if (error.message.includes('HTTP')) {\n            errorMessage = `Server error: ${error.message}`;\n            suggestions = [\n                'The server encountered an internal error',\n                'Check the server logs for more details',\n                'Try with a different file or working directory'\n            ];\n        }\n\n        displayGitDiffError(modal, {\n            error: errorMessage,\n            file_path: filePath,\n            working_dir: workingDir,\n            suggestions: suggestions,\n            debug_info: {\n                error_type: error.name,\n                original_message: error.message,\n                port: window.dashboard?.socketClient?.port || document.getElementById('port-input')?.value || '8765',\n                timestamp: new Date().toISOString()\n            }\n        });\n    }\n}\n\nfunction highlightGitDiff(diffText) {\n    /**\n     * Apply basic syntax highlighting to git diff output\n     * WHY: Git diffs have a standard format that can be highlighted for better readability:\n     * - Lines starting with '+' are additions (green)\n     * - Lines starting with '-' are deletions (red)\n     * - Lines starting with '@@' are context headers (blue)\n     * - File headers and metadata get special formatting\n     */\n    return diffText\n        .split('\\n')\n        .map(line => {\n            // Escape HTML entities\n            const escaped = line\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;');\n\n            // Apply diff highlighting\n            if (line.startsWith('+++') || line.startsWith('---')) {\n                return `<span class=\"diff-header\">${escaped}</span>`;\n            } else if (line.startsWith('@@')) {\n                return `<span class=\"diff-meta\">${escaped}</span>`;\n            } else if (line.startsWith('+')) {\n                return `<span class=\"diff-addition\">${escaped}</span>`;\n            } else if (line.startsWith('-')) {\n                return `<span class=\"diff-deletion\">${escaped}</span>`;\n            } else if (line.startsWith('commit ') || line.startsWith('Author:') || line.startsWith('Date:')) {\n                return `<span class=\"diff-header\">${escaped}</span>`;\n            } else {\n                return `<span class=\"diff-context\">${escaped}</span>`;\n            }\n        })\n        .join('\\n');\n}\n\nfunction displayGitDiff(modal, result) {\n    // Display git diff content\n    const contentArea = modal.querySelector('.git-diff-content-area');\n    const commitHashElement = modal.querySelector('.commit-hash');\n    const methodElement = modal.querySelector('.diff-method');\n    const codeElement = modal.querySelector('.git-diff-code');\n\n    // Elements found for diff display\n\n    // Update metadata\n    if (commitHashElement) commitHashElement.textContent = `Commit: ${result.commit_hash}`;\n    if (methodElement) methodElement.textContent = `Method: ${result.method}`;\n\n    // Update diff content with basic syntax highlighting\n    if (codeElement && result.diff) {\n        // Setting diff content\n        codeElement.innerHTML = highlightGitDiff(result.diff);\n\n        // Force scrolling to work by setting explicit heights\n        const wrapper = modal.querySelector('.git-diff-scroll-wrapper');\n        if (wrapper) {\n            // Give it a moment for content to render\n            setTimeout(() => {\n                const modalContent = modal.querySelector('.modal-content');\n                const header = modal.querySelector('.git-diff-header');\n                const toolbar = modal.querySelector('.git-diff-toolbar');\n\n                const modalHeight = modalContent?.offsetHeight || 0;\n                const headerHeight = header?.offsetHeight || 0;\n                const toolbarHeight = toolbar?.offsetHeight || 0;\n\n                const availableHeight = modalHeight - headerHeight - toolbarHeight - 40; // 40px for padding\n\n                // Setting explicit scroll height\n\n                wrapper.style.maxHeight = `${availableHeight}px`;\n                wrapper.style.overflowY = 'auto';\n            }, 50);\n        }\n    } else {\n        console.warn('⚠️ Missing codeElement or diff data');\n    }\n\n    // Show content area\n    if (contentArea) {\n        contentArea.style.display = 'block';\n        // Content area displayed\n    }\n}\n\nfunction displayGitDiffError(modal, result) {\n    const errorArea = modal.querySelector('.git-diff-error');\n    const messageElement = modal.querySelector('.error-message');\n    const suggestionsElement = modal.querySelector('.error-suggestions');\n\n    // Create more user-friendly error messages\n    let errorMessage = result.error || 'Unknown error occurred';\n    let isUntracked = false;\n\n    if (errorMessage.includes('not tracked by git')) {\n        errorMessage = '📝 This file is not tracked by git yet';\n        isUntracked = true;\n    } else if (errorMessage.includes('No git history found')) {\n        errorMessage = '📋 No git history available for this file';\n    }\n\n    messageElement.innerHTML = `\n        <div class=\"error-main\">${errorMessage}</div>\n        ${result.file_path ? `<div class=\"error-file\">File: ${result.file_path}</div>` : ''}\n        ${result.working_dir ? `<div class=\"error-dir\">Working directory: ${result.working_dir}</div>` : ''}\n    `;\n\n    if (result.suggestions && result.suggestions.length > 0) {\n        const suggestionTitle = isUntracked ? 'How to track this file:' : 'Suggestions:';\n        suggestionsElement.innerHTML = `\n            <h4>${suggestionTitle}</h4>\n            <ul>\n                ${result.suggestions.map(s => `<li>${s}</li>`).join('')}\n            </ul>\n        `;\n    } else {\n        suggestionsElement.innerHTML = '';\n    }\n\n    console.log('📋 Displaying git diff error:', {\n        originalError: result.error,\n        processedMessage: errorMessage,\n        isUntracked,\n        suggestions: result.suggestions\n    });\n\n    errorArea.style.display = 'block';\n}\n\n// File Viewer Modal Functions\nwindow.showFileViewerModal = function(filePath) {\n    // Use the dashboard's current working directory\n    let workingDir = '';\n    if (window.dashboard && window.dashboard.currentWorkingDir) {\n        workingDir = window.dashboard.currentWorkingDir;\n    }\n\n    // Create modal if it doesn't exist\n    let modal = document.getElementById('file-viewer-modal');\n    if (!modal) {\n        modal = createFileViewerModal();\n        document.body.appendChild(modal);\n    }\n\n    // Update modal content\n    updateFileViewerModal(modal, filePath, workingDir);\n\n    // Show the modal as flex container\n    modal.style.display = 'flex';\n    document.body.style.overflow = 'hidden'; // Prevent background scrolling\n};\n\nwindow.hideFileViewerModal = function() {\n    const modal = document.getElementById('file-viewer-modal');\n    if (modal) {\n        modal.style.display = 'none';\n        document.body.style.overflow = ''; // Restore background scrolling\n    }\n};\n\nwindow.copyFileContent = function() {\n    const modal = document.getElementById('file-viewer-modal');\n    if (!modal) return;\n\n    const codeElement = modal.querySelector('.file-content-code');\n    if (!codeElement) return;\n\n    const text = codeElement.textContent;\n\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard.writeText(text).then(() => {\n            // Show brief feedback\n            const button = modal.querySelector('.file-content-copy');\n            const originalText = button.textContent;\n            button.textContent = '✅ Copied!';\n            setTimeout(() => {\n                button.textContent = originalText;\n            }, 2000);\n        }).catch(err => {\n            console.error('Failed to copy text:', err);\n        });\n    } else {\n        // Fallback for older browsers\n        const textarea = document.createElement('textarea');\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textarea);\n\n        const button = modal.querySelector('.file-content-copy');\n        const originalText = button.textContent;\n        button.textContent = '✅ Copied!';\n        setTimeout(() => {\n            button.textContent = originalText;\n        }, 2000);\n    }\n};\n\n\n\n\nfunction displayFileContentError(modal, result) {\n    const errorArea = modal.querySelector('.file-viewer-error');\n    const messageElement = modal.querySelector('.error-message');\n    const suggestionsElement = modal.querySelector('.error-suggestions');\n\n    // Create user-friendly error messages\n    let errorMessage = result.error || 'Unknown error occurred';\n\n    if (errorMessage.includes('not found')) {\n        errorMessage = '📁 File not found or not accessible';\n    } else if (errorMessage.includes('permission')) {\n        errorMessage = '🔒 Permission denied accessing this file';\n    } else if (errorMessage.includes('too large')) {\n        errorMessage = '📏 File is too large to display';\n    } else if (!errorMessage.includes('📁') && !errorMessage.includes('🔒') && !errorMessage.includes('📏')) {\n        errorMessage = `⚠️ ${errorMessage}`;\n    }\n\n    messageElement.textContent = errorMessage;\n\n    // Add suggestions if available\n    if (result.suggestions && result.suggestions.length > 0) {\n        suggestionsElement.innerHTML = `\n            <h4>Suggestions:</h4>\n            <ul>\n                ${result.suggestions.map(suggestion => `<li>${suggestion}</li>`).join('')}\n            </ul>\n        `;\n    } else {\n        suggestionsElement.innerHTML = `\n            <h4>Try:</h4>\n            <ul>\n                <li>Check if the file exists and is readable</li>\n                <li>Verify file permissions</li>\n                <li>Ensure the monitoring server has access to this file</li>\n            </ul>\n        `;\n    }\n\n    console.log('📋 Displaying file content error:', {\n        originalError: result.error,\n        processedMessage: errorMessage,\n        suggestions: result.suggestions\n    });\n\n    errorArea.style.display = 'block';\n}\n\n// Search Viewer Modal Functions\nwindow.showSearchViewerModal = function(searchParams, searchResults) {\n    // Create modal if it doesn't exist\n    let modal = document.getElementById('search-viewer-modal');\n    if (!modal) {\n        modal = createSearchViewerModal();\n        document.body.appendChild(modal);\n    }\n\n    // Update modal content\n    updateSearchViewerModal(modal, searchParams, searchResults);\n\n    // Show the modal as flex container\n    modal.style.display = 'flex';\n    document.body.style.overflow = 'hidden'; // Prevent background scrolling\n};\n\nwindow.hideSearchViewerModal = function() {\n    const modal = document.getElementById('search-viewer-modal');\n    if (modal) {\n        modal.style.display = 'none';\n        document.body.style.overflow = ''; // Restore background scrolling\n    }\n};\n\nfunction createSearchViewerModal() {\n    const modal = document.createElement('div');\n    modal.id = 'search-viewer-modal';\n    modal.className = 'modal search-viewer-modal';\n\n    modal.innerHTML = `\n        <div class=\"modal-content search-viewer-content\">\n            <div class=\"search-viewer-header\">\n                <h2 class=\"search-viewer-title\">\n                    <span class=\"search-viewer-icon\">🔍</span>\n                    <span class=\"search-viewer-title-text\">Search Results</span>\n                </h2>\n                <button class=\"search-viewer-close\" onclick=\"hideSearchViewerModal()\">\n                    <span>&times;</span>\n                </button>\n            </div>\n            <div class=\"search-viewer-body\">\n                <div class=\"search-params-section\">\n                    <h3>Search Parameters</h3>\n                    <pre class=\"search-params-display\"></pre>\n                </div>\n                <div class=\"search-results-section\">\n                    <h3>Search Results</h3>\n                    <div class=\"search-results-display\"></div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    // Close modal when clicking outside\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal) {\n            hideSearchViewerModal();\n        }\n    });\n\n    // Close modal on Escape key\n    document.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape' && modal.style.display === 'flex') {\n            hideSearchViewerModal();\n        }\n    });\n\n    return modal;\n}\n\nfunction updateSearchViewerModal(modal, searchParams, searchResults) {\n    const paramsDisplay = modal.querySelector('.search-params-display');\n    const resultsDisplay = modal.querySelector('.search-results-display');\n\n    // Display search parameters in formatted JSON\n    if (paramsDisplay && searchParams) {\n        paramsDisplay.textContent = JSON.stringify(searchParams, null, 2);\n    }\n\n    // Display search results\n    if (resultsDisplay && searchResults) {\n        let resultsHTML = '';\n        \n        if (typeof searchResults === 'string') {\n            // If results are a string, display as preformatted text\n            resultsHTML = `<pre class=\"search-results-text\">${escapeHtml(searchResults)}</pre>`;\n        } else if (Array.isArray(searchResults)) {\n            // If results are an array, display as a list\n            resultsHTML = '<ul class=\"search-results-list\">';\n            searchResults.forEach(result => {\n                if (typeof result === 'object') {\n                    resultsHTML += `<li><pre>${JSON.stringify(result, null, 2)}</pre></li>`;\n                } else {\n                    resultsHTML += `<li>${escapeHtml(String(result))}</li>`;\n                }\n            });\n            resultsHTML += '</ul>';\n        } else if (typeof searchResults === 'object') {\n            // If results are an object, display as formatted JSON\n            resultsHTML = `<pre class=\"search-results-json\">${JSON.stringify(searchResults, null, 2)}</pre>`;\n        } else {\n            // Fallback: display as text\n            resultsHTML = `<div class=\"search-results-text\">${escapeHtml(String(searchResults))}</div>`;\n        }\n        \n        resultsDisplay.innerHTML = resultsHTML;\n    }\n}\n\nfunction escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n}\n\n// Global window functions for backward compatibility\nwindow.showAgentInstanceDetails = function(instanceId) {\n    if (window.dashboard && typeof window.dashboard.showAgentInstanceDetails === 'function') {\n        window.dashboard.showAgentInstanceDetails(instanceId);\n    } else {\n        console.error('Dashboard not available or method not found');\n    }\n};\n\n// Initialize dashboard when page loads\ndocument.addEventListener('DOMContentLoaded', function() {\n    try {\n        // Create dashboard instance\n        window.dashboard = new Dashboard();\n        \n        // Call post-initialization setup that requires window.dashboard\n        // This must happen after window.dashboard is set\n        if (window.dashboard && typeof window.dashboard.postInit === 'function') {\n            window.dashboard.postInit();\n        }\n        \n        console.log('Dashboard loaded and initialized successfully');\n        \n        // Dispatch custom event to signal dashboard ready\n        document.dispatchEvent(new CustomEvent('dashboardReady', {\n            detail: { dashboard: window.dashboard }\n        }));\n    } catch (error) {\n        console.error('Failed to initialize dashboard:', error);\n        // Show user-friendly error message\n        document.body.innerHTML = `\n            <div style=\"padding: 20px; font-family: sans-serif;\">\n                <h1>Dashboard Initialization Error</h1>\n                <p>The dashboard failed to load properly. Please refresh the page or check the console for details.</p>\n                <pre style=\"background: #f5f5f5; padding: 10px; border-radius: 4px;\">${error.message}</pre>\n            </div>\n        `;\n    }\n});\n\n// ES6 Module export\nexport { Dashboard };\nexport default Dashboard;\n"],"names":["AgentHierarchy","constructor","agentInference","eventViewer","this","state","hierarchyTree","nodeMap","Map","expandedNodes","Set","selectedNode","expandAll","setupEventListeners","console","log","document","addEventListener","event","toggleTarget","target","closest","window","dashboard","agentHierarchy","nodeId","dataset","toggleNode","buildHierarchy","processAgentInference","pmDelegations","getPMDelegations","events","eventAgentMap","getEventAgentMap","mainPM","id","type","name","children","eventCount","status","startTime","endTime","expanded","impliedPMGroups","clear","set","processedAgents","delegationId","delegation","agentNode","agentName","delegationContext","extractDelegationContext","pmCall","agentEvents","length","endIndex","timestamp","startIndex","has","push","add","Date","orphanGroups","getOrphanGroups","impliedPMCounter","groupingKey","orphans","impliedPM","isImplied","tooltip","agentEventGroups","orphan","forEach","index","inference","get","isOrphan","_","some","e","eventIndex","firstEvent","lastEvent","uncategorizedOrphans","child","genericImpliedPM","agentGroups","pmOwnEvents","hasActive","tree","roots","ownEvents","size","totalImpliedAgents","Array","from","values","reduce","sum","pm","params","tool_parameters","data","task","request","description","maxLength","substring","toolInput","tool_input","render","filters","applyFilters","map","root","renderNode","join","node","level","isExpanded","hasChildren","isSelected","icon","getNodeIcon","expandIcon","statusClass","getStatusClass","impliedClass","tooltipAttr","escapeHtml","html","duration","calculateDuration","formatTime","delete","renderCurrentTab","selectNode","CustomEvent","detail","dispatchEvent","Object","keys","filteredTree","filteredRoot","filterNode","matches","searchText","searchLower","toLowerCase","includes","agentType","filteredChildren","filteredChild","toLocaleTimeString","hour","minute","second","hour12","start","end","getTime","toFixed","Math","floor","text","div","createElement","textContent","innerHTML","updateWithNewEvents","expandAllNodes","collapseAllNodes","BuildTracker","element","buildInfo","monitor","version","build","formatted_build","full_version","mpm","socketClient","init","loadDashboardVersion","createElements","response","fetch","ok","versionData","json","error","className","mpmVersion","separator","monitorVersion","appendChild","title","setSocketClient","socket","on","eventData","build_info","updateBuildInfo","updateDisplay","mpmElement","querySelector","parentElement","monitorElement","last_updated","lastUpdated","toLocaleString","showDetailedInfo","info","modal","body","setTimeout","remove","mount","parent","parentNode","getElement","destroy","removeChild","off","Dashboard","moduleViewer","sessionManager","socketManager","uiStateManager","eventProcessor","exportManager","workingDirectoryManager","fileToolTracker","buildTracker","initializeSocketManager","initializeCoreComponents","initializeBuildTracker","initializeAgentInference","initializeAgentHierarchy","initializeUIStateManager","initializeWorkingDirectoryManager","initializeFileToolTracker","initializeEventProcessor","initializeExportManager","setupModuleInteractions","initializeFromURL","validateInitialization","missing","component","filter","c","warn","postInit","SocketManager","setupConnectionControls","getSocketClient","EventViewer","ModuleViewer","SessionManager","mountBuildTracker","headerTitle","AgentInference","initialize","UIStateManager","setupTabFilters","WorkingDirectoryManager","FileToolTracker","EventProcessor","ExportManager","onEventUpdate","updateFileOperations","updateToolCalls","getCurrentTab","scrollListToBottom","onConnectionStatusChange","updateGitBranch","getCurrentWorkingDir","updateTabNavigationItems","showCardDetails","tabName","agentsSearchInput","getElementById","agentsTypeFilter","toolsSearchInput","toolsTypeFilter","filesSearchInput","filesTypeFilter","URLSearchParams","location","search","currentTab","ActivityTree","activityTreeInstance","initialized","renderWhenVisible","forceShow","activityTree","renderAgents","renderTools","renderFiles","getSelectedCard","tab","updateCardSelectionUI","updateUnifiedSelectionUI","agentsList","value","flatHTML","renderAgentsFlat","removeHierarchyControls","uniqueInstances","getUniqueAgentInstances","updateAgentsFilterDropdowns","existingControls","includeEvent","tool_name","JSON","stringify","item","listIndex","action","actionIcon","details","event_type","getToolIcon","file_path","command","pattern","query","formatTimestamp","getAgentIcon","getStatusIcon","PM","toolName","Read","Write","Edit","Bash","Grep","Glob","LS","Task","active","completed","pending","toolsList","toolCalls","getToolCalls","toolCallsArray","entries","uniqueToolInstances","getUniqueToolInstances","toolHTML","generateToolHTML","updateToolsFilterDropdowns","filesList","fileOperations","getFileOperations","filesArray","uniqueFileInstances","getUniqueFileInstances","fileHTML","generateFileHTML","updateFilesFilterDropdowns","agentTypes","instance","sortedTypes","trim","populateFilterDropdown","toolNames","key","toolCall","operations","flatMap","path","op","operation","selectId","allOption","select","currentValue","sortedValues","sort","a","b","localeCompare","option","showEventDetails","showAgentDetailsByIndex","showToolDetailsByIndex","showFileDetailsByIndex","getFilteredEventsForTab","isArray","filteredSingleEvent","applyAgentsFilters","showAgentEvent","showAgentInstanceDetails","instanceId","impliedInstance","find","inst","showImpliedAgentDetails","showAgentInstance","showImpliedAgent","note","filteredToolCalls","applyToolCallFilters","toolCallKey","showToolCallDetails","applyFilesFilters","filePath","showFileDetails","getToolCall","showToolCall","fileData","getFileOperationsForFile","showFileOperations","switchTab","selectCard","clearEvents","exportEvents","clearSelection","currentWorkingDir","dir","setWorkingDirectory","selectedCard","tabNavigation","createFileViewerModal","hideFileViewerModal","style","display","async","updateFileViewerModal","workingDir","filePathElement","fileSizeElement","Error","responsePromise","Promise","resolve","reject","responseHandler","success","emit","working_dir","result","contentArea","extensionElement","encodingElement","codeElement","extension","encoding","bytes","k","sizes","i","parseFloat","pow","formatFileSize","file_size","content","code","escaped","replace","addLineNumbers","highlightJavaScript","highlightPython","highlightJSON","highlightCSS","highlightHTML","highlightMarkdown","highlightCode","wrapper","modalContent","header","toolbar","availableHeight","offsetHeight","maxHeight","overflowY","displayFileContent","errorMessage","message","suggestions","errorArea","messageElement","suggestionsElement","s","originalError","processedMessage","displayFileError","split","line","String","padStart","displayGitDiffError","isUntracked","suggestionTitle","showFileViewerModal","overflow","copyFileContent","navigator","clipboard","writeText","then","button","originalText","catch","err","textarea","execCommand","showGitDiffModal","hideGitDiffModal","createGitDiffModal","timestampElement","port","portInput","file","append","requestUrl","urlParams","toString","healthResponse","method","headers","Accept","mode","statusText","healthError","commitHashElement","methodElement","commit_hash","diff","startsWith","displayGitDiff","stack","debug_info","error_type","original_message","toISOString","updateGitDiffModal","copyGitDiff","showSearchViewerModal","searchParams","searchResults","hideSearchViewerModal","createSearchViewerModal","paramsDisplay","resultsDisplay","resultsHTML","updateSearchViewerModal"],"mappings":"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"}