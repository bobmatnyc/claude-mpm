{"version":3,"file":"dashboard.js","sources":["../js/components/agent-hierarchy.js","../js/components/build-tracker.js","../js/dashboard.js"],"sourcesContent":["/**\n * Agent Hierarchy Component\n * \n * Displays agents in a hierarchical tree structure with PM at the top level.\n * Shows subagents as children of the PM that spawned them, tracking delegation\n * relationships from Task tool calls.\n * \n * WHY: Provides clear visualization of agent delegation relationships, making it\n * easier to understand the flow of work through PM and subagent delegations.\n * \n * DESIGN DECISION: Uses tree-based visualization with expand/collapse functionality\n * to handle complex delegation chains while maintaining performance with large\n * event streams. Separates hierarchy building from rendering for flexibility.\n */\n\nclass AgentHierarchy {\n    constructor(agentInference, eventViewer) {\n        this.agentInference = agentInference;\n        this.eventViewer = eventViewer;\n        \n        // Hierarchy state\n        this.state = {\n            // Tree structure with PM nodes at root\n            hierarchyTree: null,\n            // Map of agent ID to node for quick lookups\n            nodeMap: new Map(),\n            // Expanded state for tree nodes\n            expandedNodes: new Set(),\n            // Currently selected node\n            selectedNode: null\n        };\n        \n        // Default expand all nodes initially\n        this.expandAll = true;\n        \n        // Set up event listeners\n        this.setupEventListeners();\n        \n        console.log('Agent hierarchy component initialized');\n    }\n    \n    /**\n     * Set up event listeners for safe interaction\n     */\n    setupEventListeners() {\n        // Use event delegation for toggle node clicks to avoid undefined dashboard errors\n        document.addEventListener('click', (event) => {\n            const toggleTarget = event.target.closest('[data-toggle-node]');\n            if (toggleTarget && window.dashboard && window.dashboard.agentHierarchy) {\n                const nodeId = toggleTarget.dataset.toggleNode;\n                window.dashboard.agentHierarchy.toggleNode(nodeId);\n            }\n        });\n    }\n    \n    /**\n     * Build hierarchical structure from events\n     * @returns {Object} Tree structure with PM at root\n     */\n    buildHierarchy() {\n        // Process agent inference first\n        this.agentInference.processAgentInference();\n        \n        // Get PM delegations and events\n        const pmDelegations = this.agentInference.getPMDelegations();\n        const events = this.eventViewer.events;\n        const eventAgentMap = this.agentInference.getEventAgentMap();\n        \n        // Create root PM nodes\n        const mainPM = {\n            id: 'pm_main',\n            type: 'pm',\n            name: 'PM (Main Session)',\n            children: [],\n            events: [],\n            eventCount: 0,\n            status: 'active',\n            startTime: null,\n            endTime: null,\n            expanded: true\n        };\n        \n        // Map to store multiple implied PM groups\n        const impliedPMGroups = new Map();\n        \n        // Clear node map\n        this.state.nodeMap.clear();\n        this.state.nodeMap.set(mainPM.id, mainPM);\n        \n        // Track which agents have been added\n        const processedAgents = new Set();\n        \n        // Process explicit PM delegations\n        for (const [delegationId, delegation] of pmDelegations) {\n            const agentNode = {\n                id: delegationId,\n                type: 'subagent',\n                name: delegation.agentName,\n                delegationContext: this.extractDelegationContext(delegation.pmCall),\n                children: [], // Subagents could theoretically delegate to others\n                events: delegation.agentEvents,\n                eventCount: delegation.agentEvents.length,\n                status: delegation.endIndex ? 'completed' : 'active',\n                startTime: delegation.timestamp,\n                endTime: delegation.endIndex ? events[delegation.endIndex]?.timestamp : null,\n                startIndex: delegation.startIndex,\n                endIndex: delegation.endIndex,\n                expanded: this.expandAll || this.state.expandedNodes.has(delegationId)\n            };\n            \n            mainPM.children.push(agentNode);\n            this.state.nodeMap.set(delegationId, agentNode);\n            processedAgents.add(delegation.agentName);\n            \n            // Update main PM stats\n            mainPM.eventCount++;\n            if (!mainPM.startTime || new Date(delegation.timestamp) < new Date(mainPM.startTime)) {\n                mainPM.startTime = delegation.timestamp;\n            }\n            if (delegation.endIndex && events[delegation.endIndex]) {\n                const endTime = events[delegation.endIndex].timestamp;\n                if (!mainPM.endTime || new Date(endTime) > new Date(mainPM.endTime)) {\n                    mainPM.endTime = endTime;\n                }\n            }\n        }\n        \n        // Get orphan subagent groups from agent inference\n        const orphanGroups = this.agentInference.getOrphanGroups();\n        \n        // Create implied PM nodes for each orphan group\n        let impliedPMCounter = 1;\n        for (const [groupingKey, orphans] of orphanGroups) {\n            // Create an implied PM node for this group\n            const impliedPM = {\n                id: `pm_implied_${groupingKey}`,\n                type: 'pm',\n                name: `PM (Implied #${impliedPMCounter})`,\n                children: [],\n                events: [],\n                eventCount: 0,\n                status: 'inferred',\n                startTime: null,\n                endTime: null,\n                expanded: true,\n                isImplied: true,\n                tooltip: 'Inferred PM - Subagents started without explicit PM delegation'\n            };\n            \n            impliedPMGroups.set(groupingKey, impliedPM);\n            this.state.nodeMap.set(impliedPM.id, impliedPM);\n            impliedPMCounter++;\n            \n            // Group orphan events by agent name within this implied PM\n            const agentEventGroups = new Map();\n            \n            for (const orphan of orphans) {\n                // Find all events for this orphan agent\n                const agentEvents = [];\n                events.forEach((event, index) => {\n                    const inference = eventAgentMap.get(index);\n                    if (inference && inference.agentName === orphan.agentName) {\n                        // Check if this event is orphaned (not in any PM delegation)\n                        let isOrphan = true;\n                        for (const [_, delegation] of pmDelegations) {\n                            if (delegation.agentEvents.some(e => e.eventIndex === index)) {\n                                isOrphan = false;\n                                break;\n                            }\n                        }\n                        \n                        if (isOrphan) {\n                            agentEvents.push({\n                                eventIndex: index,\n                                event: event,\n                                inference: inference\n                            });\n                        }\n                    }\n                });\n                \n                if (agentEvents.length > 0) {\n                    if (!agentEventGroups.has(orphan.agentName)) {\n                        agentEventGroups.set(orphan.agentName, []);\n                    }\n                    agentEventGroups.get(orphan.agentName).push(...agentEvents);\n                }\n            }\n            \n            // Create subagent nodes for each agent in this implied PM group\n            for (const [agentName, agentEvents] of agentEventGroups) {\n                if (agentEvents.length === 0) continue;\n                \n                const firstEvent = agentEvents[0].event;\n                const lastEvent = agentEvents[agentEvents.length - 1].event;\n                \n                const agentNode = {\n                    id: `implied_agent_${groupingKey}_${agentName}`,\n                    type: 'subagent',\n                    name: agentName,\n                    delegationContext: 'Orphan agent - no explicit PM delegation found',\n                    children: [],\n                    events: agentEvents,\n                    eventCount: agentEvents.length,\n                    status: 'inferred',\n                    startTime: firstEvent.timestamp,\n                    endTime: lastEvent.timestamp,\n                    startIndex: agentEvents[0].eventIndex,\n                    endIndex: agentEvents[agentEvents.length - 1].eventIndex,\n                    expanded: this.expandAll,\n                    isImplied: true,\n                    tooltip: 'This agent was spawned without an explicit PM Task delegation'\n                };\n                \n                impliedPM.children.push(agentNode);\n                this.state.nodeMap.set(agentNode.id, agentNode);\n                \n                // Update implied PM stats\n                impliedPM.eventCount += agentEvents.length;\n                if (!impliedPM.startTime || new Date(firstEvent.timestamp) < new Date(impliedPM.startTime)) {\n                    impliedPM.startTime = firstEvent.timestamp;\n                }\n                if (!impliedPM.endTime || new Date(lastEvent.timestamp) > new Date(impliedPM.endTime)) {\n                    impliedPM.endTime = lastEvent.timestamp;\n                }\n            }\n        }\n        \n        // Also find completely orphaned subagent events (not caught by SubagentStart)\n        const uncategorizedOrphans = [];\n        events.forEach((event, index) => {\n            const inference = eventAgentMap.get(index);\n            if (inference && inference.type === 'subagent') {\n                // Check if this agent is already in a PM delegation or implied PM\n                let isOrphan = true;\n                \n                // Check explicit delegations\n                for (const [_, delegation] of pmDelegations) {\n                    if (delegation.agentEvents.some(e => e.eventIndex === index)) {\n                        isOrphan = false;\n                        break;\n                    }\n                }\n                \n                // Check implied PMs\n                if (isOrphan) {\n                    for (const [_, impliedPM] of impliedPMGroups) {\n                        for (const child of impliedPM.children) {\n                            if (child.events.some(e => e.eventIndex === index)) {\n                                isOrphan = false;\n                                break;\n                            }\n                        }\n                        if (!isOrphan) break;\n                    }\n                }\n                \n                if (isOrphan) {\n                    uncategorizedOrphans.push({\n                        eventIndex: index,\n                        event: event,\n                        inference: inference\n                    });\n                }\n            }\n        });\n        \n        // If there are uncategorized orphans, create a generic implied PM for them\n        if (uncategorizedOrphans.length > 0) {\n            const genericImpliedPM = {\n                id: 'pm_implied_generic',\n                type: 'pm',\n                name: 'PM (Implied - Uncategorized)',\n                children: [],\n                events: [],\n                eventCount: 0,\n                status: 'inferred',\n                startTime: null,\n                endTime: null,\n                expanded: true,\n                isImplied: true,\n                tooltip: 'Orphan agents without clear grouping'\n            };\n            \n            // Group by agent name\n            const agentGroups = new Map();\n            for (const orphan of uncategorizedOrphans) {\n                const agentName = orphan.inference.agentName;\n                if (!agentGroups.has(agentName)) {\n                    agentGroups.set(agentName, []);\n                }\n                agentGroups.get(agentName).push(orphan);\n            }\n            \n            // Create nodes for each agent\n            for (const [agentName, agentEvents] of agentGroups) {\n                const firstEvent = agentEvents[0].event;\n                const lastEvent = agentEvents[agentEvents.length - 1].event;\n                \n                const agentNode = {\n                    id: `implied_generic_${agentName}`,\n                    type: 'subagent',\n                    name: agentName,\n                    delegationContext: 'Uncategorized orphan agent',\n                    children: [],\n                    events: agentEvents,\n                    eventCount: agentEvents.length,\n                    status: 'inferred',\n                    startTime: firstEvent.timestamp,\n                    endTime: lastEvent.timestamp,\n                    startIndex: agentEvents[0].eventIndex,\n                    endIndex: agentEvents[agentEvents.length - 1].eventIndex,\n                    expanded: this.expandAll,\n                    isImplied: true\n                };\n                \n                genericImpliedPM.children.push(agentNode);\n                this.state.nodeMap.set(agentNode.id, agentNode);\n                genericImpliedPM.eventCount += agentEvents.length;\n                \n                if (!genericImpliedPM.startTime || new Date(firstEvent.timestamp) < new Date(genericImpliedPM.startTime)) {\n                    genericImpliedPM.startTime = firstEvent.timestamp;\n                }\n                if (!genericImpliedPM.endTime || new Date(lastEvent.timestamp) > new Date(genericImpliedPM.endTime)) {\n                    genericImpliedPM.endTime = lastEvent.timestamp;\n                }\n            }\n            \n            if (genericImpliedPM.children.length > 0) {\n                impliedPMGroups.set('generic', genericImpliedPM);\n                this.state.nodeMap.set(genericImpliedPM.id, genericImpliedPM);\n            }\n        }\n        \n        // Count PM's own events (not delegated)\n        let pmOwnEvents = 0;\n        events.forEach((event, index) => {\n            const inference = eventAgentMap.get(index);\n            if (inference && inference.type === 'main_agent') {\n                pmOwnEvents++;\n                mainPM.events.push({\n                    eventIndex: index,\n                    event: event,\n                    inference: inference\n                });\n            }\n        });\n        mainPM.eventCount += pmOwnEvents;\n        \n        // Update PM status based on children\n        if (mainPM.children.length > 0) {\n            const hasActive = mainPM.children.some(child => child.status === 'active');\n            mainPM.status = hasActive ? 'active' : 'completed';\n        }\n        \n        // Build final tree structure\n        const tree = {\n            roots: []\n        };\n        \n        // Only add PMs that have content\n        if (mainPM.eventCount > 0 || mainPM.children.length > 0) {\n            tree.roots.push(mainPM);\n        }\n        \n        // Add all implied PM groups that have content\n        for (const [_, impliedPM] of impliedPMGroups) {\n            if (impliedPM.children.length > 0) {\n                tree.roots.push(impliedPM);\n            }\n        }\n        \n        this.state.hierarchyTree = tree;\n        \n        console.log('Hierarchy built:', {\n            mainPM: {\n                children: mainPM.children.length,\n                events: mainPM.eventCount,\n                ownEvents: pmOwnEvents\n            },\n            impliedPMGroups: impliedPMGroups.size,\n            totalImpliedAgents: Array.from(impliedPMGroups.values())\n                .reduce((sum, pm) => sum + pm.children.length, 0)\n        });\n        \n        return tree;\n    }\n    \n    /**\n     * Extract delegation context from PM Task call\n     * @param {Object} pmCall - The PM's Task tool call event\n     * @returns {string} Description of what was delegated\n     */\n    extractDelegationContext(pmCall) {\n        if (!pmCall) return 'Unknown delegation';\n        \n        // Try to extract task description from tool parameters\n        const params = pmCall.tool_parameters || pmCall.data?.tool_parameters || {};\n        const task = params.task || params.request || params.description;\n        \n        if (task) {\n            // Truncate long tasks\n            const maxLength = 100;\n            if (task.length > maxLength) {\n                return task.substring(0, maxLength) + '...';\n            }\n            return task;\n        }\n        \n        // Fallback to tool input\n        const toolInput = pmCall.tool_input || pmCall.data?.tool_input;\n        if (toolInput && typeof toolInput === 'string') {\n            const maxLength = 100;\n            if (toolInput.length > maxLength) {\n                return toolInput.substring(0, maxLength) + '...';\n            }\n            return toolInput;\n        }\n        \n        return 'Task delegation';\n    }\n    \n    /**\n     * Render the hierarchy tree to HTML\n     * @param {Object} filters - Optional filters for display\n     * @returns {string} HTML string for the hierarchy\n     */\n    render(filters = {}) {\n        const tree = this.state.hierarchyTree || this.buildHierarchy();\n        \n        if (!tree.roots || tree.roots.length === 0) {\n            return '<div class=\"agent-hierarchy-empty\">No agent activity detected</div>';\n        }\n        \n        // Apply filters if provided\n        const filteredTree = this.applyFilters(tree, filters);\n        \n        // Generate HTML\n        const html = filteredTree.roots.map(root => this.renderNode(root, 0)).join('');\n        \n        return `<div class=\"agent-hierarchy\">${html}</div>`;\n    }\n    \n    /**\n     * Render a single node and its children\n     * @param {Object} node - Node to render\n     * @param {number} level - Indentation level\n     * @returns {string} HTML string for the node\n     */\n    renderNode(node, level) {\n        const isExpanded = node.expanded || this.state.expandedNodes.has(node.id);\n        const hasChildren = node.children && node.children.length > 0;\n        const isSelected = this.state.selectedNode === node.id;\n        \n        // Icon based on node type and status\n        const icon = this.getNodeIcon(node);\n        const expandIcon = hasChildren ? (isExpanded ? '▼' : '▶') : '&nbsp;&nbsp;';\n        \n        // Status color\n        const statusClass = this.getStatusClass(node.status);\n        \n        // Add special styling for implied nodes\n        const impliedClass = node.isImplied ? 'agent-node-implied' : '';\n        const tooltipAttr = node.tooltip ? `title=\"${this.escapeHtml(node.tooltip)}\"` : '';\n        \n        // Build node HTML\n        let html = `\n            <div class=\"agent-node agent-node-level-${level} ${isSelected ? 'agent-node-selected' : ''} ${impliedClass}\" \n                 data-node-id=\"${node.id}\" ${tooltipAttr}>\n                <div class=\"agent-node-header ${statusClass}\" \n                     data-toggle-node=\"${node.id}\" style=\"cursor: pointer\">\n                    <span class=\"agent-node-expand\">${expandIcon}</span>\n                    <span class=\"agent-node-icon\">${icon}</span>\n                    <span class=\"agent-node-name\">${this.escapeHtml(node.name)}</span>\n                    <span class=\"agent-node-stats\">\n                        <span class=\"agent-event-count\">${node.eventCount} events</span>\n                        ${node.status ? `<span class=\"agent-status\">${node.status}</span>` : ''}\n                    </span>\n                </div>\n        `;\n        \n        // Add details if expanded\n        if (isExpanded && (node.delegationContext || node.startTime)) {\n            html += '<div class=\"agent-node-details\">';\n            \n            if (node.delegationContext && node.delegationContext !== 'Unknown delegation') {\n                html += `\n                    <div class=\"agent-delegation-context\">\n                        <strong>Task:</strong> ${this.escapeHtml(node.delegationContext)}\n                    </div>\n                `;\n            }\n            \n            if (node.startTime) {\n                const duration = this.calculateDuration(node.startTime, node.endTime);\n                html += `\n                    <div class=\"agent-timing\">\n                        <span class=\"agent-time-start\">${this.formatTime(node.startTime)}</span>\n                        ${duration ? `<span class=\"agent-duration\">(${duration})</span>` : ''}\n                    </div>\n                `;\n            }\n            \n            html += '</div>';\n        }\n        \n        // Render children if expanded\n        if (isExpanded && hasChildren) {\n            html += '<div class=\"agent-node-children\">';\n            html += node.children.map(child => this.renderNode(child, level + 1)).join('');\n            html += '</div>';\n        }\n        \n        html += '</div>';\n        \n        return html;\n    }\n    \n    /**\n     * Get icon for node based on type and status\n     * @param {Object} node - Node to get icon for\n     * @returns {string} Icon HTML/emoji\n     */\n    getNodeIcon(node) {\n        if (node.type === 'pm') {\n            return node.isImplied ? '🔍' : '👔';\n        }\n        \n        // Map agent names to icons\n        const agentIcons = {\n            'Engineer Agent': '🔧',\n            'Research Agent': '🔍',\n            'QA Agent': '✅',\n            'Documentation Agent': '📝',\n            'Security Agent': '🔒',\n            'Ops Agent': '⚙️',\n            'Version Control Agent': '📦',\n            'Data Engineer Agent': '💾',\n            'Test Integration Agent': '🧪'\n        };\n        \n        return agentIcons[node.name] || '🤖';\n    }\n    \n    /**\n     * Get status class for styling\n     * @param {string} status - Node status\n     * @returns {string} CSS class name\n     */\n    getStatusClass(status) {\n        switch (status) {\n            case 'active':\n                return 'agent-status-active';\n            case 'completed':\n                return 'agent-status-completed';\n            case 'pending':\n                return 'agent-status-pending';\n            case 'inferred':\n                return 'agent-status-inferred';\n            default:\n                return 'agent-status-unknown';\n        }\n    }\n    \n    /**\n     * Toggle node expansion\n     * @param {string} nodeId - ID of node to toggle\n     */\n    toggleNode(nodeId) {\n        const node = this.state.nodeMap.get(nodeId);\n        if (!node) return;\n        \n        if (this.state.expandedNodes.has(nodeId)) {\n            this.state.expandedNodes.delete(nodeId);\n            node.expanded = false;\n        } else {\n            this.state.expandedNodes.add(nodeId);\n            node.expanded = true;\n        }\n        \n        // Trigger re-render\n        if (window.dashboard) {\n            window.dashboard.renderCurrentTab();\n        }\n    }\n    \n    /**\n     * Select a node\n     * @param {string} nodeId - ID of node to select\n     */\n    selectNode(nodeId) {\n        this.state.selectedNode = nodeId;\n        const node = this.state.nodeMap.get(nodeId);\n        \n        if (node) {\n            // Dispatch event for other components to react\n            const event = new CustomEvent('agentNodeSelected', {\n                detail: { node: node }\n            });\n            document.dispatchEvent(event);\n        }\n    }\n    \n    /**\n     * Apply filters to the tree\n     * @param {Object} tree - Tree to filter\n     * @param {Object} filters - Filter criteria\n     * @returns {Object} Filtered tree\n     */\n    applyFilters(tree, filters) {\n        if (!filters || Object.keys(filters).length === 0) {\n            return tree;\n        }\n        \n        // Clone tree structure for filtering\n        const filteredTree = {\n            roots: []\n        };\n        \n        for (const root of tree.roots) {\n            const filteredRoot = this.filterNode(root, filters);\n            if (filteredRoot) {\n                filteredTree.roots.push(filteredRoot);\n            }\n        }\n        \n        return filteredTree;\n    }\n    \n    /**\n     * Filter a single node and its children\n     * @param {Object} node - Node to filter\n     * @param {Object} filters - Filter criteria\n     * @returns {Object|null} Filtered node or null if filtered out\n     */\n    filterNode(node, filters) {\n        // Check if node matches filters\n        let matches = true;\n        \n        if (filters.searchText) {\n            const searchLower = filters.searchText.toLowerCase();\n            matches = matches && (\n                node.name.toLowerCase().includes(searchLower) ||\n                (node.delegationContext && node.delegationContext.toLowerCase().includes(searchLower))\n            );\n        }\n        \n        if (filters.agentType) {\n            matches = matches && node.name.includes(filters.agentType);\n        }\n        \n        if (filters.status) {\n            matches = matches && node.status === filters.status;\n        }\n        \n        // Filter children recursively\n        let filteredChildren = [];\n        if (node.children) {\n            for (const child of node.children) {\n                const filteredChild = this.filterNode(child, filters);\n                if (filteredChild) {\n                    filteredChildren.push(filteredChild);\n                }\n            }\n        }\n        \n        // Include node if it matches or has matching children\n        if (matches || filteredChildren.length > 0) {\n            return {\n                ...node,\n                children: filteredChildren\n            };\n        }\n        \n        return null;\n    }\n    \n    /**\n     * Format timestamp for display\n     * @param {string} timestamp - ISO timestamp\n     * @returns {string} Formatted time\n     */\n    formatTime(timestamp) {\n        if (!timestamp) return '';\n        const date = new Date(timestamp);\n        return date.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: false\n        });\n    }\n    \n    /**\n     * Calculate duration between timestamps\n     * @param {string} start - Start timestamp\n     * @param {string} end - End timestamp\n     * @returns {string} Formatted duration\n     */\n    calculateDuration(start, end) {\n        if (!start || !end) return '';\n        \n        const startTime = new Date(start).getTime();\n        const endTime = new Date(end).getTime();\n        const duration = endTime - startTime;\n        \n        if (duration < 1000) {\n            return `${duration}ms`;\n        } else if (duration < 60000) {\n            return `${(duration / 1000).toFixed(1)}s`;\n        } else {\n            const minutes = Math.floor(duration / 60000);\n            const seconds = Math.floor((duration % 60000) / 1000);\n            return `${minutes}m ${seconds}s`;\n        }\n    }\n    \n    /**\n     * Escape HTML for safe rendering\n     * @param {string} text - Text to escape\n     * @returns {string} Escaped text\n     */\n    escapeHtml(text) {\n        if (!text) return '';\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n    \n    /**\n     * Update hierarchy when new events arrive\n     * @param {Array} events - New events\n     */\n    updateWithNewEvents(events) {\n        // Rebuild hierarchy with new events\n        this.buildHierarchy();\n    }\n    \n    /**\n     * Clear the hierarchy\n     */\n    clear() {\n        this.state.hierarchyTree = null;\n        this.state.nodeMap.clear();\n        this.state.expandedNodes.clear();\n        this.state.selectedNode = null;\n    }\n    \n    /**\n     * Expand all nodes\n     */\n    expandAllNodes() {\n        for (const [nodeId, node] of this.state.nodeMap) {\n            this.state.expandedNodes.add(nodeId);\n            node.expanded = true;\n        }\n        this.expandAll = true;\n    }\n    \n    /**\n     * Collapse all nodes\n     */\n    collapseAllNodes() {\n        this.state.expandedNodes.clear();\n        for (const [nodeId, node] of this.state.nodeMap) {\n            node.expanded = false;\n        }\n        this.expandAll = false;\n    }\n}\n\n// ES6 Module export\nexport { AgentHierarchy };\nexport default AgentHierarchy;","/**\n * Build Tracker Component\n * \n * WHY: Displays and manages version/build information for both MPM and Monitor UI,\n * providing users with clear visibility of the current system versions.\n * \n * DESIGN DECISION: Implemented as a standalone component that can be easily\n * integrated into the dashboard header, with automatic updates from SocketIO.\n */\n\nexport class BuildTracker {\n    constructor() {\n        this.element = null;\n        this.buildInfo = {\n            monitor: {\n                version: \"1.0.0\",\n                build: 1,\n                formatted_build: \"0001\",\n                full_version: \"v1.0.0-0001\"\n            },\n            mpm: {\n                version: \"unknown\",\n                build: \"unknown\",\n                full_version: \"v0.0.0\"\n            }\n        };\n        \n        // Socket client reference (will be set during initialization)\n        this.socketClient = null;\n        \n        // Initialize the component\n        this.init();\n    }\n    \n    /**\n     * Initialize the build tracker component\n     */\n    async init() {\n        // Try to load version.json for dashboard version\n        await this.loadDashboardVersion();\n        \n        this.createElements();\n        this.setupEventListeners();\n    }\n    \n    /**\n     * Load dashboard version from version.json if available\n     * \n     * WHY: Attempts to load the actual dashboard version from the \n     * version.json file created by the version management script.\n     * Falls back to defaults if file is not available.\n     */\n    async loadDashboardVersion() {\n        try {\n            // Try to fetch version.json from the dashboard root\n            const response = await fetch('/version.json');\n            if (response.ok) {\n                const versionData = await response.json();\n                \n                // Update monitor build info with loaded data\n                this.buildInfo.monitor = {\n                    version: versionData.version || \"1.0.0\",\n                    build: versionData.build || 1,\n                    formatted_build: versionData.formatted_build || \"0001\",\n                    full_version: versionData.full_version || \"v1.0.0-0001\"\n                };\n                \n                // Dashboard version loaded successfully\n            }\n        } catch (error) {\n            // Silently fall back to defaults if version.json not available\n        }\n    }\n    \n    /**\n     * Create the DOM elements for version display\n     * \n     * WHY: Creates a clean, unobtrusive version display that fits\n     * seamlessly into the dashboard header.\n     */\n    createElements() {\n        // Create container element\n        this.element = document.createElement('div');\n        this.element.className = 'version-display';\n        this.element.id = 'version-display';\n        \n        // Create MPM version element\n        const mpmVersion = document.createElement('span');\n        mpmVersion.className = 'version-item mpm-version';\n        mpmVersion.id = 'mpm-version';\n        mpmVersion.innerHTML = `\n            <span class=\"version-label\">MPM</span>\n            <span class=\"version-value\">v0.0.0</span>\n        `;\n        \n        // Create separator\n        const separator = document.createElement('span');\n        separator.className = 'version-separator';\n        separator.textContent = '|';\n        \n        // Create Monitor version element\n        const monitorVersion = document.createElement('span');\n        monitorVersion.className = 'version-item monitor-version';\n        monitorVersion.id = 'monitor-version';\n        monitorVersion.innerHTML = `\n            <span class=\"version-label\">Monitor</span>\n            <span class=\"version-value\">v1.0.0-0001</span>\n        `;\n        \n        // Assemble elements\n        this.element.appendChild(mpmVersion);\n        this.element.appendChild(separator);\n        this.element.appendChild(monitorVersion);\n        \n        // Add tooltip for detailed info\n        this.element.title = 'Click for detailed version information';\n    }\n    \n    /**\n     * Set the socket client for receiving updates\n     * \n     * @param {Object} socketClient - The Socket.IO client instance\n     */\n    setSocketClient(socketClient) {\n        this.socketClient = socketClient;\n        \n        // Listen for build info updates\n        if (this.socketClient && this.socketClient.socket) {\n            // Listen for welcome message with build info\n            this.socketClient.socket.on('welcome', (eventData) => {\n                // Handle both old format (direct) and new schema (nested in data)\n                const buildInfo = eventData.build_info || \n                                 (eventData.data && eventData.data.build_info);\n                if (buildInfo) {\n                    this.updateBuildInfo(buildInfo);\n                }\n            });\n            \n            // Listen for status updates with build info\n            this.socketClient.socket.on('status', (eventData) => {\n                // Handle both old format (direct) and new schema (nested in data)\n                const buildInfo = eventData.build_info || \n                                 (eventData.data && eventData.data.build_info);\n                if (buildInfo) {\n                    this.updateBuildInfo(buildInfo);\n                }\n            });\n            \n            // Listen for explicit build info updates\n            this.socketClient.socket.on('build_info', (data) => {\n                this.updateBuildInfo(data);\n            });\n        }\n    }\n    \n    /**\n     * Update the build information\n     * \n     * @param {Object} buildInfo - Build information from server\n     */\n    updateBuildInfo(buildInfo) {\n        // Store the build info\n        this.buildInfo = buildInfo;\n        \n        // Update display\n        this.updateDisplay();\n    }\n    \n    /**\n     * Update the version display elements\n     * \n     * WHY: Keeps the UI in sync with the latest version information\n     * received from the server.\n     */\n    updateDisplay() {\n        // Update MPM version\n        const mpmElement = this.element.querySelector('.mpm-version .version-value');\n        if (mpmElement && this.buildInfo.mpm) {\n            const mpmVersion = this.buildInfo.mpm.full_version || \n                              `v${this.buildInfo.mpm.version}`;\n            mpmElement.textContent = mpmVersion;\n            \n            // Add build number to tooltip if available\n            if (this.buildInfo.mpm.build && this.buildInfo.mpm.build !== \"unknown\") {\n                mpmElement.parentElement.title = `MPM Build: ${this.buildInfo.mpm.build}`;\n            }\n        }\n        \n        // Update Monitor version\n        const monitorElement = this.element.querySelector('.monitor-version .version-value');\n        if (monitorElement && this.buildInfo.monitor) {\n            const monitorVersion = this.buildInfo.monitor.full_version || \n                                  `v${this.buildInfo.monitor.version}-${this.buildInfo.monitor.formatted_build}`;\n            monitorElement.textContent = monitorVersion;\n            \n            // Add last updated to tooltip if available\n            if (this.buildInfo.monitor.last_updated) {\n                const lastUpdated = new Date(this.buildInfo.monitor.last_updated).toLocaleString();\n                monitorElement.parentElement.title = `Monitor Build: ${this.buildInfo.monitor.formatted_build}\\nLast Updated: ${lastUpdated}`;\n            }\n        }\n    }\n    \n    /**\n     * Setup event listeners\n     * \n     * WHY: Allows users to interact with the version display for\n     * additional information or actions.\n     */\n    setupEventListeners() {\n        // Click handler for showing detailed version info\n        this.element.addEventListener('click', () => {\n            this.showDetailedInfo();\n        });\n    }\n    \n    /**\n     * Show detailed version information in a modal or alert\n     * \n     * WHY: Provides power users with detailed build and version\n     * information for debugging and support purposes.\n     */\n    showDetailedInfo() {\n        const info = [];\n        \n        // MPM information\n        if (this.buildInfo.mpm) {\n            info.push('=== MPM Framework ===');\n            info.push(`Version: ${this.buildInfo.mpm.version}`);\n            if (this.buildInfo.mpm.build && this.buildInfo.mpm.build !== \"unknown\") {\n                info.push(`Build: ${this.buildInfo.mpm.build}`);\n            }\n            info.push(`Full: ${this.buildInfo.mpm.full_version}`);\n        }\n        \n        info.push('');\n        \n        // Monitor information\n        if (this.buildInfo.monitor) {\n            info.push('=== Monitor UI ===');\n            info.push(`Version: ${this.buildInfo.monitor.version}`);\n            info.push(`Build: ${this.buildInfo.monitor.formatted_build} (${this.buildInfo.monitor.build})`);\n            info.push(`Full: ${this.buildInfo.monitor.full_version}`);\n            if (this.buildInfo.monitor.last_updated) {\n                const lastUpdated = new Date(this.buildInfo.monitor.last_updated).toLocaleString();\n                info.push(`Updated: ${lastUpdated}`);\n            }\n        }\n        \n        // Version information compiled\n        \n        // Create a simple modal-like display\n        const modal = document.createElement('div');\n        modal.className = 'version-modal';\n        modal.innerHTML = `\n            <div class=\"version-modal-content\">\n                <h3>Version Information</h3>\n                <pre>${info.join('\\n')}</pre>\n                <button onclick=\"this.parentElement.parentElement.remove()\">Close</button>\n            </div>\n        `;\n        \n        // Add to body\n        document.body.appendChild(modal);\n        \n        // Auto-remove after 10 seconds\n        setTimeout(() => {\n            modal.remove();\n        }, 10000);\n    }\n    \n    /**\n     * Mount the component to a parent element\n     * \n     * @param {HTMLElement|string} parent - Parent element or selector\n     */\n    mount(parent) {\n        const parentElement = typeof parent === 'string' \n            ? document.querySelector(parent) \n            : parent;\n        \n        if (!this.element) {\n            return;\n        }\n        \n        if (!parentElement) {\n            return;\n        }\n        \n        // Check if already mounted to prevent duplicates\n        if (this.element.parentNode === parentElement) {\n            return;\n        }\n        \n        parentElement.appendChild(this.element);\n    }\n    \n    /**\n     * Get the component's DOM element\n     * \n     * @returns {HTMLElement} The component's root element\n     */\n    getElement() {\n        return this.element;\n    }\n    \n    /**\n     * Destroy the component and clean up\n     */\n    destroy() {\n        if (this.element && this.element.parentNode) {\n            this.element.parentNode.removeChild(this.element);\n        }\n        \n        // Clean up socket listeners\n        if (this.socketClient && this.socketClient.socket) {\n            this.socketClient.socket.off('welcome');\n            this.socketClient.socket.off('status');\n            this.socketClient.socket.off('build_info');\n        }\n        \n        this.element = null;\n        this.socketClient = null;\n    }\n}","/**\n * Refactored Dashboard Coordinator\n *\n * Main coordinator class that orchestrates all dashboard modules while maintaining\n * backward compatibility with the original dashboard interface.\n *\n * WHY: This refactored version breaks down the monolithic 4,133-line dashboard\n * into manageable, focused modules while preserving all existing functionality.\n * Each module handles a specific concern, improving maintainability and testability.\n *\n * DESIGN DECISION: Acts as a thin coordinator layer that initializes modules,\n * manages inter-module communication through events, and provides backward\n * compatibility for existing code that depends on the dashboard interface.\n */\n\n// ES6 Module imports\nimport { SocketManager } from '@components/socket-manager.js';\nimport { EventViewer } from '@components/event-viewer.js';\nimport { ModuleViewer } from '@components/module-viewer.js';\nimport { SessionManager } from '@components/session-manager.js';\nimport { AgentInference } from '@components/agent-inference.js';\nimport { AgentHierarchy } from '@components/agent-hierarchy.js';\nimport { UIStateManager } from '@components/ui-state-manager.js';\nimport { EventProcessor } from '@components/event-processor.js';\nimport { ExportManager } from '@components/export-manager.js';\nimport { WorkingDirectoryManager } from '@components/working-directory.js';\nimport { FileToolTracker } from '@components/file-tool-tracker.js';\nimport { BuildTracker } from '@components/build-tracker.js';\nimport { UnifiedDataViewer } from '@components/unified-data-viewer.js';\nclass Dashboard {\n    constructor() {\n        // Core components (existing)\n        this.eventViewer = null;\n        this.moduleViewer = null;\n        this.sessionManager = null;\n        \n        // Retry prevention\n        this.activityTreeRetryCount = 0;\n        this.maxRetryAttempts = 10;\n\n        // New modular components\n        this.socketManager = null;\n        this.agentInference = null;\n        this.agentHierarchy = null;\n        this.uiStateManager = null;\n        this.eventProcessor = null;\n        this.exportManager = null;\n        this.workingDirectoryManager = null;\n        this.fileToolTracker = null;\n        this.buildTracker = null;\n\n        // Initialize the dashboard\n        this.init();\n    }\n\n    /**\n     * Initialize the dashboard and all modules\n     */\n    init() {\n        console.log('Initializing refactored Claude MPM Dashboard...');\n\n        try {\n            // Initialize modules in dependency order\n            this.initializeSocketManager();\n            this.initializeCoreComponents();\n            this.initializeBuildTracker();\n            this.initializeAgentInference();\n            this.initializeAgentHierarchy();\n            this.initializeUIStateManager();\n            this.initializeWorkingDirectoryManager();\n            this.initializeFileToolTracker();\n            this.initializeEventProcessor();\n            this.initializeExportManager();\n\n            // Set up inter-module communication\n            this.setupModuleInteractions();\n\n            // Initialize from URL parameters\n            this.initializeFromURL();\n\n            console.log('Claude MPM Dashboard initialized successfully');\n        } catch (error) {\n            console.error('Error during dashboard initialization:', error);\n            // Re-throw to be caught by DOMContentLoaded handler\n            throw error;\n        }\n    }\n    \n    /**\n     * Validate that all critical components are initialized\n     * WHY: Ensures dashboard is in a valid state after initialization\n     */\n    validateInitialization() {\n        const criticalComponents = [\n            { name: 'socketManager', component: this.socketManager },\n            { name: 'eventViewer', component: this.eventViewer },\n            { name: 'agentHierarchy', component: this.agentHierarchy }\n        ];\n        \n        const missing = criticalComponents.filter(c => !c.component);\n        if (missing.length > 0) {\n            console.warn('Missing critical components:', missing.map(c => c.name));\n        } else {\n            console.log('All critical components initialized');\n        }\n    }\n\n    /**\n     * Post-initialization setup that requires window.dashboard to be set\n     * WHY: Some components need to reference window.dashboard but it's not available\n     * during constructor execution. This method is called after the Dashboard instance\n     * is assigned to window.dashboard, ensuring proper initialization order.\n     * \n     * DESIGN DECISION: Separate post-init phase prevents \"cannot read property of undefined\"\n     * errors when components try to access window.dashboard during construction.\n     */\n    postInit() {\n        try {\n            // Set global reference for agent hierarchy after dashboard is available\n            if (this.agentHierarchy) {\n                window.dashboard.agentHierarchy = this.agentHierarchy;\n                console.log('Agent hierarchy global reference set');\n            }\n            \n            // Initialize any other components that need window.dashboard\n            this.validateInitialization();\n        } catch (error) {\n            console.error('Error in dashboard postInit:', error);\n            // Continue execution - non-critical error\n        }\n    }\n\n    /**\n     * Initialize socket manager\n     */\n    initializeSocketManager() {\n        this.socketManager = new SocketManager();\n\n        // Set up connection controls\n        this.socketManager.setupConnectionControls();\n\n        // Backward compatibility\n        this.socketClient = this.socketManager.getSocketClient();\n        window.socketClient = this.socketClient;\n    }\n\n    /**\n     * Initialize core existing components\n     */\n    initializeCoreComponents() {\n        // Initialize existing components with socket client\n        this.eventViewer = new EventViewer('events-list', this.socketClient);\n        this.moduleViewer = new ModuleViewer();\n        this.sessionManager = new SessionManager(this.socketClient);\n\n        // Backward compatibility\n        window.eventViewer = this.eventViewer;\n        window.moduleViewer = this.moduleViewer;\n        window.sessionManager = this.sessionManager;\n    }\n\n    /**\n     * Initialize build tracker\n     */\n    initializeBuildTracker() {\n        this.buildTracker = new BuildTracker();\n        \n        // Set the socket client for receiving updates\n        this.buildTracker.setSocketClient(this.socketClient);\n        \n        // Mount to header with retry logic for DOM readiness\n        const mountBuildTracker = () => {\n            const headerTitle = document.querySelector('.header-title');\n            if (headerTitle) {\n                // Insert after the title and status badge\n                this.buildTracker.mount(headerTitle);\n                console.log('BuildTracker mounted successfully');\n            } else {\n                console.warn('Header-title element not found for build tracker, will retry');\n                // Retry after a short delay if DOM is still being constructed\n                setTimeout(mountBuildTracker, 100);\n            }\n        };\n        \n        // Try to mount immediately, with retry logic if needed\n        mountBuildTracker();\n        \n        // Make available globally for debugging\n        window.buildTracker = this.buildTracker;\n    }\n\n    /**\n     * Initialize agent inference system\n     */\n    initializeAgentInference() {\n        this.agentInference = new AgentInference(this.eventViewer);\n        this.agentInference.initialize();\n    }\n    \n    /**\n     * Initialize agent hierarchy component\n     * WHY: Creates the agent hierarchy visualization component but defers global\n     * reference setting to postInit() to avoid initialization order issues.\n     */\n    initializeAgentHierarchy() {\n        try {\n            this.agentHierarchy = new AgentHierarchy(this.agentInference, this.eventViewer);\n            // Global reference will be set in postInit() after window.dashboard exists\n            console.log('Agent hierarchy component created');\n        } catch (error) {\n            console.error('Failed to initialize agent hierarchy:', error);\n            // Create a stub to prevent further errors\n            this.agentHierarchy = {\n                render: () => '<div class=\"error\">Agent hierarchy unavailable</div>',\n                expandAllNodes: () => {},\n                collapseAllNodes: () => {},\n                updateWithNewEvents: () => {}\n            };\n        }\n    }\n\n    /**\n     * Initialize UI state manager\n     */\n    initializeUIStateManager() {\n        this.uiStateManager = new UIStateManager();\n        this.setupTabFilters(); // Set up filters after UI state manager\n    }\n\n    /**\n     * Initialize working directory manager\n     */\n    initializeWorkingDirectoryManager() {\n        this.workingDirectoryManager = new WorkingDirectoryManager(this.socketManager);\n    }\n\n    /**\n     * Initialize file-tool tracker\n     */\n    initializeFileToolTracker() {\n        this.fileToolTracker = new FileToolTracker(this.agentInference, this.workingDirectoryManager);\n    }\n\n    /**\n     * Initialize event processor\n     */\n    initializeEventProcessor() {\n        this.eventProcessor = new EventProcessor(this.eventViewer, this.agentInference);\n    }\n\n\n    /**\n     * Initialize export manager\n     */\n    initializeExportManager() {\n        this.exportManager = new ExportManager(this.eventViewer);\n    }\n\n    /**\n     * Set up interactions between modules\n     */\n    setupModuleInteractions() {\n        // Socket events to update file operations and tool calls\n        this.socketManager.onEventUpdate((events) => {\n            this.fileToolTracker.updateFileOperations(events);\n            this.fileToolTracker.updateToolCalls(events);\n\n            // Process agent inference for new events\n            this.agentInference.processAgentInference();\n            \n            // Update agent hierarchy with new events\n            this.agentHierarchy.updateWithNewEvents(events);\n\n            // Auto-scroll events list if on events tab\n            if (this.uiStateManager.getCurrentTab() === 'events') {\n                this.exportManager.scrollListToBottom('events-list');\n            }\n\n            // Re-render current tab\n            this.renderCurrentTab();\n        });\n\n        // Connection status changes\n        this.socketManager.onConnectionStatusChange((status, type) => {\n            // Set up git branch listener when connected\n            if (type === 'connected') {\n                this.workingDirectoryManager.updateGitBranch(\n                    this.workingDirectoryManager.getCurrentWorkingDir()\n                );\n            }\n        });\n\n        // Tab changes\n        document.addEventListener('tabChanged', (e) => {\n            this.renderCurrentTab();\n            this.uiStateManager.updateTabNavigationItems();\n        });\n\n        // Events clearing\n        document.addEventListener('eventsClearing', () => {\n            this.fileToolTracker.clear();\n            this.agentInference.initialize();\n        });\n\n        // Card details requests\n        document.addEventListener('showCardDetails', (e) => {\n            this.showCardDetails(e.detail.tabName, e.detail.index);\n        });\n\n        // Session changes\n        document.addEventListener('sessionFilterChanged', (e) => {\n            console.log('Session filter changed, re-rendering current tab:', this.uiStateManager.getCurrentTab());\n            this.renderCurrentTab();\n        });\n    }\n\n    /**\n     * Set up tab filters\n     */\n    setupTabFilters() {\n        // Agents tab filters\n        const agentsSearchInput = document.getElementById('agents-search-input');\n        const agentsTypeFilter = document.getElementById('agents-type-filter');\n\n        if (agentsSearchInput) {\n            agentsSearchInput.addEventListener('input', () => {\n                if (this.uiStateManager.getCurrentTab() === 'agents') this.renderCurrentTab();\n            });\n        }\n\n        if (agentsTypeFilter) {\n            agentsTypeFilter.addEventListener('change', () => {\n                if (this.uiStateManager.getCurrentTab() === 'agents') this.renderCurrentTab();\n            });\n        }\n\n        // Tools tab filters\n        const toolsSearchInput = document.getElementById('tools-search-input');\n        const toolsTypeFilter = document.getElementById('tools-type-filter');\n\n        if (toolsSearchInput) {\n            toolsSearchInput.addEventListener('input', () => {\n                if (this.uiStateManager.getCurrentTab() === 'tools') this.renderCurrentTab();\n            });\n        }\n\n        if (toolsTypeFilter) {\n            toolsTypeFilter.addEventListener('change', () => {\n                if (this.uiStateManager.getCurrentTab() === 'tools') this.renderCurrentTab();\n            });\n        }\n\n        // Files tab filters\n        const filesSearchInput = document.getElementById('files-search-input');\n        const filesTypeFilter = document.getElementById('files-type-filter');\n\n        if (filesSearchInput) {\n            filesSearchInput.addEventListener('input', () => {\n                if (this.uiStateManager.getCurrentTab() === 'files') this.renderCurrentTab();\n            });\n        }\n\n        if (filesTypeFilter) {\n            filesTypeFilter.addEventListener('change', () => {\n                if (this.uiStateManager.getCurrentTab() === 'files') this.renderCurrentTab();\n            });\n        }\n    }\n\n    /**\n     * Initialize from URL parameters\n     */\n    initializeFromURL() {\n        const params = new URLSearchParams(window.location.search);\n        this.socketManager.initializeFromURL(params);\n    }\n\n    /**\n     * Render current tab content\n     */\n    renderCurrentTab() {\n        const currentTab = this.uiStateManager.getCurrentTab();\n\n        switch (currentTab) {\n            case 'events':\n                // Events tab is handled by EventViewer\n                break;\n            case 'activity':\n                // Trigger Activity tab rendering through the component\n                // Check if ActivityTree class is available (from built module)\n                if (window.ActivityTree && typeof window.ActivityTree === 'function') {\n                    // Reset retry count on successful load\n                    this.activityTreeRetryCount = 0;\n                    \n                    // Create or get instance\n                    if (!window.activityTreeInstance) {\n                        console.log('Creating new ActivityTree instance...');\n                        window.activityTreeInstance = new window.ActivityTree();\n                    }\n                    \n                    // Initialize if needed and render\n                    if (window.activityTreeInstance) {\n                        if (!window.activityTreeInstance.initialized) {\n                            console.log('Initializing ActivityTree...');\n                            window.activityTreeInstance.initialize();\n                        }\n                        \n                        if (typeof window.activityTreeInstance.renderWhenVisible === 'function') {\n                            console.log('Dashboard triggering activity tree render...');\n                            window.activityTreeInstance.renderWhenVisible();\n                        }\n                        \n                        // Force show to ensure the tree is visible\n                        if (typeof window.activityTreeInstance.forceShow === 'function') {\n                            console.log('Dashboard forcing activity tree to show...');\n                            window.activityTreeInstance.forceShow();\n                        }\n                    }\n                } else if (window.activityTree && typeof window.activityTree === 'function') {\n                    // Fallback to legacy approach if available\n                    const activityTreeInstance = window.activityTree();\n                    if (activityTreeInstance) {\n                        if (typeof activityTreeInstance.renderWhenVisible === 'function') {\n                            console.log('Dashboard triggering activity tree render (legacy)...');\n                            activityTreeInstance.renderWhenVisible();\n                        }\n                        if (typeof activityTreeInstance.forceShow === 'function') {\n                            console.log('Dashboard forcing activity tree to show (legacy)...');\n                            activityTreeInstance.forceShow();\n                        }\n                    }\n                } else {\n                    // Module not loaded yet, retry after a delay (with retry limit)\n                    if (this.activityTreeRetryCount < this.maxRetryAttempts) {\n                        this.activityTreeRetryCount++;\n                        console.warn(`Activity tree component not available, retrying in 100ms... (attempt ${this.activityTreeRetryCount}/${this.maxRetryAttempts})`);\n                        setTimeout(() => {\n                            if (this.uiStateManager.getCurrentTab() === 'activity') {\n                                this.renderCurrentTab();\n                            }\n                        }, 100);\n                    } else {\n                        console.error('Maximum retry attempts reached for ActivityTree initialization. Giving up.');\n                        const activityContainer = document.getElementById('activity-tree-container') || document.getElementById('activity-tree');\n                        if (activityContainer) {\n                            activityContainer.innerHTML = '<div class=\"error-message\">⚠️ Activity Tree failed to load. Please refresh the page.</div>';\n                        }\n                    }\n                }\n                break;\n            case 'agents':\n                this.renderAgents();\n                break;\n            case 'tools':\n                this.renderTools();\n                break;\n            case 'files':\n                this.renderFiles();\n                break;\n        }\n\n        // Update selection UI if we have a selected card\n        const selectedCard = this.uiStateManager.getSelectedCard();\n        if (selectedCard.tab === currentTab) {\n            this.uiStateManager.updateCardSelectionUI();\n        }\n\n        // Update unified selection UI to maintain consistency\n        this.uiStateManager.updateUnifiedSelectionUI();\n    }\n\n    /**\n     * Render agents tab with flat chronological view\n     */\n    renderAgents() {\n        const agentsList = document.getElementById('agents-list');\n        if (!agentsList) return;\n        \n        // Get filter values\n        const searchText = document.getElementById('agents-search-input')?.value || '';\n        const agentType = document.getElementById('agents-type-filter')?.value || '';\n        \n        // Generate flat HTML\n        const flatHTML = this.renderAgentsFlat(searchText, agentType);\n        agentsList.innerHTML = flatHTML;\n        \n        // Remove hierarchy controls if they exist\n        this.removeHierarchyControls();\n        \n        // Update filter dropdowns with available agent types\n        const uniqueInstances = this.agentInference.getUniqueAgentInstances();\n        this.updateAgentsFilterDropdowns(uniqueInstances);\n    }\n    \n    /**\n     * Remove hierarchy control buttons (flat view doesn't need them)\n     */\n    removeHierarchyControls() {\n        const existingControls = document.getElementById('hierarchy-controls');\n        if (existingControls) {\n            existingControls.remove();\n        }\n    }\n    \n    /**\n     * Render agents as a flat chronological list\n     * @param {string} searchText - Search filter\n     * @param {string} agentType - Agent type filter \n     * @returns {string} HTML for flat agent list\n     */\n    renderAgentsFlat(searchText, agentType) {\n        const events = this.eventViewer.events;\n        if (!events || events.length === 0) {\n            return '<div class=\"no-events\">No agent events found...</div>';\n        }\n        \n        // Process agent inference to get agent mappings\n        this.agentInference.processAgentInference();\n        const eventAgentMap = this.agentInference.getEventAgentMap();\n        \n        // Collect all agent events with metadata\n        const agentEvents = [];\n        events.forEach((event, index) => {\n            const inference = eventAgentMap.get(index);\n            if (inference && (inference.type === 'subagent' || inference.type === 'main_agent')) {\n                // Apply filters\n                let includeEvent = true;\n                \n                if (searchText) {\n                    const searchLower = searchText.toLowerCase();\n                    includeEvent = includeEvent && (\n                        inference.agentName.toLowerCase().includes(searchLower) ||\n                        (event.tool_name && event.tool_name.toLowerCase().includes(searchLower)) ||\n                        (event.data && JSON.stringify(event.data).toLowerCase().includes(searchLower))\n                    );\n                }\n                \n                if (agentType) {\n                    includeEvent = includeEvent && inference.agentName.includes(agentType);\n                }\n                \n                if (includeEvent) {\n                    agentEvents.push({\n                        event,\n                        inference,\n                        index,\n                        timestamp: new Date(event.timestamp)\n                    });\n                }\n            }\n        });\n        \n        if (agentEvents.length === 0) {\n            return '<div class=\"no-events\">No agent events match the current filters...</div>';\n        }\n        \n        // Generate HTML for each event\n        const html = agentEvents.map((item, listIndex) => {\n            const { event, inference, index, timestamp } = item;\n            \n            // Determine action/tool\n            let action = 'Activity';\n            let actionIcon = '📋';\n            let details = '';\n            \n            if (event.event_type === 'SubagentStart') {\n                action = 'Started';\n                actionIcon = '🟢';\n                details = 'Agent session began';\n            } else if (event.event_type === 'SubagentStop') {\n                action = 'Stopped';\n                actionIcon = '🔴';\n                details = 'Agent session ended';\n            } else if (event.tool_name) {\n                action = `Tool: ${event.tool_name}`;\n                actionIcon = this.getToolIcon(event.tool_name);\n                \n                // Add tool parameters as details\n                if (event.data && event.data.tool_parameters) {\n                    const params = event.data.tool_parameters;\n                    if (params.file_path) {\n                        details = params.file_path;\n                    } else if (params.command) {\n                        details = params.command.substring(0, 50) + (params.command.length > 50 ? '...' : '');\n                    } else if (params.pattern) {\n                        details = `pattern=\"${params.pattern}\"`;\n                    } else if (params.query) {\n                        details = `query=\"${params.query}\"`;\n                    }\n                }\n            }\n            \n            // Status based on event type\n            let status = 'completed';\n            if (event.event_type === 'SubagentStart') {\n                status = 'active';\n            } else if (event.data && event.data.error) {\n                status = 'error';\n            }\n            \n            return `\n                <div class=\"agent-event-item\" data-index=\"${listIndex}\" onclick=\"window.dashboard.showCardDetails('agents', ${index})\">\n                    <div class=\"agent-event-header\">\n                        <div class=\"agent-event-time\">${this.formatTimestamp(timestamp)}</div>\n                        <div class=\"agent-event-agent\">\n                            ${this.getAgentIcon(inference.agentName)} ${inference.agentName}\n                        </div>\n                        <div class=\"agent-event-action\">\n                            ${actionIcon} ${action}\n                        </div>\n                        <div class=\"agent-event-status status-${status}\">\n                            ${this.getStatusIcon(status)}\n                        </div>\n                    </div>\n                    ${details ? `<div class=\"agent-event-details\">${this.escapeHtml(details)}</div>` : ''}\n                </div>\n            `;\n        }).join('');\n        \n        return `<div class=\"agent-events-flat\">${html}</div>`;\n    }\n    \n    /**\n     * Get icon for agent type\n     */\n    getAgentIcon(agentName) {\n        const agentIcons = {\n            'PM': '🎯',\n            'Engineer Agent': '🔧',\n            'Research Agent': '🔍', \n            'QA Agent': '✅',\n            'Documentation Agent': '📝',\n            'Security Agent': '🔒',\n            'Ops Agent': '⚙️',\n            'Version Control Agent': '📦',\n            'Data Engineer Agent': '💾',\n            'Test Integration Agent': '🧪'\n        };\n        return agentIcons[agentName] || '🤖';\n    }\n    \n    /**\n     * Get icon for tool\n     */\n    getToolIcon(toolName) {\n        const toolIcons = {\n            'Read': '📖',\n            'Write': '✏️',\n            'Edit': '📝',\n            'Bash': '💻',\n            'Grep': '🔍',\n            'Glob': '📂',\n            'LS': '📁',\n            'Task': '📋'\n        };\n        return toolIcons[toolName] || '🔧';\n    }\n    \n    /**\n     * Get icon for status\n     */\n    getStatusIcon(status) {\n        const statusIcons = {\n            'active': '🟢',\n            'completed': '✅',\n            'error': '❌',\n            'pending': '🟡'\n        };\n        return statusIcons[status] || '❓';\n    }\n    \n    /**\n     * Format timestamp for display\n     */\n    formatTimestamp(timestamp) {\n        return timestamp.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit', \n            second: '2-digit',\n            hour12: false\n        });\n    }\n    \n    /**\n     * Escape HTML for safe display\n     */\n    escapeHtml(text) {\n        if (!text) return '';\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n\n    /**\n     * Render tools tab with unique instance view (one row per unique tool call)\n     */\n    renderTools() {\n        const toolsList = document.getElementById('tools-list');\n        if (!toolsList) return;\n\n        const toolCalls = this.fileToolTracker.getToolCalls();\n        const toolCallsArray = Array.from(toolCalls.entries());\n        const uniqueToolInstances = this.eventProcessor.getUniqueToolInstances(toolCallsArray);\n        const toolHTML = this.eventProcessor.generateToolHTML(uniqueToolInstances);\n\n        toolsList.innerHTML = toolHTML;\n        this.exportManager.scrollListToBottom('tools-list');\n\n        // Update filter dropdowns\n        this.updateToolsFilterDropdowns(uniqueToolInstances);\n    }\n\n    /**\n     * Render files tab with unique instance view (one row per unique file)\n     */\n    renderFiles() {\n        const filesList = document.getElementById('files-list');\n        if (!filesList) return;\n\n        const fileOperations = this.fileToolTracker.getFileOperations();\n        const filesArray = Array.from(fileOperations.entries());\n        const uniqueFileInstances = this.eventProcessor.getUniqueFileInstances(filesArray);\n        const fileHTML = this.eventProcessor.generateFileHTML(uniqueFileInstances);\n\n        filesList.innerHTML = fileHTML;\n        this.exportManager.scrollListToBottom('files-list');\n\n        // Update filter dropdowns\n        this.updateFilesFilterDropdowns(filesArray);\n    }\n\n    /**\n     * Update agents filter dropdowns for unique instances\n     */\n    updateAgentsFilterDropdowns(uniqueInstances) {\n        const agentTypes = new Set();\n\n        // uniqueInstances is already an array of unique agent instances\n        uniqueInstances.forEach(instance => {\n            if (instance.agentName && instance.agentName !== 'Unknown') {\n                agentTypes.add(instance.agentName);\n            }\n        });\n\n        const sortedTypes = Array.from(agentTypes).filter(type => type && type.trim() !== '');\n        this.populateFilterDropdown('agents-type-filter', sortedTypes, 'All Agent Types');\n\n        // Debug log\n        if (sortedTypes.length > 0) {\n            console.log('Agent types found for filter:', sortedTypes);\n        } else {\n            console.log('No agent types found for filter. Instances:', uniqueInstances.length);\n        }\n    }\n\n    /**\n     * Update tools filter dropdowns\n     */\n    updateToolsFilterDropdowns(toolCallsArray) {\n        const toolNames = [...new Set(toolCallsArray.map(([key, toolCall]) => toolCall.tool_name))]\n            .filter(name => name);\n\n        this.populateFilterDropdown('tools-type-filter', toolNames, 'All Tools');\n    }\n\n    /**\n     * Update files filter dropdowns\n     */\n    updateFilesFilterDropdowns(filesArray) {\n        const operations = [...new Set(filesArray.flatMap(([path, data]) =>\n            data.operations.map(op => op.operation)\n        ))].filter(op => op);\n\n        this.populateFilterDropdown('files-type-filter', operations, 'All Operations');\n    }\n\n    /**\n     * Populate filter dropdown with values\n     */\n    populateFilterDropdown(selectId, values, allOption = 'All') {\n        const select = document.getElementById(selectId);\n        if (!select) return;\n\n        const currentValue = select.value;\n        const sortedValues = values.sort((a, b) => a.localeCompare(b));\n\n        // Clear existing options except the first \"All\" option\n        select.innerHTML = `<option value=\"\">${allOption}</option>`;\n\n        // Add sorted values\n        sortedValues.forEach(value => {\n            const option = document.createElement('option');\n            option.value = value;\n            option.textContent = value;\n            select.appendChild(option);\n        });\n\n        // Restore previous selection if it still exists\n        if (currentValue && sortedValues.includes(currentValue)) {\n            select.value = currentValue;\n        }\n    }\n\n    /**\n     * Show card details for specified tab and index\n     */\n    showCardDetails(tabName, index) {\n        switch (tabName) {\n            case 'events':\n                if (this.eventViewer) {\n                    this.eventViewer.showEventDetails(index);\n                }\n                break;\n            case 'agents':\n                this.showAgentDetailsByIndex(index);\n                break;\n            case 'tools':\n                this.showToolDetailsByIndex(index);\n                break;\n            case 'files':\n                this.showFileDetailsByIndex(index);\n                break;\n        }\n    }\n\n    /**\n     * Show agent details by index\n     */\n    showAgentDetailsByIndex(index) {\n        const events = this.eventProcessor.getFilteredEventsForTab('agents');\n\n        // Defensive checks\n        if (!events || !Array.isArray(events) || index < 0 || index >= events.length) {\n            console.warn('Dashboard: Invalid agent index or events array');\n            return;\n        }\n\n        const filteredSingleEvent = this.eventProcessor.applyAgentsFilters([events[index]]);\n\n        if (filteredSingleEvent.length > 0 && this.moduleViewer &&\n            typeof this.moduleViewer.showAgentEvent === 'function') {\n            const event = filteredSingleEvent[0];\n            this.moduleViewer.showAgentEvent(event, index);\n        }\n    }\n\n    /**\n     * Show agent instance details for unique instance view\n     * @param {string} instanceId - Agent instance ID\n     */\n    showAgentInstanceDetails(instanceId) {\n        const pmDelegations = this.agentInference.getPMDelegations();\n        const instance = pmDelegations.get(instanceId);\n\n        if (!instance) {\n            // Check if it's an implied delegation\n            const uniqueInstances = this.agentInference.getUniqueAgentInstances();\n            const impliedInstance = uniqueInstances.find(inst => inst.id === instanceId);\n\n            if (!impliedInstance) {\n                console.error('Agent instance not found:', instanceId);\n                return;\n            }\n\n            // For implied instances, show basic info\n            this.showImpliedAgentDetails(impliedInstance);\n            return;\n        }\n\n        // Show full PM delegation details\n        if (this.moduleViewer && typeof this.moduleViewer.showAgentInstance === 'function') {\n            this.moduleViewer.showAgentInstance(instance);\n        } else {\n            // Fallback: show in console or basic modal\n            console.log('Agent Instance Details:', {\n                id: instanceId,\n                agentName: instance.agentName,\n                type: 'PM Delegation',\n                eventCount: instance.agentEvents.length,\n                startTime: instance.timestamp,\n                pmCall: instance.pmCall\n            });\n        }\n    }\n\n    /**\n     * Show implied agent details (agents without explicit PM delegation)\n     * @param {Object} impliedInstance - Implied agent instance\n     */\n    showImpliedAgentDetails(impliedInstance) {\n        if (this.moduleViewer && typeof this.moduleViewer.showImpliedAgent === 'function') {\n            this.moduleViewer.showImpliedAgent(impliedInstance);\n        } else {\n            // Fallback: show in console or basic modal\n            console.log('Implied Agent Details:', {\n                id: impliedInstance.id,\n                agentName: impliedInstance.agentName,\n                type: 'Implied PM Delegation',\n                eventCount: impliedInstance.eventCount,\n                startTime: impliedInstance.timestamp,\n                note: 'No explicit PM call found - inferred from agent activity'\n            });\n        }\n    }\n\n    /**\n     * Show tool details by index\n     */\n    showToolDetailsByIndex(index) {\n        const toolCalls = this.fileToolTracker.getToolCalls();\n        const toolCallsArray = Array.from(toolCalls.entries());\n        const filteredToolCalls = this.eventProcessor.applyToolCallFilters(toolCallsArray);\n\n        if (index >= 0 && index < filteredToolCalls.length) {\n            const [toolCallKey] = filteredToolCalls[index];\n            this.showToolCallDetails(toolCallKey);\n        }\n    }\n\n    /**\n     * Show file details by index\n     */\n    showFileDetailsByIndex(index) {\n        const fileOperations = this.fileToolTracker.getFileOperations();\n        let filesArray = Array.from(fileOperations.entries());\n        filesArray = this.eventProcessor.applyFilesFilters(filesArray);\n\n        if (index >= 0 && index < filesArray.length) {\n            const [filePath] = filesArray[index];\n            this.showFileDetails(filePath);\n        }\n    }\n\n    /**\n     * Show tool call details\n     */\n    showToolCallDetails(toolCallKey) {\n        const toolCall = this.fileToolTracker.getToolCall(toolCallKey);\n        if (toolCall && this.moduleViewer) {\n            this.moduleViewer.showToolCall(toolCall, toolCallKey);\n        }\n    }\n\n    /**\n     * Show file details\n     */\n    showFileDetails(filePath) {\n        const fileData = this.fileToolTracker.getFileOperationsForFile(filePath);\n        if (fileData && this.moduleViewer) {\n            this.moduleViewer.showFileOperations(fileData, filePath);\n        }\n    }\n\n    // ====================================\n    // BACKWARD COMPATIBILITY METHODS\n    // ====================================\n\n    /**\n     * Switch tab (backward compatibility)\n     */\n    switchTab(tabName) {\n        this.uiStateManager.switchTab(tabName);\n    }\n\n    /**\n     * Select card (backward compatibility)\n     */\n    selectCard(tabName, index, type, data) {\n        this.uiStateManager.selectCard(tabName, index, type, data);\n    }\n\n    /**\n     * Clear events (backward compatibility)\n     */\n    clearEvents() {\n        this.exportManager.clearEvents();\n    }\n\n    /**\n     * Export events (backward compatibility)\n     */\n    exportEvents() {\n        this.exportManager.exportEvents();\n    }\n\n    /**\n     * Clear selection (backward compatibility)\n     */\n    clearSelection() {\n        this.uiStateManager.clearSelection();\n        if (this.eventViewer) {\n            this.eventViewer.clearSelection();\n        }\n        if (this.moduleViewer) {\n            this.moduleViewer.clear();\n        }\n    }\n\n\n    /**\n     * Get current working directory (backward compatibility)\n     */\n    get currentWorkingDir() {\n        return this.workingDirectoryManager.getCurrentWorkingDir();\n    }\n\n    /**\n     * Set current working directory (backward compatibility)\n     */\n    set currentWorkingDir(dir) {\n        this.workingDirectoryManager.setWorkingDirectory(dir);\n    }\n\n    /**\n     * Get current tab (backward compatibility)\n     */\n    get currentTab() {\n        return this.uiStateManager.getCurrentTab();\n    }\n\n    /**\n     * Get selected card (backward compatibility)\n     */\n    get selectedCard() {\n        return this.uiStateManager.getSelectedCard();\n    }\n\n    /**\n     * Get file operations (backward compatibility)\n     */\n    get fileOperations() {\n        return this.fileToolTracker.getFileOperations();\n    }\n\n    /**\n     * Get tool calls (backward compatibility)\n     */\n    get toolCalls() {\n        return this.fileToolTracker.getToolCalls();\n    }\n\n\n    /**\n     * Get tab navigation state (backward compatibility)\n     */\n    get tabNavigation() {\n        return this.uiStateManager ? this.uiStateManager.tabNavigation : null;\n    }\n}\n\n// Global functions for backward compatibility\nwindow.clearEvents = function() {\n    if (window.dashboard) {\n        window.dashboard.clearEvents();\n    }\n};\n\nwindow.exportEvents = function() {\n    if (window.dashboard) {\n        window.dashboard.exportEvents();\n    }\n};\n\nwindow.clearSelection = function() {\n    if (window.dashboard) {\n        window.dashboard.clearSelection();\n    }\n};\n\nwindow.switchTab = function(tabName) {\n    if (window.dashboard) {\n        window.dashboard.switchTab(tabName);\n    }\n};\n\n// File Viewer Modal Functions - REMOVED DUPLICATE (keeping the one at line 1553)\nwindow.showFileViewerModal = function(filePath, workingDir) {\n    // Use the dashboard's current working directory if not provided\n    if (!workingDir && window.dashboard && window.dashboard.currentWorkingDir) {\n        workingDir = window.dashboard.currentWorkingDir;\n    }\n\n    // Create modal if it doesn't exist\n    let modal = document.getElementById('file-viewer-modal');\n    if (!modal) {\n        modal = createFileViewerModal();\n        document.body.appendChild(modal);\n    }\n\n    // Update modal content\n    updateFileViewerModal(modal, filePath, workingDir);\n\n    // Show the modal as flex container\n    modal.style.display = 'flex';\n    document.body.style.overflow = 'hidden'; // Prevent background scrolling\n};\n\nwindow.hideFileViewerModal = function() {\n    const modal = document.getElementById('file-viewer-modal');\n    if (modal) {\n        modal.style.display = 'none';\n        document.body.style.overflow = ''; // Restore background scrolling\n    }\n};\n\nwindow.copyFileContent = function() {\n    const modal = document.getElementById('file-viewer-modal');\n    if (!modal) return;\n\n    const codeElement = modal.querySelector('.file-content-code');\n    if (!codeElement) return;\n\n    const text = codeElement.textContent;\n\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard.writeText(text).then(() => {\n            // Show brief feedback\n            const button = modal.querySelector('.file-content-copy');\n            const originalText = button.textContent;\n            button.textContent = '✅ Copied!';\n            setTimeout(() => {\n                button.textContent = originalText;\n            }, 2000);\n        }).catch(err => {\n            console.error('Failed to copy text:', err);\n        });\n    } else {\n        // Fallback for older browsers\n        const textarea = document.createElement('textarea');\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textarea);\n\n        const button = modal.querySelector('.file-content-copy');\n        const originalText = button.textContent;\n        button.textContent = '✅ Copied!';\n        setTimeout(() => {\n            button.textContent = originalText;\n        }, 2000);\n    }\n};\n\nfunction createFileViewerModal() {\n    const modal = document.createElement('div');\n    modal.id = 'file-viewer-modal';\n    modal.className = 'modal file-viewer-modal';\n\n    modal.innerHTML = `\n        <div class=\"modal-content file-viewer-content\">\n            <div class=\"file-viewer-header\">\n                <h2 class=\"file-viewer-title\">\n                    <span class=\"file-viewer-icon\">📄</span>\n                    <span class=\"file-viewer-title-text\">File Viewer</span>\n                </h2>\n                <div class=\"file-viewer-meta\">\n                    <span class=\"file-viewer-file-path\"></span>\n                    <span class=\"file-viewer-file-size\"></span>\n                </div>\n                <button class=\"file-viewer-close\" onclick=\"hideFileViewerModal()\">\n                    <span>&times;</span>\n                </button>\n            </div>\n            <div class=\"file-viewer-body\">\n                <div class=\"file-viewer-loading\">\n                    <div class=\"loading-spinner\"></div>\n                    <span>Loading file content...</span>\n                </div>\n                <div class=\"file-viewer-error\" style=\"display: none;\">\n                    <div class=\"error-icon\">⚠️</div>\n                    <div class=\"error-message\"></div>\n                    <div class=\"error-suggestions\"></div>\n                </div>\n                <div class=\"file-viewer-content-area\" style=\"display: none;\">\n                    <div class=\"file-viewer-toolbar\">\n                        <div class=\"file-viewer-info\">\n                            <span class=\"file-extension\"></span>\n                            <span class=\"file-encoding\"></span>\n                        </div>\n                        <div class=\"file-viewer-actions\">\n                            <button class=\"file-content-copy\" onclick=\"copyFileContent()\">\n                                📋 Copy\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"file-viewer-scroll-wrapper\">\n                        <pre class=\"file-content-display\"><code class=\"file-content-code\"></code></pre>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    // Close modal when clicking outside\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal) {\n            hideFileViewerModal();\n        }\n    });\n\n    // Close modal with Escape key\n    document.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape' && modal.style.display === 'flex') {\n            hideFileViewerModal();\n        }\n    });\n\n    return modal;\n}\n\nasync function updateFileViewerModal(modal, filePath, workingDir) {\n    // Update header info\n    const filePathElement = modal.querySelector('.file-viewer-file-path');\n    const fileSizeElement = modal.querySelector('.file-viewer-file-size');\n\n    filePathElement.textContent = filePath;\n    fileSizeElement.textContent = '';\n\n    // Show loading state\n    modal.querySelector('.file-viewer-loading').style.display = 'flex';\n    modal.querySelector('.file-viewer-error').style.display = 'none';\n    modal.querySelector('.file-viewer-content-area').style.display = 'none';\n\n    try {\n        // Get the Socket.IO client\n        const socket = window.socket || window.dashboard?.socketClient?.socket;\n        if (!socket) {\n            throw new Error('No socket connection available');\n        }\n\n        // Set up one-time listener for file content response\n        const responsePromise = new Promise((resolve, reject) => {\n            const responseHandler = (data) => {\n                if (data.file_path === filePath) {\n                    socket.off('file_content_response', responseHandler);\n                    if (data.success) {\n                        resolve(data);\n                    } else {\n                        reject(new Error(data.error || 'Failed to read file'));\n                    }\n                }\n            };\n\n            socket.on('file_content_response', responseHandler);\n\n            // Timeout after 10 seconds\n            setTimeout(() => {\n                socket.off('file_content_response', responseHandler);\n                reject(new Error('Request timeout'));\n            }, 10000);\n        });\n\n        // Send file read request\n        socket.emit('read_file', {\n            file_path: filePath,\n            working_dir: workingDir\n        });\n\n        // File viewer request sent\n\n        // Wait for response\n        const result = await responsePromise;\n        // File content received successfully\n\n        // Hide loading\n        modal.querySelector('.file-viewer-loading').style.display = 'none';\n\n        // Show successful content\n        displayFileContent(modal, result);\n\n    } catch (error) {\n        console.error('❌ Failed to fetch file content:', error);\n\n        modal.querySelector('.file-viewer-loading').style.display = 'none';\n\n        // Create detailed error message\n        let errorMessage = error.message || 'Unknown error occurred';\n        let suggestions = [];\n\n        if (error.message.includes('No socket connection')) {\n            errorMessage = 'Failed to connect to the monitoring server';\n            suggestions = [\n                'Check if the monitoring server is running',\n                'Verify the socket connection in the dashboard',\n                'Try refreshing the page and reconnecting'\n            ];\n        } else if (error.message.includes('timeout')) {\n            errorMessage = 'Request timed out';\n            suggestions = [\n                'The file may be too large to load quickly',\n                'Check your network connection',\n                'Try again in a few moments'\n            ];\n        } else if (error.message.includes('File does not exist')) {\n            errorMessage = 'File not found';\n            suggestions = [\n                'The file may have been moved or deleted',\n                'Check the file path spelling',\n                'Refresh the file list to see current files'\n            ];\n        } else if (error.message.includes('Access denied')) {\n            errorMessage = 'Access denied';\n            suggestions = [\n                'The file is outside the allowed directories',\n                'File access is restricted for security reasons'\n            ];\n        }\n\n        displayFileError(modal, {\n            error: errorMessage,\n            file_path: filePath,\n            working_dir: workingDir,\n            suggestions: suggestions\n        });\n    }\n}\n\nfunction displayFileContent(modal, result) {\n    // Display file content in modal\n    const contentArea = modal.querySelector('.file-viewer-content-area');\n    const extensionElement = modal.querySelector('.file-extension');\n    const encodingElement = modal.querySelector('.file-encoding');\n    const fileSizeElement = modal.querySelector('.file-viewer-file-size');\n    const codeElement = modal.querySelector('.file-content-code');\n\n    // Update metadata\n    if (extensionElement) extensionElement.textContent = `Type: ${result.extension || 'unknown'}`;\n    if (encodingElement) encodingElement.textContent = `Encoding: ${result.encoding || 'unknown'}`;\n    if (fileSizeElement) fileSizeElement.textContent = `Size: ${formatFileSize(result.file_size)}`;\n\n    // Update content with basic syntax highlighting\n    if (codeElement && result.content) {\n        // Setting file content\n        codeElement.innerHTML = highlightCode(result.content, result.extension);\n\n        // Force scrolling to work by setting explicit heights\n        const wrapper = modal.querySelector('.file-viewer-scroll-wrapper');\n        if (wrapper) {\n            // Give it a moment for content to render\n            setTimeout(() => {\n                const modalContent = modal.querySelector('.modal-content');\n                const header = modal.querySelector('.file-viewer-header');\n                const toolbar = modal.querySelector('.file-viewer-toolbar');\n\n                const modalHeight = modalContent?.offsetHeight || 0;\n                const headerHeight = header?.offsetHeight || 0;\n                const toolbarHeight = toolbar?.offsetHeight || 0;\n\n                const availableHeight = modalHeight - headerHeight - toolbarHeight - 40; // 40px for padding\n\n                // Setting file viewer scroll height\n\n                wrapper.style.maxHeight = `${availableHeight}px`;\n                wrapper.style.overflowY = 'auto';\n            }, 50);\n        }\n    } else {\n        console.warn('⚠️ Missing codeElement or file content');\n    }\n\n    // Show content area\n    if (contentArea) {\n        contentArea.style.display = 'block';\n        // File content area displayed\n    }\n}\n\nfunction displayFileError(modal, result) {\n    const errorArea = modal.querySelector('.file-viewer-error');\n    const messageElement = modal.querySelector('.error-message');\n    const suggestionsElement = modal.querySelector('.error-suggestions');\n\n    let errorMessage = result.error || 'Unknown error occurred';\n\n    messageElement.innerHTML = `\n        <div class=\"error-main\">${errorMessage}</div>\n        ${result.file_path ? `<div class=\"error-file\">File: ${result.file_path}</div>` : ''}\n        ${result.working_dir ? `<div class=\"error-dir\">Working directory: ${result.working_dir}</div>` : ''}\n    `;\n\n    if (result.suggestions && result.suggestions.length > 0) {\n        suggestionsElement.innerHTML = `\n            <h4>Suggestions:</h4>\n            <ul>\n                ${result.suggestions.map(s => `<li>${s}</li>`).join('')}\n            </ul>\n        `;\n    } else {\n        suggestionsElement.innerHTML = '';\n    }\n\n    console.log('📋 Displaying file viewer error:', {\n        originalError: result.error,\n        processedMessage: errorMessage,\n        suggestions: result.suggestions\n    });\n\n    errorArea.style.display = 'block';\n}\n\nfunction highlightCode(code, extension) {\n    /**\n     * Apply basic syntax highlighting to code content\n     * WHY: Provides basic highlighting for common file types to improve readability.\n     * This is a simple implementation that can be enhanced with full syntax highlighting\n     * libraries like highlight.js or Prism.js if needed.\n     */\n\n    // Escape HTML entities first\n    const escaped = code\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n\n    // Basic highlighting based on file extension\n    switch (extension) {\n        case '.js':\n        case '.jsx':\n        case '.ts':\n        case '.tsx':\n            return highlightJavaScript(escaped);\n        case '.py':\n            return highlightPython(escaped);\n        case '.json':\n            return highlightJSON(escaped);\n        case '.css':\n            return highlightCSS(escaped);\n        case '.html':\n        case '.htm':\n            return highlightHTML(escaped);\n        case '.md':\n        case '.markdown':\n            return highlightMarkdown(escaped);\n        default:\n            // Return with line numbers for plain text\n            return addLineNumbers(escaped);\n    }\n}\n\nfunction highlightJavaScript(code) {\n    return addLineNumbers(code\n        .replace(/\\b(function|const|let|var|if|else|for|while|return|import|export|class|extends)\\b/g, '<span class=\"keyword\">$1</span>')\n        .replace(/(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/g, '<span class=\"comment\">$1</span>')\n        .replace(/('[^']*'|\"[^\"]*\"|`[^`]*`)/g, '<span class=\"string\">$1</span>')\n        .replace(/\\b(\\d+)\\b/g, '<span class=\"number\">$1</span>'));\n}\n\nfunction highlightPython(code) {\n    return addLineNumbers(code\n        .replace(/\\b(def|class|if|elif|else|for|while|return|import|from|as|try|except|finally|with)\\b/g, '<span class=\"keyword\">$1</span>')\n        .replace(/(#.*)/g, '<span class=\"comment\">$1</span>')\n        .replace(/('[^']*'|\"[^\"]*\"|\"\"\"[\\s\\S]*?\"\"\")/g, '<span class=\"string\">$1</span>')\n        .replace(/\\b(\\d+)\\b/g, '<span class=\"number\">$1</span>'));\n}\n\nfunction highlightJSON(code) {\n    return addLineNumbers(code\n        .replace(/(\"[\\w\\s]*\")\\s*:/g, '<span class=\"property\">$1</span>:')\n        .replace(/:\\s*(\".*?\")/g, ': <span class=\"string\">$1</span>')\n        .replace(/:\\s*(\\d+)/g, ': <span class=\"number\">$1</span>')\n        .replace(/:\\s*(true|false|null)/g, ': <span class=\"keyword\">$1</span>'));\n}\n\nfunction highlightCSS(code) {\n    return addLineNumbers(code\n        .replace(/([.#]?[\\w-]+)\\s*\\{/g, '<span class=\"selector\">$1</span> {')\n        .replace(/([\\w-]+)\\s*:/g, '<span class=\"property\">$1</span>:')\n        .replace(/:\\s*([^;]+);/g, ': <span class=\"value\">$1</span>;')\n        .replace(/(\\/\\*[\\s\\S]*?\\*\\/)/g, '<span class=\"comment\">$1</span>'));\n}\n\nfunction highlightHTML(code) {\n    return addLineNumbers(code\n        .replace(/(&lt;\\/?[\\w-]+)/g, '<span class=\"tag\">$1</span>')\n        .replace(/([\\w-]+)=(['\"][^'\"]*['\"])/g, '<span class=\"attribute\">$1</span>=<span class=\"string\">$2</span>')\n        .replace(/(&lt;!--[\\s\\S]*?--&gt;)/g, '<span class=\"comment\">$1</span>'));\n}\n\nfunction highlightMarkdown(code) {\n    return addLineNumbers(code\n        .replace(/^(#{1,6})\\s+(.*)$/gm, '<span class=\"header\">$1</span> <span class=\"header-text\">$2</span>')\n        .replace(/\\*\\*(.*?)\\*\\*/g, '<span class=\"bold\">**$1**</span>')\n        .replace(/\\*(.*?)\\*/g, '<span class=\"italic\">*$1*</span>')\n        .replace(/`([^`]+)`/g, '<span class=\"code\">`$1`</span>')\n        .replace(/^\\s*[-*+]\\s+(.*)$/gm, '<span class=\"list-marker\">•</span> $1'));\n}\n\nfunction addLineNumbers(code) {\n    const lines = code.split('\\n');\n    return lines.map((line, index) =>\n        `<span class=\"line-number\">${String(index + 1).padStart(3, ' ')}</span> ${line || ' '}`\n    ).join('\\n');\n}\n\nfunction formatFileSize(bytes) {\n    if (!bytes) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// File Viewer Modal Functions\nwindow.showFileViewerModal = function(filePath) {\n    // Use the dashboard's current working directory\n    let workingDir = '';\n    if (window.dashboard && window.dashboard.currentWorkingDir) {\n        workingDir = window.dashboard.currentWorkingDir;\n    }\n\n    // Create modal if it doesn't exist\n    let modal = document.getElementById('file-viewer-modal');\n    if (!modal) {\n        modal = createFileViewerModal();\n        document.body.appendChild(modal);\n    }\n\n    // Update modal content\n    updateFileViewerModal(modal, filePath, workingDir);\n\n    // Show the modal as flex container\n    modal.style.display = 'flex';\n    document.body.style.overflow = 'hidden'; // Prevent background scrolling\n};\n\nwindow.hideFileViewerModal = function() {\n    const modal = document.getElementById('file-viewer-modal');\n    if (modal) {\n        modal.style.display = 'none';\n        document.body.style.overflow = ''; // Restore background scrolling\n    }\n};\n\nwindow.copyFileContent = function() {\n    const modal = document.getElementById('file-viewer-modal');\n    if (!modal) return;\n\n    const codeElement = modal.querySelector('.file-content-code');\n    if (!codeElement) return;\n\n    const text = codeElement.textContent;\n\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard.writeText(text).then(() => {\n            // Show brief feedback\n            const button = modal.querySelector('.file-content-copy');\n            const originalText = button.textContent;\n            button.textContent = '✅ Copied!';\n            setTimeout(() => {\n                button.textContent = originalText;\n            }, 2000);\n        }).catch(err => {\n            console.error('Failed to copy text:', err);\n        });\n    } else {\n        // Fallback for older browsers\n        const textarea = document.createElement('textarea');\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textarea);\n\n        const button = modal.querySelector('.file-content-copy');\n        const originalText = button.textContent;\n        button.textContent = '✅ Copied!';\n        setTimeout(() => {\n            button.textContent = originalText;\n        }, 2000);\n    }\n};\n\n\n\n\nfunction displayFileContentError(modal, result) {\n    const errorArea = modal.querySelector('.file-viewer-error');\n    const messageElement = modal.querySelector('.error-message');\n    const suggestionsElement = modal.querySelector('.error-suggestions');\n\n    // Create user-friendly error messages\n    let errorMessage = result.error || 'Unknown error occurred';\n\n    if (errorMessage.includes('not found')) {\n        errorMessage = '📁 File not found or not accessible';\n    } else if (errorMessage.includes('permission')) {\n        errorMessage = '🔒 Permission denied accessing this file';\n    } else if (errorMessage.includes('too large')) {\n        errorMessage = '📏 File is too large to display';\n    } else if (!errorMessage.includes('📁') && !errorMessage.includes('🔒') && !errorMessage.includes('📏')) {\n        errorMessage = `⚠️ ${errorMessage}`;\n    }\n\n    messageElement.textContent = errorMessage;\n\n    // Add suggestions if available\n    if (result.suggestions && result.suggestions.length > 0) {\n        suggestionsElement.innerHTML = `\n            <h4>Suggestions:</h4>\n            <ul>\n                ${result.suggestions.map(suggestion => `<li>${suggestion}</li>`).join('')}\n            </ul>\n        `;\n    } else {\n        suggestionsElement.innerHTML = `\n            <h4>Try:</h4>\n            <ul>\n                <li>Check if the file exists and is readable</li>\n                <li>Verify file permissions</li>\n                <li>Ensure the monitoring server has access to this file</li>\n            </ul>\n        `;\n    }\n\n    console.log('📋 Displaying file content error:', {\n        originalError: result.error,\n        processedMessage: errorMessage,\n        suggestions: result.suggestions\n    });\n\n    errorArea.style.display = 'block';\n}\n\n// Search Viewer Modal Functions\nwindow.showSearchViewerModal = function(searchParams, searchResults) {\n    // Create modal if it doesn't exist\n    let modal = document.getElementById('search-viewer-modal');\n    if (!modal) {\n        modal = createSearchViewerModal();\n        document.body.appendChild(modal);\n    }\n\n    // Update modal content\n    updateSearchViewerModal(modal, searchParams, searchResults);\n\n    // Show the modal as flex container\n    modal.style.display = 'flex';\n    document.body.style.overflow = 'hidden'; // Prevent background scrolling\n};\n\nwindow.hideSearchViewerModal = function() {\n    const modal = document.getElementById('search-viewer-modal');\n    if (modal) {\n        modal.style.display = 'none';\n        document.body.style.overflow = ''; // Restore background scrolling\n    }\n};\n\nfunction createSearchViewerModal() {\n    const modal = document.createElement('div');\n    modal.id = 'search-viewer-modal';\n    modal.className = 'modal search-viewer-modal';\n\n    modal.innerHTML = `\n        <div class=\"modal-content search-viewer-content\">\n            <div class=\"search-viewer-header\">\n                <h2 class=\"search-viewer-title\">\n                    <span class=\"search-viewer-icon\">🔍</span>\n                    <span class=\"search-viewer-title-text\">Search Results</span>\n                </h2>\n                <button class=\"search-viewer-close\" onclick=\"hideSearchViewerModal()\">\n                    <span>&times;</span>\n                </button>\n            </div>\n            <div class=\"search-viewer-body\">\n                <div class=\"search-params-section\">\n                    <h3>Search Parameters</h3>\n                    <pre class=\"search-params-display\"></pre>\n                </div>\n                <div class=\"search-results-section\">\n                    <h3>Search Results</h3>\n                    <div class=\"search-results-display\"></div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    // Close modal when clicking outside\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal) {\n            hideSearchViewerModal();\n        }\n    });\n\n    // Close modal on Escape key\n    document.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape' && modal.style.display === 'flex') {\n            hideSearchViewerModal();\n        }\n    });\n\n    return modal;\n}\n\nfunction updateSearchViewerModal(modal, searchParams, searchResults) {\n    const paramsDisplay = modal.querySelector('.search-params-display');\n    const resultsDisplay = modal.querySelector('.search-results-display');\n\n    // Display search parameters in formatted JSON\n    if (paramsDisplay && searchParams) {\n        paramsDisplay.textContent = JSON.stringify(searchParams, null, 2);\n    }\n\n    // Display search results\n    if (resultsDisplay && searchResults) {\n        let resultsHTML = '';\n        \n        if (typeof searchResults === 'string') {\n            // If results are a string, display as preformatted text\n            resultsHTML = `<pre class=\"search-results-text\">${escapeHtml(searchResults)}</pre>`;\n        } else if (Array.isArray(searchResults)) {\n            // If results are an array, display as a list\n            resultsHTML = '<ul class=\"search-results-list\">';\n            searchResults.forEach(result => {\n                if (typeof result === 'object') {\n                    resultsHTML += `<li><pre>${JSON.stringify(result, null, 2)}</pre></li>`;\n                } else {\n                    resultsHTML += `<li>${escapeHtml(String(result))}</li>`;\n                }\n            });\n            resultsHTML += '</ul>';\n        } else if (typeof searchResults === 'object') {\n            // If results are an object, display as formatted JSON\n            resultsHTML = `<pre class=\"search-results-json\">${JSON.stringify(searchResults, null, 2)}</pre>`;\n        } else {\n            // Fallback: display as text\n            resultsHTML = `<div class=\"search-results-text\">${escapeHtml(String(searchResults))}</div>`;\n        }\n        \n        resultsDisplay.innerHTML = resultsHTML;\n    }\n}\n\nfunction escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n}\n\n// Global window functions for backward compatibility\nwindow.showAgentInstanceDetails = function(instanceId) {\n    if (window.dashboard && typeof window.dashboard.showAgentInstanceDetails === 'function') {\n        window.dashboard.showAgentInstanceDetails(instanceId);\n    } else {\n        console.error('Dashboard not available or method not found');\n    }\n};\n\n// Initialize dashboard when page loads\ndocument.addEventListener('DOMContentLoaded', function() {\n    try {\n        // Create dashboard instance\n        window.dashboard = new Dashboard();\n        \n        // Call post-initialization setup that requires window.dashboard\n        // This must happen after window.dashboard is set\n        if (window.dashboard && typeof window.dashboard.postInit === 'function') {\n            window.dashboard.postInit();\n        }\n        \n        console.log('Dashboard loaded and initialized successfully');\n        \n        // Dispatch custom event to signal dashboard ready\n        document.dispatchEvent(new CustomEvent('dashboardReady', {\n            detail: { dashboard: window.dashboard }\n        }));\n    } catch (error) {\n        console.error('Failed to initialize dashboard:', error);\n        // Show user-friendly error message\n        document.body.innerHTML = `\n            <div style=\"padding: 20px; font-family: sans-serif;\">\n                <h1>Dashboard Initialization Error</h1>\n                <p>The dashboard failed to load properly. Please refresh the page or check the console for details.</p>\n                <pre style=\"background: #f5f5f5; padding: 10px; border-radius: 4px;\">${error.message}</pre>\n            </div>\n        `;\n    }\n});\n\n// ES6 Module export\nexport { Dashboard };\nexport default Dashboard;\n"],"names":["AgentHierarchy","constructor","agentInference","eventViewer","this","state","hierarchyTree","nodeMap","Map","expandedNodes","Set","selectedNode","expandAll","setupEventListeners","console","log","document","addEventListener","event","toggleTarget","target","closest","window","dashboard","agentHierarchy","nodeId","dataset","toggleNode","buildHierarchy","processAgentInference","pmDelegations","getPMDelegations","events","eventAgentMap","getEventAgentMap","mainPM","id","type","name","children","eventCount","status","startTime","endTime","expanded","impliedPMGroups","clear","set","processedAgents","delegationId","delegation","agentNode","agentName","delegationContext","extractDelegationContext","pmCall","agentEvents","length","endIndex","timestamp","startIndex","has","push","add","Date","orphanGroups","getOrphanGroups","impliedPMCounter","groupingKey","orphans","impliedPM","isImplied","tooltip","agentEventGroups","orphan","forEach","index","inference","get","isOrphan","_","some","e","eventIndex","firstEvent","lastEvent","uncategorizedOrphans","child","genericImpliedPM","agentGroups","pmOwnEvents","hasActive","tree","roots","ownEvents","size","totalImpliedAgents","Array","from","values","reduce","sum","pm","params","tool_parameters","data","task","request","description","maxLength","substring","toolInput","tool_input","render","filters","applyFilters","map","root","renderNode","join","node","level","isExpanded","hasChildren","isSelected","icon","getNodeIcon","expandIcon","statusClass","getStatusClass","impliedClass","tooltipAttr","escapeHtml","html","duration","calculateDuration","formatTime","delete","renderCurrentTab","selectNode","CustomEvent","detail","dispatchEvent","Object","keys","filteredTree","filteredRoot","filterNode","matches","searchText","searchLower","toLowerCase","includes","agentType","filteredChildren","filteredChild","toLocaleTimeString","hour","minute","second","hour12","start","end","getTime","toFixed","Math","floor","text","div","createElement","textContent","innerHTML","updateWithNewEvents","expandAllNodes","collapseAllNodes","BuildTracker","element","buildInfo","monitor","version","build","formatted_build","full_version","mpm","socketClient","init","loadDashboardVersion","createElements","response","fetch","ok","versionData","json","error","className","mpmVersion","separator","monitorVersion","appendChild","title","setSocketClient","socket","on","eventData","build_info","updateBuildInfo","updateDisplay","mpmElement","querySelector","parentElement","monitorElement","last_updated","lastUpdated","toLocaleString","showDetailedInfo","info","modal","body","setTimeout","remove","mount","parent","parentNode","getElement","destroy","removeChild","off","Dashboard","moduleViewer","sessionManager","activityTreeRetryCount","maxRetryAttempts","socketManager","uiStateManager","eventProcessor","exportManager","workingDirectoryManager","fileToolTracker","buildTracker","initializeSocketManager","initializeCoreComponents","initializeBuildTracker","initializeAgentInference","initializeAgentHierarchy","initializeUIStateManager","initializeWorkingDirectoryManager","initializeFileToolTracker","initializeEventProcessor","initializeExportManager","setupModuleInteractions","initializeFromURL","validateInitialization","missing","component","filter","c","warn","postInit","SocketManager","setupConnectionControls","getSocketClient","EventViewer","ModuleViewer","SessionManager","mountBuildTracker","headerTitle","AgentInference","initialize","UIStateManager","setupTabFilters","WorkingDirectoryManager","FileToolTracker","EventProcessor","ExportManager","onEventUpdate","updateFileOperations","updateToolCalls","getCurrentTab","scrollListToBottom","onConnectionStatusChange","updateGitBranch","getCurrentWorkingDir","updateTabNavigationItems","showCardDetails","tabName","agentsSearchInput","getElementById","agentsTypeFilter","toolsSearchInput","toolsTypeFilter","filesSearchInput","filesTypeFilter","URLSearchParams","location","search","currentTab","ActivityTree","activityTreeInstance","initialized","renderWhenVisible","forceShow","activityTree","activityContainer","renderAgents","renderTools","renderFiles","getSelectedCard","tab","updateCardSelectionUI","updateUnifiedSelectionUI","agentsList","value","flatHTML","renderAgentsFlat","removeHierarchyControls","uniqueInstances","getUniqueAgentInstances","updateAgentsFilterDropdowns","existingControls","includeEvent","tool_name","JSON","stringify","item","listIndex","action","actionIcon","details","event_type","getToolIcon","file_path","command","pattern","query","formatTimestamp","getAgentIcon","getStatusIcon","PM","toolName","Read","Write","Edit","Bash","Grep","Glob","LS","Task","active","completed","pending","toolsList","toolCalls","getToolCalls","toolCallsArray","entries","uniqueToolInstances","getUniqueToolInstances","toolHTML","generateToolHTML","updateToolsFilterDropdowns","filesList","fileOperations","getFileOperations","filesArray","uniqueFileInstances","getUniqueFileInstances","fileHTML","generateFileHTML","updateFilesFilterDropdowns","agentTypes","instance","sortedTypes","trim","populateFilterDropdown","toolNames","key","toolCall","operations","flatMap","path","op","operation","selectId","allOption","select","currentValue","sortedValues","sort","a","b","localeCompare","option","showEventDetails","showAgentDetailsByIndex","showToolDetailsByIndex","showFileDetailsByIndex","getFilteredEventsForTab","isArray","filteredSingleEvent","applyAgentsFilters","showAgentEvent","showAgentInstanceDetails","instanceId","impliedInstance","find","inst","showImpliedAgentDetails","showAgentInstance","showImpliedAgent","note","filteredToolCalls","applyToolCallFilters","toolCallKey","showToolCallDetails","applyFilesFilters","filePath","showFileDetails","getToolCall","showToolCall","fileData","getFileOperationsForFile","showFileOperations","switchTab","selectCard","clearEvents","exportEvents","clearSelection","currentWorkingDir","dir","setWorkingDirectory","selectedCard","tabNavigation","createFileViewerModal","hideFileViewerModal","style","display","async","updateFileViewerModal","workingDir","filePathElement","fileSizeElement","Error","responsePromise","Promise","resolve","reject","responseHandler","success","emit","working_dir","result","contentArea","extensionElement","encodingElement","codeElement","extension","encoding","bytes","k","sizes","i","parseFloat","pow","formatFileSize","file_size","content","code","escaped","replace","addLineNumbers","highlightJavaScript","highlightPython","highlightJSON","highlightCSS","highlightHTML","highlightMarkdown","highlightCode","wrapper","modalContent","header","toolbar","availableHeight","offsetHeight","maxHeight","overflowY","displayFileContent","errorMessage","message","suggestions","errorArea","messageElement","suggestionsElement","s","originalError","processedMessage","displayFileError","split","line","String","padStart","showFileViewerModal","overflow","copyFileContent","navigator","clipboard","writeText","then","button","originalText","catch","err","textarea","execCommand","showSearchViewerModal","searchParams","searchResults","hideSearchViewerModal","createSearchViewerModal","paramsDisplay","resultsDisplay","resultsHTML","updateSearchViewerModal"],"mappings":"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"}